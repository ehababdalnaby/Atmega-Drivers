
Atmega32 drivers.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001a56  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000012  00800060  00001a56  00001aea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800072  00800072  00001afc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001afc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001b2c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000170  00000000  00000000  00001b68  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000219b  00000000  00000000  00001cd8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009ce  00000000  00000000  00003e73  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001157  00000000  00000000  00004841  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000450  00000000  00000000  00005998  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000075c  00000000  00000000  00005de8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000008c7  00000000  00000000  00006544  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000120  00000000  00000000  00006e0b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e6 e5       	ldi	r30, 0x56	; 86
      68:	fa e1       	ldi	r31, 0x1A	; 26
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a2 37       	cpi	r26, 0x72	; 114
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	20 e0       	ldi	r18, 0x00	; 0
      78:	a2 e7       	ldi	r26, 0x72	; 114
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a4 37       	cpi	r26, 0x74	; 116
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 49 00 	call	0x92	; 0x92 <main>
      8a:	0c 94 29 0d 	jmp	0x1a52	; 0x1a52 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:




int main(void)
{
      92:	cf 93       	push	r28
      94:	df 93       	push	r29
      96:	cd b7       	in	r28, 0x3d	; 61
      98:	de b7       	in	r29, 0x3e	; 62
      9a:	a3 97       	sbiw	r28, 0x23	; 35
      9c:	0f b6       	in	r0, 0x3f	; 63
      9e:	f8 94       	cli
      a0:	de bf       	out	0x3e, r29	; 62
      a2:	0f be       	out	0x3f, r0	; 63
      a4:	cd bf       	out	0x3d, r28	; 61
	SPI_Init(SPI_MASTER);
      a6:	80 e0       	ldi	r24, 0x00	; 0
      a8:	0e 94 87 0a 	call	0x150e	; 0x150e <SPI_Init>
	LCD_init();
      ac:	0e 94 bd 03 	call	0x77a	; 0x77a <LCD_init>
	u8 col=1;
      b0:	81 e0       	ldi	r24, 0x01	; 1
      b2:	89 83       	std	Y+1, r24	; 0x01
	// writeEEPROM(0x00,'A');
	u8 name[]="ehab abdo mahmoud";
      b4:	82 e1       	ldi	r24, 0x12	; 18
      b6:	e0 e6       	ldi	r30, 0x60	; 96
      b8:	f0 e0       	ldi	r31, 0x00	; 0
      ba:	de 01       	movw	r26, r28
      bc:	12 96       	adiw	r26, 0x02	; 2
      be:	01 90       	ld	r0, Z+
      c0:	0d 92       	st	X+, r0
      c2:	8a 95       	dec	r24
      c4:	e1 f7       	brne	.-8      	; 0xbe <main+0x2c>
	writePageEEPROM(0x00,name);
      c6:	ce 01       	movw	r24, r28
      c8:	02 96       	adiw	r24, 0x02	; 2
      ca:	bc 01       	movw	r22, r24
      cc:	80 e0       	ldi	r24, 0x00	; 0
      ce:	90 e0       	ldi	r25, 0x00	; 0
      d0:	0e 94 bb 02 	call	0x576	; 0x576 <writePageEEPROM>
	u8 name_modified[16];
	ReadEEPROMSTR(0x05,4,name_modified);
      d4:	ce 01       	movw	r24, r28
      d6:	44 96       	adiw	r24, 0x14	; 20
      d8:	ac 01       	movw	r20, r24
      da:	64 e0       	ldi	r22, 0x04	; 4
      dc:	85 e0       	ldi	r24, 0x05	; 5
      de:	90 e0       	ldi	r25, 0x00	; 0
      e0:	0e 94 88 03 	call	0x710	; 0x710 <ReadEEPROMSTR>
	disp_strXY(1,1,name_modified);
      e4:	ce 01       	movw	r24, r28
      e6:	44 96       	adiw	r24, 0x14	; 20
      e8:	ac 01       	movw	r20, r24
      ea:	61 e0       	ldi	r22, 0x01	; 1
      ec:	81 e0       	ldi	r24, 0x01	; 1
      ee:	0e 94 17 09 	call	0x122e	; 0x122e <disp_strXY>
      f2:	80 e0       	ldi	r24, 0x00	; 0
      f4:	90 e0       	ldi	r25, 0x00	; 0
// 		
// 		}

	 
	
}
      f6:	a3 96       	adiw	r28, 0x23	; 35
      f8:	0f b6       	in	r0, 0x3f	; 63
      fa:	f8 94       	cli
      fc:	de bf       	out	0x3e, r29	; 62
      fe:	0f be       	out	0x3f, r0	; 63
     100:	cd bf       	out	0x3d, r28	; 61
     102:	df 91       	pop	r29
     104:	cf 91       	pop	r28
     106:	08 95       	ret

00000108 <readEEPROM>:
	 writePin(PB4,HIGH);
	 _delay_ms(10);
	 WRITE_DI();
 }
 u8 readEEPROM(u16 location)
 {
     108:	cf 93       	push	r28
     10a:	df 93       	push	r29
     10c:	cd b7       	in	r28, 0x3d	; 61
     10e:	de b7       	in	r29, 0x3e	; 62
     110:	6f 97       	sbiw	r28, 0x1f	; 31
     112:	0f b6       	in	r0, 0x3f	; 63
     114:	f8 94       	cli
     116:	de bf       	out	0x3e, r29	; 62
     118:	0f be       	out	0x3f, r0	; 63
     11a:	cd bf       	out	0x3d, r28	; 61
     11c:	9f 8f       	std	Y+31, r25	; 0x1f
     11e:	8e 8f       	std	Y+30, r24	; 0x1e
	 u8 data;
	 writePin(PB4,LOW);
     120:	60 e0       	ldi	r22, 0x00	; 0
     122:	8c e0       	ldi	r24, 0x0C	; 12
     124:	0e 94 30 09 	call	0x1260	; 0x1260 <writePin>
     128:	80 e0       	ldi	r24, 0x00	; 0
     12a:	90 e0       	ldi	r25, 0x00	; 0
     12c:	a0 e8       	ldi	r26, 0x80	; 128
     12e:	bf e3       	ldi	r27, 0x3F	; 63
     130:	8a 83       	std	Y+2, r24	; 0x02
     132:	9b 83       	std	Y+3, r25	; 0x03
     134:	ac 83       	std	Y+4, r26	; 0x04
     136:	bd 83       	std	Y+5, r27	; 0x05

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     138:	20 e0       	ldi	r18, 0x00	; 0
     13a:	30 e0       	ldi	r19, 0x00	; 0
     13c:	4a ef       	ldi	r20, 0xFA	; 250
     13e:	54 e4       	ldi	r21, 0x44	; 68
     140:	6a 81       	ldd	r22, Y+2	; 0x02
     142:	7b 81       	ldd	r23, Y+3	; 0x03
     144:	8c 81       	ldd	r24, Y+4	; 0x04
     146:	9d 81       	ldd	r25, Y+5	; 0x05
     148:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__mulsf3>
     14c:	dc 01       	movw	r26, r24
     14e:	cb 01       	movw	r24, r22
     150:	8e 83       	std	Y+6, r24	; 0x06
     152:	9f 83       	std	Y+7, r25	; 0x07
     154:	a8 87       	std	Y+8, r26	; 0x08
     156:	b9 87       	std	Y+9, r27	; 0x09
	if (__tmp < 1.0)
     158:	20 e0       	ldi	r18, 0x00	; 0
     15a:	30 e0       	ldi	r19, 0x00	; 0
     15c:	40 e8       	ldi	r20, 0x80	; 128
     15e:	5f e3       	ldi	r21, 0x3F	; 63
     160:	6e 81       	ldd	r22, Y+6	; 0x06
     162:	7f 81       	ldd	r23, Y+7	; 0x07
     164:	88 85       	ldd	r24, Y+8	; 0x08
     166:	99 85       	ldd	r25, Y+9	; 0x09
     168:	0e 94 9c 0b 	call	0x1738	; 0x1738 <__cmpsf2>
     16c:	88 23       	and	r24, r24
     16e:	2c f4       	brge	.+10     	; 0x17a <readEEPROM+0x72>
		__ticks = 1;
     170:	81 e0       	ldi	r24, 0x01	; 1
     172:	90 e0       	ldi	r25, 0x00	; 0
     174:	9b 87       	std	Y+11, r25	; 0x0b
     176:	8a 87       	std	Y+10, r24	; 0x0a
     178:	3f c0       	rjmp	.+126    	; 0x1f8 <readEEPROM+0xf0>
	else if (__tmp > 65535)
     17a:	20 e0       	ldi	r18, 0x00	; 0
     17c:	3f ef       	ldi	r19, 0xFF	; 255
     17e:	4f e7       	ldi	r20, 0x7F	; 127
     180:	57 e4       	ldi	r21, 0x47	; 71
     182:	6e 81       	ldd	r22, Y+6	; 0x06
     184:	7f 81       	ldd	r23, Y+7	; 0x07
     186:	88 85       	ldd	r24, Y+8	; 0x08
     188:	99 85       	ldd	r25, Y+9	; 0x09
     18a:	0e 94 b7 0c 	call	0x196e	; 0x196e <__gesf2>
     18e:	18 16       	cp	r1, r24
     190:	4c f5       	brge	.+82     	; 0x1e4 <readEEPROM+0xdc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     192:	20 e0       	ldi	r18, 0x00	; 0
     194:	30 e0       	ldi	r19, 0x00	; 0
     196:	40 e2       	ldi	r20, 0x20	; 32
     198:	51 e4       	ldi	r21, 0x41	; 65
     19a:	6a 81       	ldd	r22, Y+2	; 0x02
     19c:	7b 81       	ldd	r23, Y+3	; 0x03
     19e:	8c 81       	ldd	r24, Y+4	; 0x04
     1a0:	9d 81       	ldd	r25, Y+5	; 0x05
     1a2:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__mulsf3>
     1a6:	dc 01       	movw	r26, r24
     1a8:	cb 01       	movw	r24, r22
     1aa:	bc 01       	movw	r22, r24
     1ac:	cd 01       	movw	r24, r26
     1ae:	0e 94 13 0c 	call	0x1826	; 0x1826 <__fixunssfsi>
     1b2:	dc 01       	movw	r26, r24
     1b4:	cb 01       	movw	r24, r22
     1b6:	9b 87       	std	Y+11, r25	; 0x0b
     1b8:	8a 87       	std	Y+10, r24	; 0x0a
     1ba:	0f c0       	rjmp	.+30     	; 0x1da <readEEPROM+0xd2>
     1bc:	88 ec       	ldi	r24, 0xC8	; 200
     1be:	90 e0       	ldi	r25, 0x00	; 0
     1c0:	9d 87       	std	Y+13, r25	; 0x0d
     1c2:	8c 87       	std	Y+12, r24	; 0x0c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     1c4:	8c 85       	ldd	r24, Y+12	; 0x0c
     1c6:	9d 85       	ldd	r25, Y+13	; 0x0d
     1c8:	01 97       	sbiw	r24, 0x01	; 1
     1ca:	f1 f7       	brne	.-4      	; 0x1c8 <readEEPROM+0xc0>
     1cc:	9d 87       	std	Y+13, r25	; 0x0d
     1ce:	8c 87       	std	Y+12, r24	; 0x0c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     1d0:	8a 85       	ldd	r24, Y+10	; 0x0a
     1d2:	9b 85       	ldd	r25, Y+11	; 0x0b
     1d4:	01 97       	sbiw	r24, 0x01	; 1
     1d6:	9b 87       	std	Y+11, r25	; 0x0b
     1d8:	8a 87       	std	Y+10, r24	; 0x0a
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     1da:	8a 85       	ldd	r24, Y+10	; 0x0a
     1dc:	9b 85       	ldd	r25, Y+11	; 0x0b
     1de:	89 2b       	or	r24, r25
     1e0:	69 f7       	brne	.-38     	; 0x1bc <readEEPROM+0xb4>
     1e2:	14 c0       	rjmp	.+40     	; 0x20c <readEEPROM+0x104>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     1e4:	6e 81       	ldd	r22, Y+6	; 0x06
     1e6:	7f 81       	ldd	r23, Y+7	; 0x07
     1e8:	88 85       	ldd	r24, Y+8	; 0x08
     1ea:	99 85       	ldd	r25, Y+9	; 0x09
     1ec:	0e 94 13 0c 	call	0x1826	; 0x1826 <__fixunssfsi>
     1f0:	dc 01       	movw	r26, r24
     1f2:	cb 01       	movw	r24, r22
     1f4:	9b 87       	std	Y+11, r25	; 0x0b
     1f6:	8a 87       	std	Y+10, r24	; 0x0a
     1f8:	8a 85       	ldd	r24, Y+10	; 0x0a
     1fa:	9b 85       	ldd	r25, Y+11	; 0x0b
     1fc:	9f 87       	std	Y+15, r25	; 0x0f
     1fe:	8e 87       	std	Y+14, r24	; 0x0e
     200:	8e 85       	ldd	r24, Y+14	; 0x0e
     202:	9f 85       	ldd	r25, Y+15	; 0x0f
     204:	01 97       	sbiw	r24, 0x01	; 1
     206:	f1 f7       	brne	.-4      	; 0x204 <readEEPROM+0xfc>
     208:	9f 87       	std	Y+15, r25	; 0x0f
     20a:	8e 87       	std	Y+14, r24	; 0x0e
	 _delay_ms(1);
	 SPI_Transceive(((location>>5)& ~(0x7))|EROM_COM_READ);
     20c:	8e 8d       	ldd	r24, Y+30	; 0x1e
     20e:	9f 8d       	ldd	r25, Y+31	; 0x1f
     210:	96 95       	lsr	r25
     212:	87 95       	ror	r24
     214:	92 95       	swap	r25
     216:	82 95       	swap	r24
     218:	8f 70       	andi	r24, 0x0F	; 15
     21a:	89 27       	eor	r24, r25
     21c:	9f 70       	andi	r25, 0x0F	; 15
     21e:	89 27       	eor	r24, r25
     220:	88 7f       	andi	r24, 0xF8	; 248
     222:	83 60       	ori	r24, 0x03	; 3
     224:	0e 94 15 0b 	call	0x162a	; 0x162a <SPI_Transceive>
	 SPI_Transceive((u8)location);
     228:	8e 8d       	ldd	r24, Y+30	; 0x1e
     22a:	0e 94 15 0b 	call	0x162a	; 0x162a <SPI_Transceive>
	 data= SPI_Transceive(0xff);	//send garbage to recieve right data
     22e:	8f ef       	ldi	r24, 0xFF	; 255
     230:	0e 94 15 0b 	call	0x162a	; 0x162a <SPI_Transceive>
     234:	89 83       	std	Y+1, r24	; 0x01
     236:	80 e0       	ldi	r24, 0x00	; 0
     238:	90 e0       	ldi	r25, 0x00	; 0
     23a:	a0 e2       	ldi	r26, 0x20	; 32
     23c:	b1 e4       	ldi	r27, 0x41	; 65
     23e:	88 8b       	std	Y+16, r24	; 0x10
     240:	99 8b       	std	Y+17, r25	; 0x11
     242:	aa 8b       	std	Y+18, r26	; 0x12
     244:	bb 8b       	std	Y+19, r27	; 0x13

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     246:	20 e0       	ldi	r18, 0x00	; 0
     248:	30 e0       	ldi	r19, 0x00	; 0
     24a:	4a ef       	ldi	r20, 0xFA	; 250
     24c:	54 e4       	ldi	r21, 0x44	; 68
     24e:	68 89       	ldd	r22, Y+16	; 0x10
     250:	79 89       	ldd	r23, Y+17	; 0x11
     252:	8a 89       	ldd	r24, Y+18	; 0x12
     254:	9b 89       	ldd	r25, Y+19	; 0x13
     256:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__mulsf3>
     25a:	dc 01       	movw	r26, r24
     25c:	cb 01       	movw	r24, r22
     25e:	8c 8b       	std	Y+20, r24	; 0x14
     260:	9d 8b       	std	Y+21, r25	; 0x15
     262:	ae 8b       	std	Y+22, r26	; 0x16
     264:	bf 8b       	std	Y+23, r27	; 0x17
	if (__tmp < 1.0)
     266:	20 e0       	ldi	r18, 0x00	; 0
     268:	30 e0       	ldi	r19, 0x00	; 0
     26a:	40 e8       	ldi	r20, 0x80	; 128
     26c:	5f e3       	ldi	r21, 0x3F	; 63
     26e:	6c 89       	ldd	r22, Y+20	; 0x14
     270:	7d 89       	ldd	r23, Y+21	; 0x15
     272:	8e 89       	ldd	r24, Y+22	; 0x16
     274:	9f 89       	ldd	r25, Y+23	; 0x17
     276:	0e 94 9c 0b 	call	0x1738	; 0x1738 <__cmpsf2>
     27a:	88 23       	and	r24, r24
     27c:	2c f4       	brge	.+10     	; 0x288 <readEEPROM+0x180>
		__ticks = 1;
     27e:	81 e0       	ldi	r24, 0x01	; 1
     280:	90 e0       	ldi	r25, 0x00	; 0
     282:	99 8f       	std	Y+25, r25	; 0x19
     284:	88 8f       	std	Y+24, r24	; 0x18
     286:	3f c0       	rjmp	.+126    	; 0x306 <readEEPROM+0x1fe>
	else if (__tmp > 65535)
     288:	20 e0       	ldi	r18, 0x00	; 0
     28a:	3f ef       	ldi	r19, 0xFF	; 255
     28c:	4f e7       	ldi	r20, 0x7F	; 127
     28e:	57 e4       	ldi	r21, 0x47	; 71
     290:	6c 89       	ldd	r22, Y+20	; 0x14
     292:	7d 89       	ldd	r23, Y+21	; 0x15
     294:	8e 89       	ldd	r24, Y+22	; 0x16
     296:	9f 89       	ldd	r25, Y+23	; 0x17
     298:	0e 94 b7 0c 	call	0x196e	; 0x196e <__gesf2>
     29c:	18 16       	cp	r1, r24
     29e:	4c f5       	brge	.+82     	; 0x2f2 <readEEPROM+0x1ea>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     2a0:	20 e0       	ldi	r18, 0x00	; 0
     2a2:	30 e0       	ldi	r19, 0x00	; 0
     2a4:	40 e2       	ldi	r20, 0x20	; 32
     2a6:	51 e4       	ldi	r21, 0x41	; 65
     2a8:	68 89       	ldd	r22, Y+16	; 0x10
     2aa:	79 89       	ldd	r23, Y+17	; 0x11
     2ac:	8a 89       	ldd	r24, Y+18	; 0x12
     2ae:	9b 89       	ldd	r25, Y+19	; 0x13
     2b0:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__mulsf3>
     2b4:	dc 01       	movw	r26, r24
     2b6:	cb 01       	movw	r24, r22
     2b8:	bc 01       	movw	r22, r24
     2ba:	cd 01       	movw	r24, r26
     2bc:	0e 94 13 0c 	call	0x1826	; 0x1826 <__fixunssfsi>
     2c0:	dc 01       	movw	r26, r24
     2c2:	cb 01       	movw	r24, r22
     2c4:	99 8f       	std	Y+25, r25	; 0x19
     2c6:	88 8f       	std	Y+24, r24	; 0x18
     2c8:	0f c0       	rjmp	.+30     	; 0x2e8 <readEEPROM+0x1e0>
     2ca:	88 ec       	ldi	r24, 0xC8	; 200
     2cc:	90 e0       	ldi	r25, 0x00	; 0
     2ce:	9b 8f       	std	Y+27, r25	; 0x1b
     2d0:	8a 8f       	std	Y+26, r24	; 0x1a
     2d2:	8a 8d       	ldd	r24, Y+26	; 0x1a
     2d4:	9b 8d       	ldd	r25, Y+27	; 0x1b
     2d6:	01 97       	sbiw	r24, 0x01	; 1
     2d8:	f1 f7       	brne	.-4      	; 0x2d6 <readEEPROM+0x1ce>
     2da:	9b 8f       	std	Y+27, r25	; 0x1b
     2dc:	8a 8f       	std	Y+26, r24	; 0x1a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     2de:	88 8d       	ldd	r24, Y+24	; 0x18
     2e0:	99 8d       	ldd	r25, Y+25	; 0x19
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	99 8f       	std	Y+25, r25	; 0x19
     2e6:	88 8f       	std	Y+24, r24	; 0x18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     2e8:	88 8d       	ldd	r24, Y+24	; 0x18
     2ea:	99 8d       	ldd	r25, Y+25	; 0x19
     2ec:	89 2b       	or	r24, r25
     2ee:	69 f7       	brne	.-38     	; 0x2ca <readEEPROM+0x1c2>
     2f0:	14 c0       	rjmp	.+40     	; 0x31a <readEEPROM+0x212>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     2f2:	6c 89       	ldd	r22, Y+20	; 0x14
     2f4:	7d 89       	ldd	r23, Y+21	; 0x15
     2f6:	8e 89       	ldd	r24, Y+22	; 0x16
     2f8:	9f 89       	ldd	r25, Y+23	; 0x17
     2fa:	0e 94 13 0c 	call	0x1826	; 0x1826 <__fixunssfsi>
     2fe:	dc 01       	movw	r26, r24
     300:	cb 01       	movw	r24, r22
     302:	99 8f       	std	Y+25, r25	; 0x19
     304:	88 8f       	std	Y+24, r24	; 0x18
     306:	88 8d       	ldd	r24, Y+24	; 0x18
     308:	99 8d       	ldd	r25, Y+25	; 0x19
     30a:	9d 8f       	std	Y+29, r25	; 0x1d
     30c:	8c 8f       	std	Y+28, r24	; 0x1c
     30e:	8c 8d       	ldd	r24, Y+28	; 0x1c
     310:	9d 8d       	ldd	r25, Y+29	; 0x1d
     312:	01 97       	sbiw	r24, 0x01	; 1
     314:	f1 f7       	brne	.-4      	; 0x312 <readEEPROM+0x20a>
     316:	9d 8f       	std	Y+29, r25	; 0x1d
     318:	8c 8f       	std	Y+28, r24	; 0x1c
	 _delay_ms(10);
	  writePin(PB4,HIGH);
     31a:	61 e0       	ldi	r22, 0x01	; 1
     31c:	8c e0       	ldi	r24, 0x0C	; 12
     31e:	0e 94 30 09 	call	0x1260	; 0x1260 <writePin>
	 return data;
     322:	89 81       	ldd	r24, Y+1	; 0x01
 }
     324:	6f 96       	adiw	r28, 0x1f	; 31
     326:	0f b6       	in	r0, 0x3f	; 63
     328:	f8 94       	cli
     32a:	de bf       	out	0x3e, r29	; 62
     32c:	0f be       	out	0x3f, r0	; 63
     32e:	cd bf       	out	0x3d, r28	; 61
     330:	df 91       	pop	r29
     332:	cf 91       	pop	r28
     334:	08 95       	ret

00000336 <WRITE_EN>:
 
 
 void WRITE_EN(void)
 {
     336:	cf 93       	push	r28
     338:	df 93       	push	r29
     33a:	cd b7       	in	r28, 0x3d	; 61
     33c:	de b7       	in	r29, 0x3e	; 62
     33e:	2e 97       	sbiw	r28, 0x0e	; 14
     340:	0f b6       	in	r0, 0x3f	; 63
     342:	f8 94       	cli
     344:	de bf       	out	0x3e, r29	; 62
     346:	0f be       	out	0x3f, r0	; 63
     348:	cd bf       	out	0x3d, r28	; 61
	 writePin(PB4,LOW);
     34a:	60 e0       	ldi	r22, 0x00	; 0
     34c:	8c e0       	ldi	r24, 0x0C	; 12
     34e:	0e 94 30 09 	call	0x1260	; 0x1260 <writePin>
	 SPI_Transceive(0x06);
     352:	86 e0       	ldi	r24, 0x06	; 6
     354:	0e 94 15 0b 	call	0x162a	; 0x162a <SPI_Transceive>
	 writePin(PB4,HIGH);
     358:	61 e0       	ldi	r22, 0x01	; 1
     35a:	8c e0       	ldi	r24, 0x0C	; 12
     35c:	0e 94 30 09 	call	0x1260	; 0x1260 <writePin>
     360:	80 e0       	ldi	r24, 0x00	; 0
     362:	90 e0       	ldi	r25, 0x00	; 0
     364:	a0 e0       	ldi	r26, 0x00	; 0
     366:	b0 e4       	ldi	r27, 0x40	; 64
     368:	89 83       	std	Y+1, r24	; 0x01
     36a:	9a 83       	std	Y+2, r25	; 0x02
     36c:	ab 83       	std	Y+3, r26	; 0x03
     36e:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     370:	20 e0       	ldi	r18, 0x00	; 0
     372:	30 e0       	ldi	r19, 0x00	; 0
     374:	4a ef       	ldi	r20, 0xFA	; 250
     376:	54 e4       	ldi	r21, 0x44	; 68
     378:	69 81       	ldd	r22, Y+1	; 0x01
     37a:	7a 81       	ldd	r23, Y+2	; 0x02
     37c:	8b 81       	ldd	r24, Y+3	; 0x03
     37e:	9c 81       	ldd	r25, Y+4	; 0x04
     380:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__mulsf3>
     384:	dc 01       	movw	r26, r24
     386:	cb 01       	movw	r24, r22
     388:	8d 83       	std	Y+5, r24	; 0x05
     38a:	9e 83       	std	Y+6, r25	; 0x06
     38c:	af 83       	std	Y+7, r26	; 0x07
     38e:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     390:	20 e0       	ldi	r18, 0x00	; 0
     392:	30 e0       	ldi	r19, 0x00	; 0
     394:	40 e8       	ldi	r20, 0x80	; 128
     396:	5f e3       	ldi	r21, 0x3F	; 63
     398:	6d 81       	ldd	r22, Y+5	; 0x05
     39a:	7e 81       	ldd	r23, Y+6	; 0x06
     39c:	8f 81       	ldd	r24, Y+7	; 0x07
     39e:	98 85       	ldd	r25, Y+8	; 0x08
     3a0:	0e 94 9c 0b 	call	0x1738	; 0x1738 <__cmpsf2>
     3a4:	88 23       	and	r24, r24
     3a6:	2c f4       	brge	.+10     	; 0x3b2 <WRITE_EN+0x7c>
		__ticks = 1;
     3a8:	81 e0       	ldi	r24, 0x01	; 1
     3aa:	90 e0       	ldi	r25, 0x00	; 0
     3ac:	9a 87       	std	Y+10, r25	; 0x0a
     3ae:	89 87       	std	Y+9, r24	; 0x09
     3b0:	3f c0       	rjmp	.+126    	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
	else if (__tmp > 65535)
     3b2:	20 e0       	ldi	r18, 0x00	; 0
     3b4:	3f ef       	ldi	r19, 0xFF	; 255
     3b6:	4f e7       	ldi	r20, 0x7F	; 127
     3b8:	57 e4       	ldi	r21, 0x47	; 71
     3ba:	6d 81       	ldd	r22, Y+5	; 0x05
     3bc:	7e 81       	ldd	r23, Y+6	; 0x06
     3be:	8f 81       	ldd	r24, Y+7	; 0x07
     3c0:	98 85       	ldd	r25, Y+8	; 0x08
     3c2:	0e 94 b7 0c 	call	0x196e	; 0x196e <__gesf2>
     3c6:	18 16       	cp	r1, r24
     3c8:	4c f5       	brge	.+82     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     3ca:	20 e0       	ldi	r18, 0x00	; 0
     3cc:	30 e0       	ldi	r19, 0x00	; 0
     3ce:	40 e2       	ldi	r20, 0x20	; 32
     3d0:	51 e4       	ldi	r21, 0x41	; 65
     3d2:	69 81       	ldd	r22, Y+1	; 0x01
     3d4:	7a 81       	ldd	r23, Y+2	; 0x02
     3d6:	8b 81       	ldd	r24, Y+3	; 0x03
     3d8:	9c 81       	ldd	r25, Y+4	; 0x04
     3da:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__mulsf3>
     3de:	dc 01       	movw	r26, r24
     3e0:	cb 01       	movw	r24, r22
     3e2:	bc 01       	movw	r22, r24
     3e4:	cd 01       	movw	r24, r26
     3e6:	0e 94 13 0c 	call	0x1826	; 0x1826 <__fixunssfsi>
     3ea:	dc 01       	movw	r26, r24
     3ec:	cb 01       	movw	r24, r22
     3ee:	9a 87       	std	Y+10, r25	; 0x0a
     3f0:	89 87       	std	Y+9, r24	; 0x09
     3f2:	0f c0       	rjmp	.+30     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
     3f4:	88 ec       	ldi	r24, 0xC8	; 200
     3f6:	90 e0       	ldi	r25, 0x00	; 0
     3f8:	9c 87       	std	Y+12, r25	; 0x0c
     3fa:	8b 87       	std	Y+11, r24	; 0x0b
     3fc:	8b 85       	ldd	r24, Y+11	; 0x0b
     3fe:	9c 85       	ldd	r25, Y+12	; 0x0c
     400:	01 97       	sbiw	r24, 0x01	; 1
     402:	f1 f7       	brne	.-4      	; 0x400 <__LOCK_REGION_LENGTH__>
     404:	9c 87       	std	Y+12, r25	; 0x0c
     406:	8b 87       	std	Y+11, r24	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     408:	89 85       	ldd	r24, Y+9	; 0x09
     40a:	9a 85       	ldd	r25, Y+10	; 0x0a
     40c:	01 97       	sbiw	r24, 0x01	; 1
     40e:	9a 87       	std	Y+10, r25	; 0x0a
     410:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     412:	89 85       	ldd	r24, Y+9	; 0x09
     414:	9a 85       	ldd	r25, Y+10	; 0x0a
     416:	89 2b       	or	r24, r25
     418:	69 f7       	brne	.-38     	; 0x3f4 <WRITE_EN+0xbe>
     41a:	14 c0       	rjmp	.+40     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     41c:	6d 81       	ldd	r22, Y+5	; 0x05
     41e:	7e 81       	ldd	r23, Y+6	; 0x06
     420:	8f 81       	ldd	r24, Y+7	; 0x07
     422:	98 85       	ldd	r25, Y+8	; 0x08
     424:	0e 94 13 0c 	call	0x1826	; 0x1826 <__fixunssfsi>
     428:	dc 01       	movw	r26, r24
     42a:	cb 01       	movw	r24, r22
     42c:	9a 87       	std	Y+10, r25	; 0x0a
     42e:	89 87       	std	Y+9, r24	; 0x09
     430:	89 85       	ldd	r24, Y+9	; 0x09
     432:	9a 85       	ldd	r25, Y+10	; 0x0a
     434:	9e 87       	std	Y+14, r25	; 0x0e
     436:	8d 87       	std	Y+13, r24	; 0x0d
     438:	8d 85       	ldd	r24, Y+13	; 0x0d
     43a:	9e 85       	ldd	r25, Y+14	; 0x0e
     43c:	01 97       	sbiw	r24, 0x01	; 1
     43e:	f1 f7       	brne	.-4      	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
     440:	9e 87       	std	Y+14, r25	; 0x0e
     442:	8d 87       	std	Y+13, r24	; 0x0d
	 _delay_ms(2);
 }
     444:	2e 96       	adiw	r28, 0x0e	; 14
     446:	0f b6       	in	r0, 0x3f	; 63
     448:	f8 94       	cli
     44a:	de bf       	out	0x3e, r29	; 62
     44c:	0f be       	out	0x3f, r0	; 63
     44e:	cd bf       	out	0x3d, r28	; 61
     450:	df 91       	pop	r29
     452:	cf 91       	pop	r28
     454:	08 95       	ret

00000456 <WRITE_DI>:
 
 
  void WRITE_DI(void)
  {
     456:	cf 93       	push	r28
     458:	df 93       	push	r29
     45a:	cd b7       	in	r28, 0x3d	; 61
     45c:	de b7       	in	r29, 0x3e	; 62
     45e:	2e 97       	sbiw	r28, 0x0e	; 14
     460:	0f b6       	in	r0, 0x3f	; 63
     462:	f8 94       	cli
     464:	de bf       	out	0x3e, r29	; 62
     466:	0f be       	out	0x3f, r0	; 63
     468:	cd bf       	out	0x3d, r28	; 61
	  writePin(PB4,LOW);
     46a:	60 e0       	ldi	r22, 0x00	; 0
     46c:	8c e0       	ldi	r24, 0x0C	; 12
     46e:	0e 94 30 09 	call	0x1260	; 0x1260 <writePin>
	  SPI_Transceive(0x04);
     472:	84 e0       	ldi	r24, 0x04	; 4
     474:	0e 94 15 0b 	call	0x162a	; 0x162a <SPI_Transceive>
	  writePin(PB4,HIGH);
     478:	61 e0       	ldi	r22, 0x01	; 1
     47a:	8c e0       	ldi	r24, 0x0C	; 12
     47c:	0e 94 30 09 	call	0x1260	; 0x1260 <writePin>
     480:	80 e0       	ldi	r24, 0x00	; 0
     482:	90 e0       	ldi	r25, 0x00	; 0
     484:	a0 e0       	ldi	r26, 0x00	; 0
     486:	b0 e4       	ldi	r27, 0x40	; 64
     488:	89 83       	std	Y+1, r24	; 0x01
     48a:	9a 83       	std	Y+2, r25	; 0x02
     48c:	ab 83       	std	Y+3, r26	; 0x03
     48e:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     490:	20 e0       	ldi	r18, 0x00	; 0
     492:	30 e0       	ldi	r19, 0x00	; 0
     494:	4a ef       	ldi	r20, 0xFA	; 250
     496:	54 e4       	ldi	r21, 0x44	; 68
     498:	69 81       	ldd	r22, Y+1	; 0x01
     49a:	7a 81       	ldd	r23, Y+2	; 0x02
     49c:	8b 81       	ldd	r24, Y+3	; 0x03
     49e:	9c 81       	ldd	r25, Y+4	; 0x04
     4a0:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__mulsf3>
     4a4:	dc 01       	movw	r26, r24
     4a6:	cb 01       	movw	r24, r22
     4a8:	8d 83       	std	Y+5, r24	; 0x05
     4aa:	9e 83       	std	Y+6, r25	; 0x06
     4ac:	af 83       	std	Y+7, r26	; 0x07
     4ae:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     4b0:	20 e0       	ldi	r18, 0x00	; 0
     4b2:	30 e0       	ldi	r19, 0x00	; 0
     4b4:	40 e8       	ldi	r20, 0x80	; 128
     4b6:	5f e3       	ldi	r21, 0x3F	; 63
     4b8:	6d 81       	ldd	r22, Y+5	; 0x05
     4ba:	7e 81       	ldd	r23, Y+6	; 0x06
     4bc:	8f 81       	ldd	r24, Y+7	; 0x07
     4be:	98 85       	ldd	r25, Y+8	; 0x08
     4c0:	0e 94 9c 0b 	call	0x1738	; 0x1738 <__cmpsf2>
     4c4:	88 23       	and	r24, r24
     4c6:	2c f4       	brge	.+10     	; 0x4d2 <WRITE_DI+0x7c>
		__ticks = 1;
     4c8:	81 e0       	ldi	r24, 0x01	; 1
     4ca:	90 e0       	ldi	r25, 0x00	; 0
     4cc:	9a 87       	std	Y+10, r25	; 0x0a
     4ce:	89 87       	std	Y+9, r24	; 0x09
     4d0:	3f c0       	rjmp	.+126    	; 0x550 <WRITE_DI+0xfa>
	else if (__tmp > 65535)
     4d2:	20 e0       	ldi	r18, 0x00	; 0
     4d4:	3f ef       	ldi	r19, 0xFF	; 255
     4d6:	4f e7       	ldi	r20, 0x7F	; 127
     4d8:	57 e4       	ldi	r21, 0x47	; 71
     4da:	6d 81       	ldd	r22, Y+5	; 0x05
     4dc:	7e 81       	ldd	r23, Y+6	; 0x06
     4de:	8f 81       	ldd	r24, Y+7	; 0x07
     4e0:	98 85       	ldd	r25, Y+8	; 0x08
     4e2:	0e 94 b7 0c 	call	0x196e	; 0x196e <__gesf2>
     4e6:	18 16       	cp	r1, r24
     4e8:	4c f5       	brge	.+82     	; 0x53c <WRITE_DI+0xe6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     4ea:	20 e0       	ldi	r18, 0x00	; 0
     4ec:	30 e0       	ldi	r19, 0x00	; 0
     4ee:	40 e2       	ldi	r20, 0x20	; 32
     4f0:	51 e4       	ldi	r21, 0x41	; 65
     4f2:	69 81       	ldd	r22, Y+1	; 0x01
     4f4:	7a 81       	ldd	r23, Y+2	; 0x02
     4f6:	8b 81       	ldd	r24, Y+3	; 0x03
     4f8:	9c 81       	ldd	r25, Y+4	; 0x04
     4fa:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__mulsf3>
     4fe:	dc 01       	movw	r26, r24
     500:	cb 01       	movw	r24, r22
     502:	bc 01       	movw	r22, r24
     504:	cd 01       	movw	r24, r26
     506:	0e 94 13 0c 	call	0x1826	; 0x1826 <__fixunssfsi>
     50a:	dc 01       	movw	r26, r24
     50c:	cb 01       	movw	r24, r22
     50e:	9a 87       	std	Y+10, r25	; 0x0a
     510:	89 87       	std	Y+9, r24	; 0x09
     512:	0f c0       	rjmp	.+30     	; 0x532 <WRITE_DI+0xdc>
     514:	88 ec       	ldi	r24, 0xC8	; 200
     516:	90 e0       	ldi	r25, 0x00	; 0
     518:	9c 87       	std	Y+12, r25	; 0x0c
     51a:	8b 87       	std	Y+11, r24	; 0x0b
     51c:	8b 85       	ldd	r24, Y+11	; 0x0b
     51e:	9c 85       	ldd	r25, Y+12	; 0x0c
     520:	01 97       	sbiw	r24, 0x01	; 1
     522:	f1 f7       	brne	.-4      	; 0x520 <WRITE_DI+0xca>
     524:	9c 87       	std	Y+12, r25	; 0x0c
     526:	8b 87       	std	Y+11, r24	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     528:	89 85       	ldd	r24, Y+9	; 0x09
     52a:	9a 85       	ldd	r25, Y+10	; 0x0a
     52c:	01 97       	sbiw	r24, 0x01	; 1
     52e:	9a 87       	std	Y+10, r25	; 0x0a
     530:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     532:	89 85       	ldd	r24, Y+9	; 0x09
     534:	9a 85       	ldd	r25, Y+10	; 0x0a
     536:	89 2b       	or	r24, r25
     538:	69 f7       	brne	.-38     	; 0x514 <WRITE_DI+0xbe>
     53a:	14 c0       	rjmp	.+40     	; 0x564 <WRITE_DI+0x10e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     53c:	6d 81       	ldd	r22, Y+5	; 0x05
     53e:	7e 81       	ldd	r23, Y+6	; 0x06
     540:	8f 81       	ldd	r24, Y+7	; 0x07
     542:	98 85       	ldd	r25, Y+8	; 0x08
     544:	0e 94 13 0c 	call	0x1826	; 0x1826 <__fixunssfsi>
     548:	dc 01       	movw	r26, r24
     54a:	cb 01       	movw	r24, r22
     54c:	9a 87       	std	Y+10, r25	; 0x0a
     54e:	89 87       	std	Y+9, r24	; 0x09
     550:	89 85       	ldd	r24, Y+9	; 0x09
     552:	9a 85       	ldd	r25, Y+10	; 0x0a
     554:	9e 87       	std	Y+14, r25	; 0x0e
     556:	8d 87       	std	Y+13, r24	; 0x0d
     558:	8d 85       	ldd	r24, Y+13	; 0x0d
     55a:	9e 85       	ldd	r25, Y+14	; 0x0e
     55c:	01 97       	sbiw	r24, 0x01	; 1
     55e:	f1 f7       	brne	.-4      	; 0x55c <WRITE_DI+0x106>
     560:	9e 87       	std	Y+14, r25	; 0x0e
     562:	8d 87       	std	Y+13, r24	; 0x0d
	  _delay_ms(2);
  }
     564:	2e 96       	adiw	r28, 0x0e	; 14
     566:	0f b6       	in	r0, 0x3f	; 63
     568:	f8 94       	cli
     56a:	de bf       	out	0x3e, r29	; 62
     56c:	0f be       	out	0x3f, r0	; 63
     56e:	cd bf       	out	0x3d, r28	; 61
     570:	df 91       	pop	r29
     572:	cf 91       	pop	r28
     574:	08 95       	ret

00000576 <writePageEEPROM>:
  
  
  
 void writePageEEPROM(u16 location,u8* str)
 {
     576:	cf 93       	push	r28
     578:	df 93       	push	r29
     57a:	cd b7       	in	r28, 0x3d	; 61
     57c:	de b7       	in	r29, 0x3e	; 62
     57e:	63 97       	sbiw	r28, 0x13	; 19
     580:	0f b6       	in	r0, 0x3f	; 63
     582:	f8 94       	cli
     584:	de bf       	out	0x3e, r29	; 62
     586:	0f be       	out	0x3f, r0	; 63
     588:	cd bf       	out	0x3d, r28	; 61
     58a:	99 8b       	std	Y+17, r25	; 0x11
     58c:	88 8b       	std	Y+16, r24	; 0x10
     58e:	7b 8b       	std	Y+19, r23	; 0x13
     590:	6a 8b       	std	Y+18, r22	; 0x12
	 u8 index=0;
     592:	19 82       	std	Y+1, r1	; 0x01
	  WRITE_EN();					//write enable
     594:	0e 94 9b 01 	call	0x336	; 0x336 <WRITE_EN>
	  writePin(PB4,LOW);			//CS enable
     598:	60 e0       	ldi	r22, 0x00	; 0
     59a:	8c e0       	ldi	r24, 0x0C	; 12
     59c:	0e 94 30 09 	call	0x1260	; 0x1260 <writePin>
	  SPI_Transceive(((location>>5)& ~(0x7))|EROM_COM_WRITE);
     5a0:	88 89       	ldd	r24, Y+16	; 0x10
     5a2:	99 89       	ldd	r25, Y+17	; 0x11
     5a4:	96 95       	lsr	r25
     5a6:	87 95       	ror	r24
     5a8:	92 95       	swap	r25
     5aa:	82 95       	swap	r24
     5ac:	8f 70       	andi	r24, 0x0F	; 15
     5ae:	89 27       	eor	r24, r25
     5b0:	9f 70       	andi	r25, 0x0F	; 15
     5b2:	89 27       	eor	r24, r25
     5b4:	88 7f       	andi	r24, 0xF8	; 248
     5b6:	82 60       	ori	r24, 0x02	; 2
     5b8:	0e 94 15 0b 	call	0x162a	; 0x162a <SPI_Transceive>
	  SPI_Transceive((u8) location);
     5bc:	88 89       	ldd	r24, Y+16	; 0x10
     5be:	0e 94 15 0b 	call	0x162a	; 0x162a <SPI_Transceive>
	  while(str[index]!='\0'&&(index<16))
     5c2:	17 c0       	rjmp	.+46     	; 0x5f2 <writePageEEPROM+0x7c>
	  {
		  SPI_Transceive(str[index]);
     5c4:	89 81       	ldd	r24, Y+1	; 0x01
     5c6:	88 2f       	mov	r24, r24
     5c8:	90 e0       	ldi	r25, 0x00	; 0
     5ca:	2a 89       	ldd	r18, Y+18	; 0x12
     5cc:	3b 89       	ldd	r19, Y+19	; 0x13
     5ce:	82 0f       	add	r24, r18
     5d0:	93 1f       	adc	r25, r19
     5d2:	fc 01       	movw	r30, r24
     5d4:	80 81       	ld	r24, Z
     5d6:	0e 94 15 0b 	call	0x162a	; 0x162a <SPI_Transceive>
		  index++;
     5da:	89 81       	ldd	r24, Y+1	; 0x01
     5dc:	8f 5f       	subi	r24, 0xFF	; 255
     5de:	89 83       	std	Y+1, r24	; 0x01
		  autoAddress++;
     5e0:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <__data_end>
     5e4:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <__data_end+0x1>
     5e8:	01 96       	adiw	r24, 0x01	; 1
     5ea:	90 93 73 00 	sts	0x0073, r25	; 0x800073 <__data_end+0x1>
     5ee:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <__data_end>
	 u8 index=0;
	  WRITE_EN();					//write enable
	  writePin(PB4,LOW);			//CS enable
	  SPI_Transceive(((location>>5)& ~(0x7))|EROM_COM_WRITE);
	  SPI_Transceive((u8) location);
	  while(str[index]!='\0'&&(index<16))
     5f2:	89 81       	ldd	r24, Y+1	; 0x01
     5f4:	88 2f       	mov	r24, r24
     5f6:	90 e0       	ldi	r25, 0x00	; 0
     5f8:	2a 89       	ldd	r18, Y+18	; 0x12
     5fa:	3b 89       	ldd	r19, Y+19	; 0x13
     5fc:	82 0f       	add	r24, r18
     5fe:	93 1f       	adc	r25, r19
     600:	fc 01       	movw	r30, r24
     602:	80 81       	ld	r24, Z
     604:	88 23       	and	r24, r24
     606:	19 f0       	breq	.+6      	; 0x60e <writePageEEPROM+0x98>
     608:	89 81       	ldd	r24, Y+1	; 0x01
     60a:	80 31       	cpi	r24, 0x10	; 16
     60c:	d8 f2       	brcs	.-74     	; 0x5c4 <writePageEEPROM+0x4e>
		  SPI_Transceive(str[index]);
		  index++;
		  autoAddress++;
		  
	  }
	  writePin(PB4,HIGH);  
     60e:	61 e0       	ldi	r22, 0x01	; 1
     610:	8c e0       	ldi	r24, 0x0C	; 12
     612:	0e 94 30 09 	call	0x1260	; 0x1260 <writePin>
     616:	80 e0       	ldi	r24, 0x00	; 0
     618:	90 e0       	ldi	r25, 0x00	; 0
     61a:	a0 e2       	ldi	r26, 0x20	; 32
     61c:	b1 e4       	ldi	r27, 0x41	; 65
     61e:	8a 83       	std	Y+2, r24	; 0x02
     620:	9b 83       	std	Y+3, r25	; 0x03
     622:	ac 83       	std	Y+4, r26	; 0x04
     624:	bd 83       	std	Y+5, r27	; 0x05

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     626:	20 e0       	ldi	r18, 0x00	; 0
     628:	30 e0       	ldi	r19, 0x00	; 0
     62a:	4a ef       	ldi	r20, 0xFA	; 250
     62c:	54 e4       	ldi	r21, 0x44	; 68
     62e:	6a 81       	ldd	r22, Y+2	; 0x02
     630:	7b 81       	ldd	r23, Y+3	; 0x03
     632:	8c 81       	ldd	r24, Y+4	; 0x04
     634:	9d 81       	ldd	r25, Y+5	; 0x05
     636:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__mulsf3>
     63a:	dc 01       	movw	r26, r24
     63c:	cb 01       	movw	r24, r22
     63e:	8e 83       	std	Y+6, r24	; 0x06
     640:	9f 83       	std	Y+7, r25	; 0x07
     642:	a8 87       	std	Y+8, r26	; 0x08
     644:	b9 87       	std	Y+9, r27	; 0x09
	if (__tmp < 1.0)
     646:	20 e0       	ldi	r18, 0x00	; 0
     648:	30 e0       	ldi	r19, 0x00	; 0
     64a:	40 e8       	ldi	r20, 0x80	; 128
     64c:	5f e3       	ldi	r21, 0x3F	; 63
     64e:	6e 81       	ldd	r22, Y+6	; 0x06
     650:	7f 81       	ldd	r23, Y+7	; 0x07
     652:	88 85       	ldd	r24, Y+8	; 0x08
     654:	99 85       	ldd	r25, Y+9	; 0x09
     656:	0e 94 9c 0b 	call	0x1738	; 0x1738 <__cmpsf2>
     65a:	88 23       	and	r24, r24
     65c:	2c f4       	brge	.+10     	; 0x668 <writePageEEPROM+0xf2>
		__ticks = 1;
     65e:	81 e0       	ldi	r24, 0x01	; 1
     660:	90 e0       	ldi	r25, 0x00	; 0
     662:	9b 87       	std	Y+11, r25	; 0x0b
     664:	8a 87       	std	Y+10, r24	; 0x0a
     666:	3f c0       	rjmp	.+126    	; 0x6e6 <writePageEEPROM+0x170>
	else if (__tmp > 65535)
     668:	20 e0       	ldi	r18, 0x00	; 0
     66a:	3f ef       	ldi	r19, 0xFF	; 255
     66c:	4f e7       	ldi	r20, 0x7F	; 127
     66e:	57 e4       	ldi	r21, 0x47	; 71
     670:	6e 81       	ldd	r22, Y+6	; 0x06
     672:	7f 81       	ldd	r23, Y+7	; 0x07
     674:	88 85       	ldd	r24, Y+8	; 0x08
     676:	99 85       	ldd	r25, Y+9	; 0x09
     678:	0e 94 b7 0c 	call	0x196e	; 0x196e <__gesf2>
     67c:	18 16       	cp	r1, r24
     67e:	4c f5       	brge	.+82     	; 0x6d2 <writePageEEPROM+0x15c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     680:	20 e0       	ldi	r18, 0x00	; 0
     682:	30 e0       	ldi	r19, 0x00	; 0
     684:	40 e2       	ldi	r20, 0x20	; 32
     686:	51 e4       	ldi	r21, 0x41	; 65
     688:	6a 81       	ldd	r22, Y+2	; 0x02
     68a:	7b 81       	ldd	r23, Y+3	; 0x03
     68c:	8c 81       	ldd	r24, Y+4	; 0x04
     68e:	9d 81       	ldd	r25, Y+5	; 0x05
     690:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__mulsf3>
     694:	dc 01       	movw	r26, r24
     696:	cb 01       	movw	r24, r22
     698:	bc 01       	movw	r22, r24
     69a:	cd 01       	movw	r24, r26
     69c:	0e 94 13 0c 	call	0x1826	; 0x1826 <__fixunssfsi>
     6a0:	dc 01       	movw	r26, r24
     6a2:	cb 01       	movw	r24, r22
     6a4:	9b 87       	std	Y+11, r25	; 0x0b
     6a6:	8a 87       	std	Y+10, r24	; 0x0a
     6a8:	0f c0       	rjmp	.+30     	; 0x6c8 <writePageEEPROM+0x152>
     6aa:	88 ec       	ldi	r24, 0xC8	; 200
     6ac:	90 e0       	ldi	r25, 0x00	; 0
     6ae:	9d 87       	std	Y+13, r25	; 0x0d
     6b0:	8c 87       	std	Y+12, r24	; 0x0c
     6b2:	8c 85       	ldd	r24, Y+12	; 0x0c
     6b4:	9d 85       	ldd	r25, Y+13	; 0x0d
     6b6:	01 97       	sbiw	r24, 0x01	; 1
     6b8:	f1 f7       	brne	.-4      	; 0x6b6 <writePageEEPROM+0x140>
     6ba:	9d 87       	std	Y+13, r25	; 0x0d
     6bc:	8c 87       	std	Y+12, r24	; 0x0c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     6be:	8a 85       	ldd	r24, Y+10	; 0x0a
     6c0:	9b 85       	ldd	r25, Y+11	; 0x0b
     6c2:	01 97       	sbiw	r24, 0x01	; 1
     6c4:	9b 87       	std	Y+11, r25	; 0x0b
     6c6:	8a 87       	std	Y+10, r24	; 0x0a
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     6c8:	8a 85       	ldd	r24, Y+10	; 0x0a
     6ca:	9b 85       	ldd	r25, Y+11	; 0x0b
     6cc:	89 2b       	or	r24, r25
     6ce:	69 f7       	brne	.-38     	; 0x6aa <writePageEEPROM+0x134>
     6d0:	14 c0       	rjmp	.+40     	; 0x6fa <writePageEEPROM+0x184>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     6d2:	6e 81       	ldd	r22, Y+6	; 0x06
     6d4:	7f 81       	ldd	r23, Y+7	; 0x07
     6d6:	88 85       	ldd	r24, Y+8	; 0x08
     6d8:	99 85       	ldd	r25, Y+9	; 0x09
     6da:	0e 94 13 0c 	call	0x1826	; 0x1826 <__fixunssfsi>
     6de:	dc 01       	movw	r26, r24
     6e0:	cb 01       	movw	r24, r22
     6e2:	9b 87       	std	Y+11, r25	; 0x0b
     6e4:	8a 87       	std	Y+10, r24	; 0x0a
     6e6:	8a 85       	ldd	r24, Y+10	; 0x0a
     6e8:	9b 85       	ldd	r25, Y+11	; 0x0b
     6ea:	9f 87       	std	Y+15, r25	; 0x0f
     6ec:	8e 87       	std	Y+14, r24	; 0x0e
     6ee:	8e 85       	ldd	r24, Y+14	; 0x0e
     6f0:	9f 85       	ldd	r25, Y+15	; 0x0f
     6f2:	01 97       	sbiw	r24, 0x01	; 1
     6f4:	f1 f7       	brne	.-4      	; 0x6f2 <writePageEEPROM+0x17c>
     6f6:	9f 87       	std	Y+15, r25	; 0x0f
     6f8:	8e 87       	std	Y+14, r24	; 0x0e
	  _delay_ms(10);
	  WRITE_DI();//write disable
     6fa:	0e 94 2b 02 	call	0x456	; 0x456 <WRITE_DI>
 }
     6fe:	63 96       	adiw	r28, 0x13	; 19
     700:	0f b6       	in	r0, 0x3f	; 63
     702:	f8 94       	cli
     704:	de bf       	out	0x3e, r29	; 62
     706:	0f be       	out	0x3f, r0	; 63
     708:	cd bf       	out	0x3d, r28	; 61
     70a:	df 91       	pop	r29
     70c:	cf 91       	pop	r28
     70e:	08 95       	ret

00000710 <ReadEEPROMSTR>:
 
void ReadEEPROMSTR(u16 location,u8 CharNum,u8 * ReadStr)
{
     710:	0f 93       	push	r16
     712:	1f 93       	push	r17
     714:	cf 93       	push	r28
     716:	df 93       	push	r29
     718:	00 d0       	rcall	.+0      	; 0x71a <ReadEEPROMSTR+0xa>
     71a:	00 d0       	rcall	.+0      	; 0x71c <ReadEEPROMSTR+0xc>
     71c:	00 d0       	rcall	.+0      	; 0x71e <ReadEEPROMSTR+0xe>
     71e:	cd b7       	in	r28, 0x3d	; 61
     720:	de b7       	in	r29, 0x3e	; 62
     722:	9b 83       	std	Y+3, r25	; 0x03
     724:	8a 83       	std	Y+2, r24	; 0x02
     726:	6c 83       	std	Y+4, r22	; 0x04
     728:	5e 83       	std	Y+6, r21	; 0x06
     72a:	4d 83       	std	Y+5, r20	; 0x05
	u8 Counter = 0;
     72c:	19 82       	std	Y+1, r1	; 0x01
	for(;Counter<CharNum;Counter++)
     72e:	16 c0       	rjmp	.+44     	; 0x75c <ReadEEPROMSTR+0x4c>
	{
		ReadStr[Counter]=readEEPROM((location+Counter));
     730:	89 81       	ldd	r24, Y+1	; 0x01
     732:	88 2f       	mov	r24, r24
     734:	90 e0       	ldi	r25, 0x00	; 0
     736:	2d 81       	ldd	r18, Y+5	; 0x05
     738:	3e 81       	ldd	r19, Y+6	; 0x06
     73a:	89 01       	movw	r16, r18
     73c:	08 0f       	add	r16, r24
     73e:	19 1f       	adc	r17, r25
     740:	89 81       	ldd	r24, Y+1	; 0x01
     742:	28 2f       	mov	r18, r24
     744:	30 e0       	ldi	r19, 0x00	; 0
     746:	8a 81       	ldd	r24, Y+2	; 0x02
     748:	9b 81       	ldd	r25, Y+3	; 0x03
     74a:	82 0f       	add	r24, r18
     74c:	93 1f       	adc	r25, r19
     74e:	0e 94 84 00 	call	0x108	; 0x108 <readEEPROM>
     752:	f8 01       	movw	r30, r16
     754:	80 83       	st	Z, r24
 }
 
void ReadEEPROMSTR(u16 location,u8 CharNum,u8 * ReadStr)
{
	u8 Counter = 0;
	for(;Counter<CharNum;Counter++)
     756:	89 81       	ldd	r24, Y+1	; 0x01
     758:	8f 5f       	subi	r24, 0xFF	; 255
     75a:	89 83       	std	Y+1, r24	; 0x01
     75c:	99 81       	ldd	r25, Y+1	; 0x01
     75e:	8c 81       	ldd	r24, Y+4	; 0x04
     760:	98 17       	cp	r25, r24
     762:	30 f3       	brcs	.-52     	; 0x730 <ReadEEPROMSTR+0x20>
	{
		ReadStr[Counter]=readEEPROM((location+Counter));
	}
}
     764:	26 96       	adiw	r28, 0x06	; 6
     766:	0f b6       	in	r0, 0x3f	; 63
     768:	f8 94       	cli
     76a:	de bf       	out	0x3e, r29	; 62
     76c:	0f be       	out	0x3f, r0	; 63
     76e:	cd bf       	out	0x3d, r28	; 61
     770:	df 91       	pop	r29
     772:	cf 91       	pop	r28
     774:	1f 91       	pop	r17
     776:	0f 91       	pop	r16
     778:	08 95       	ret

0000077a <LCD_init>:

void disp_charXY(u8 row,u8 col,u8 letter)
{
	LCD_GOTXY(row,col);
	disp_char(letter);	
}
     77a:	cf 93       	push	r28
     77c:	df 93       	push	r29
     77e:	cd b7       	in	r28, 0x3d	; 61
     780:	de b7       	in	r29, 0x3e	; 62
     782:	2e 97       	sbiw	r28, 0x0e	; 14
     784:	0f b6       	in	r0, 0x3f	; 63
     786:	f8 94       	cli
     788:	de bf       	out	0x3e, r29	; 62
     78a:	0f be       	out	0x3f, r0	; 63
     78c:	cd bf       	out	0x3d, r28	; 61
     78e:	41 e0       	ldi	r20, 0x01	; 1
     790:	60 ef       	ldi	r22, 0xF0	; 240
     792:	8a e3       	ldi	r24, 0x3A	; 58
     794:	90 e0       	ldi	r25, 0x00	; 0
     796:	0e 94 57 0a 	call	0x14ae	; 0x14ae <pinsDirection>
     79a:	41 e0       	ldi	r20, 0x01	; 1
     79c:	6e e0       	ldi	r22, 0x0E	; 14
     79e:	87 e3       	ldi	r24, 0x37	; 55
     7a0:	90 e0       	ldi	r25, 0x00	; 0
     7a2:	0e 94 57 0a 	call	0x14ae	; 0x14ae <pinsDirection>
     7a6:	60 e0       	ldi	r22, 0x00	; 0
     7a8:	8a e0       	ldi	r24, 0x0A	; 10
     7aa:	0e 94 30 09 	call	0x1260	; 0x1260 <writePin>
     7ae:	80 e0       	ldi	r24, 0x00	; 0
     7b0:	90 e0       	ldi	r25, 0x00	; 0
     7b2:	a0 e2       	ldi	r26, 0x20	; 32
     7b4:	b2 e4       	ldi	r27, 0x42	; 66
     7b6:	89 83       	std	Y+1, r24	; 0x01
     7b8:	9a 83       	std	Y+2, r25	; 0x02
     7ba:	ab 83       	std	Y+3, r26	; 0x03
     7bc:	bc 83       	std	Y+4, r27	; 0x04
     7be:	20 e0       	ldi	r18, 0x00	; 0
     7c0:	30 e0       	ldi	r19, 0x00	; 0
     7c2:	4a ef       	ldi	r20, 0xFA	; 250
     7c4:	54 e4       	ldi	r21, 0x44	; 68
     7c6:	69 81       	ldd	r22, Y+1	; 0x01
     7c8:	7a 81       	ldd	r23, Y+2	; 0x02
     7ca:	8b 81       	ldd	r24, Y+3	; 0x03
     7cc:	9c 81       	ldd	r25, Y+4	; 0x04
     7ce:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__mulsf3>
     7d2:	dc 01       	movw	r26, r24
     7d4:	cb 01       	movw	r24, r22
     7d6:	8d 83       	std	Y+5, r24	; 0x05
     7d8:	9e 83       	std	Y+6, r25	; 0x06
     7da:	af 83       	std	Y+7, r26	; 0x07
     7dc:	b8 87       	std	Y+8, r27	; 0x08
     7de:	20 e0       	ldi	r18, 0x00	; 0
     7e0:	30 e0       	ldi	r19, 0x00	; 0
     7e2:	40 e8       	ldi	r20, 0x80	; 128
     7e4:	5f e3       	ldi	r21, 0x3F	; 63
     7e6:	6d 81       	ldd	r22, Y+5	; 0x05
     7e8:	7e 81       	ldd	r23, Y+6	; 0x06
     7ea:	8f 81       	ldd	r24, Y+7	; 0x07
     7ec:	98 85       	ldd	r25, Y+8	; 0x08
     7ee:	0e 94 9c 0b 	call	0x1738	; 0x1738 <__cmpsf2>
     7f2:	88 23       	and	r24, r24
     7f4:	2c f4       	brge	.+10     	; 0x800 <LCD_init+0x86>
     7f6:	81 e0       	ldi	r24, 0x01	; 1
     7f8:	90 e0       	ldi	r25, 0x00	; 0
     7fa:	9a 87       	std	Y+10, r25	; 0x0a
     7fc:	89 87       	std	Y+9, r24	; 0x09
     7fe:	3f c0       	rjmp	.+126    	; 0x87e <__stack+0x1f>
     800:	20 e0       	ldi	r18, 0x00	; 0
     802:	3f ef       	ldi	r19, 0xFF	; 255
     804:	4f e7       	ldi	r20, 0x7F	; 127
     806:	57 e4       	ldi	r21, 0x47	; 71
     808:	6d 81       	ldd	r22, Y+5	; 0x05
     80a:	7e 81       	ldd	r23, Y+6	; 0x06
     80c:	8f 81       	ldd	r24, Y+7	; 0x07
     80e:	98 85       	ldd	r25, Y+8	; 0x08
     810:	0e 94 b7 0c 	call	0x196e	; 0x196e <__gesf2>
     814:	18 16       	cp	r1, r24
     816:	4c f5       	brge	.+82     	; 0x86a <__stack+0xb>
     818:	20 e0       	ldi	r18, 0x00	; 0
     81a:	30 e0       	ldi	r19, 0x00	; 0
     81c:	40 e2       	ldi	r20, 0x20	; 32
     81e:	51 e4       	ldi	r21, 0x41	; 65
     820:	69 81       	ldd	r22, Y+1	; 0x01
     822:	7a 81       	ldd	r23, Y+2	; 0x02
     824:	8b 81       	ldd	r24, Y+3	; 0x03
     826:	9c 81       	ldd	r25, Y+4	; 0x04
     828:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__mulsf3>
     82c:	dc 01       	movw	r26, r24
     82e:	cb 01       	movw	r24, r22
     830:	bc 01       	movw	r22, r24
     832:	cd 01       	movw	r24, r26
     834:	0e 94 13 0c 	call	0x1826	; 0x1826 <__fixunssfsi>
     838:	dc 01       	movw	r26, r24
     83a:	cb 01       	movw	r24, r22
     83c:	9a 87       	std	Y+10, r25	; 0x0a
     83e:	89 87       	std	Y+9, r24	; 0x09
     840:	0f c0       	rjmp	.+30     	; 0x860 <__stack+0x1>
     842:	88 ec       	ldi	r24, 0xC8	; 200
     844:	90 e0       	ldi	r25, 0x00	; 0
     846:	9c 87       	std	Y+12, r25	; 0x0c
     848:	8b 87       	std	Y+11, r24	; 0x0b
     84a:	8b 85       	ldd	r24, Y+11	; 0x0b
     84c:	9c 85       	ldd	r25, Y+12	; 0x0c
     84e:	01 97       	sbiw	r24, 0x01	; 1
     850:	f1 f7       	brne	.-4      	; 0x84e <LCD_init+0xd4>
     852:	9c 87       	std	Y+12, r25	; 0x0c
     854:	8b 87       	std	Y+11, r24	; 0x0b
     856:	89 85       	ldd	r24, Y+9	; 0x09
     858:	9a 85       	ldd	r25, Y+10	; 0x0a
     85a:	01 97       	sbiw	r24, 0x01	; 1
     85c:	9a 87       	std	Y+10, r25	; 0x0a
     85e:	89 87       	std	Y+9, r24	; 0x09
     860:	89 85       	ldd	r24, Y+9	; 0x09
     862:	9a 85       	ldd	r25, Y+10	; 0x0a
     864:	89 2b       	or	r24, r25
     866:	69 f7       	brne	.-38     	; 0x842 <LCD_init+0xc8>
     868:	14 c0       	rjmp	.+40     	; 0x892 <__stack+0x33>
     86a:	6d 81       	ldd	r22, Y+5	; 0x05
     86c:	7e 81       	ldd	r23, Y+6	; 0x06
     86e:	8f 81       	ldd	r24, Y+7	; 0x07
     870:	98 85       	ldd	r25, Y+8	; 0x08
     872:	0e 94 13 0c 	call	0x1826	; 0x1826 <__fixunssfsi>
     876:	dc 01       	movw	r26, r24
     878:	cb 01       	movw	r24, r22
     87a:	9a 87       	std	Y+10, r25	; 0x0a
     87c:	89 87       	std	Y+9, r24	; 0x09
     87e:	89 85       	ldd	r24, Y+9	; 0x09
     880:	9a 85       	ldd	r25, Y+10	; 0x0a
     882:	9e 87       	std	Y+14, r25	; 0x0e
     884:	8d 87       	std	Y+13, r24	; 0x0d
     886:	8d 85       	ldd	r24, Y+13	; 0x0d
     888:	9e 85       	ldd	r25, Y+14	; 0x0e
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	f1 f7       	brne	.-4      	; 0x88a <__stack+0x2b>
     88e:	9e 87       	std	Y+14, r25	; 0x0e
     890:	8d 87       	std	Y+13, r24	; 0x0d
     892:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <LCD_ret_Home>
     896:	86 e0       	ldi	r24, 0x06	; 6
     898:	0e 94 9c 06 	call	0xd38	; 0xd38 <LCD_send_cmd>
     89c:	8f e0       	ldi	r24, 0x0F	; 15
     89e:	0e 94 9c 06 	call	0xd38	; 0xd38 <LCD_send_cmd>
     8a2:	80 e1       	ldi	r24, 0x10	; 16
     8a4:	0e 94 9c 06 	call	0xd38	; 0xd38 <LCD_send_cmd>
     8a8:	88 e2       	ldi	r24, 0x28	; 40
     8aa:	0e 94 9c 06 	call	0xd38	; 0xd38 <LCD_send_cmd>
     8ae:	0e 94 62 04 	call	0x8c4	; 0x8c4 <LCD_CLEAR>
     8b2:	2e 96       	adiw	r28, 0x0e	; 14
     8b4:	0f b6       	in	r0, 0x3f	; 63
     8b6:	f8 94       	cli
     8b8:	de bf       	out	0x3e, r29	; 62
     8ba:	0f be       	out	0x3f, r0	; 63
     8bc:	cd bf       	out	0x3d, r28	; 61
     8be:	df 91       	pop	r29
     8c0:	cf 91       	pop	r28
     8c2:	08 95       	ret

000008c4 <LCD_CLEAR>:
     8c4:	cf 93       	push	r28
     8c6:	df 93       	push	r29
     8c8:	cd b7       	in	r28, 0x3d	; 61
     8ca:	de b7       	in	r29, 0x3e	; 62
     8cc:	2e 97       	sbiw	r28, 0x0e	; 14
     8ce:	0f b6       	in	r0, 0x3f	; 63
     8d0:	f8 94       	cli
     8d2:	de bf       	out	0x3e, r29	; 62
     8d4:	0f be       	out	0x3f, r0	; 63
     8d6:	cd bf       	out	0x3d, r28	; 61
     8d8:	81 e0       	ldi	r24, 0x01	; 1
     8da:	0e 94 9c 06 	call	0xd38	; 0xd38 <LCD_send_cmd>
     8de:	80 e0       	ldi	r24, 0x00	; 0
     8e0:	90 e0       	ldi	r25, 0x00	; 0
     8e2:	a0 e0       	ldi	r26, 0x00	; 0
     8e4:	b0 e4       	ldi	r27, 0x40	; 64
     8e6:	89 83       	std	Y+1, r24	; 0x01
     8e8:	9a 83       	std	Y+2, r25	; 0x02
     8ea:	ab 83       	std	Y+3, r26	; 0x03
     8ec:	bc 83       	std	Y+4, r27	; 0x04
     8ee:	20 e0       	ldi	r18, 0x00	; 0
     8f0:	30 e0       	ldi	r19, 0x00	; 0
     8f2:	4a ef       	ldi	r20, 0xFA	; 250
     8f4:	54 e4       	ldi	r21, 0x44	; 68
     8f6:	69 81       	ldd	r22, Y+1	; 0x01
     8f8:	7a 81       	ldd	r23, Y+2	; 0x02
     8fa:	8b 81       	ldd	r24, Y+3	; 0x03
     8fc:	9c 81       	ldd	r25, Y+4	; 0x04
     8fe:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__mulsf3>
     902:	dc 01       	movw	r26, r24
     904:	cb 01       	movw	r24, r22
     906:	8d 83       	std	Y+5, r24	; 0x05
     908:	9e 83       	std	Y+6, r25	; 0x06
     90a:	af 83       	std	Y+7, r26	; 0x07
     90c:	b8 87       	std	Y+8, r27	; 0x08
     90e:	20 e0       	ldi	r18, 0x00	; 0
     910:	30 e0       	ldi	r19, 0x00	; 0
     912:	40 e8       	ldi	r20, 0x80	; 128
     914:	5f e3       	ldi	r21, 0x3F	; 63
     916:	6d 81       	ldd	r22, Y+5	; 0x05
     918:	7e 81       	ldd	r23, Y+6	; 0x06
     91a:	8f 81       	ldd	r24, Y+7	; 0x07
     91c:	98 85       	ldd	r25, Y+8	; 0x08
     91e:	0e 94 9c 0b 	call	0x1738	; 0x1738 <__cmpsf2>
     922:	88 23       	and	r24, r24
     924:	2c f4       	brge	.+10     	; 0x930 <LCD_CLEAR+0x6c>
     926:	81 e0       	ldi	r24, 0x01	; 1
     928:	90 e0       	ldi	r25, 0x00	; 0
     92a:	9a 87       	std	Y+10, r25	; 0x0a
     92c:	89 87       	std	Y+9, r24	; 0x09
     92e:	3f c0       	rjmp	.+126    	; 0x9ae <LCD_CLEAR+0xea>
     930:	20 e0       	ldi	r18, 0x00	; 0
     932:	3f ef       	ldi	r19, 0xFF	; 255
     934:	4f e7       	ldi	r20, 0x7F	; 127
     936:	57 e4       	ldi	r21, 0x47	; 71
     938:	6d 81       	ldd	r22, Y+5	; 0x05
     93a:	7e 81       	ldd	r23, Y+6	; 0x06
     93c:	8f 81       	ldd	r24, Y+7	; 0x07
     93e:	98 85       	ldd	r25, Y+8	; 0x08
     940:	0e 94 b7 0c 	call	0x196e	; 0x196e <__gesf2>
     944:	18 16       	cp	r1, r24
     946:	4c f5       	brge	.+82     	; 0x99a <LCD_CLEAR+0xd6>
     948:	20 e0       	ldi	r18, 0x00	; 0
     94a:	30 e0       	ldi	r19, 0x00	; 0
     94c:	40 e2       	ldi	r20, 0x20	; 32
     94e:	51 e4       	ldi	r21, 0x41	; 65
     950:	69 81       	ldd	r22, Y+1	; 0x01
     952:	7a 81       	ldd	r23, Y+2	; 0x02
     954:	8b 81       	ldd	r24, Y+3	; 0x03
     956:	9c 81       	ldd	r25, Y+4	; 0x04
     958:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__mulsf3>
     95c:	dc 01       	movw	r26, r24
     95e:	cb 01       	movw	r24, r22
     960:	bc 01       	movw	r22, r24
     962:	cd 01       	movw	r24, r26
     964:	0e 94 13 0c 	call	0x1826	; 0x1826 <__fixunssfsi>
     968:	dc 01       	movw	r26, r24
     96a:	cb 01       	movw	r24, r22
     96c:	9a 87       	std	Y+10, r25	; 0x0a
     96e:	89 87       	std	Y+9, r24	; 0x09
     970:	0f c0       	rjmp	.+30     	; 0x990 <LCD_CLEAR+0xcc>
     972:	88 ec       	ldi	r24, 0xC8	; 200
     974:	90 e0       	ldi	r25, 0x00	; 0
     976:	9c 87       	std	Y+12, r25	; 0x0c
     978:	8b 87       	std	Y+11, r24	; 0x0b
     97a:	8b 85       	ldd	r24, Y+11	; 0x0b
     97c:	9c 85       	ldd	r25, Y+12	; 0x0c
     97e:	01 97       	sbiw	r24, 0x01	; 1
     980:	f1 f7       	brne	.-4      	; 0x97e <LCD_CLEAR+0xba>
     982:	9c 87       	std	Y+12, r25	; 0x0c
     984:	8b 87       	std	Y+11, r24	; 0x0b
     986:	89 85       	ldd	r24, Y+9	; 0x09
     988:	9a 85       	ldd	r25, Y+10	; 0x0a
     98a:	01 97       	sbiw	r24, 0x01	; 1
     98c:	9a 87       	std	Y+10, r25	; 0x0a
     98e:	89 87       	std	Y+9, r24	; 0x09
     990:	89 85       	ldd	r24, Y+9	; 0x09
     992:	9a 85       	ldd	r25, Y+10	; 0x0a
     994:	89 2b       	or	r24, r25
     996:	69 f7       	brne	.-38     	; 0x972 <LCD_CLEAR+0xae>
     998:	14 c0       	rjmp	.+40     	; 0x9c2 <LCD_CLEAR+0xfe>
     99a:	6d 81       	ldd	r22, Y+5	; 0x05
     99c:	7e 81       	ldd	r23, Y+6	; 0x06
     99e:	8f 81       	ldd	r24, Y+7	; 0x07
     9a0:	98 85       	ldd	r25, Y+8	; 0x08
     9a2:	0e 94 13 0c 	call	0x1826	; 0x1826 <__fixunssfsi>
     9a6:	dc 01       	movw	r26, r24
     9a8:	cb 01       	movw	r24, r22
     9aa:	9a 87       	std	Y+10, r25	; 0x0a
     9ac:	89 87       	std	Y+9, r24	; 0x09
     9ae:	89 85       	ldd	r24, Y+9	; 0x09
     9b0:	9a 85       	ldd	r25, Y+10	; 0x0a
     9b2:	9e 87       	std	Y+14, r25	; 0x0e
     9b4:	8d 87       	std	Y+13, r24	; 0x0d
     9b6:	8d 85       	ldd	r24, Y+13	; 0x0d
     9b8:	9e 85       	ldd	r25, Y+14	; 0x0e
     9ba:	01 97       	sbiw	r24, 0x01	; 1
     9bc:	f1 f7       	brne	.-4      	; 0x9ba <LCD_CLEAR+0xf6>
     9be:	9e 87       	std	Y+14, r25	; 0x0e
     9c0:	8d 87       	std	Y+13, r24	; 0x0d
     9c2:	2e 96       	adiw	r28, 0x0e	; 14
     9c4:	0f b6       	in	r0, 0x3f	; 63
     9c6:	f8 94       	cli
     9c8:	de bf       	out	0x3e, r29	; 62
     9ca:	0f be       	out	0x3f, r0	; 63
     9cc:	cd bf       	out	0x3d, r28	; 61
     9ce:	df 91       	pop	r29
     9d0:	cf 91       	pop	r28
     9d2:	08 95       	ret

000009d4 <LCD_ret_Home>:
     9d4:	cf 93       	push	r28
     9d6:	df 93       	push	r29
     9d8:	cd b7       	in	r28, 0x3d	; 61
     9da:	de b7       	in	r29, 0x3e	; 62
     9dc:	2e 97       	sbiw	r28, 0x0e	; 14
     9de:	0f b6       	in	r0, 0x3f	; 63
     9e0:	f8 94       	cli
     9e2:	de bf       	out	0x3e, r29	; 62
     9e4:	0f be       	out	0x3f, r0	; 63
     9e6:	cd bf       	out	0x3d, r28	; 61
     9e8:	82 e0       	ldi	r24, 0x02	; 2
     9ea:	0e 94 9c 06 	call	0xd38	; 0xd38 <LCD_send_cmd>
     9ee:	80 e0       	ldi	r24, 0x00	; 0
     9f0:	90 e0       	ldi	r25, 0x00	; 0
     9f2:	a0 e0       	ldi	r26, 0x00	; 0
     9f4:	b0 e4       	ldi	r27, 0x40	; 64
     9f6:	89 83       	std	Y+1, r24	; 0x01
     9f8:	9a 83       	std	Y+2, r25	; 0x02
     9fa:	ab 83       	std	Y+3, r26	; 0x03
     9fc:	bc 83       	std	Y+4, r27	; 0x04
     9fe:	20 e0       	ldi	r18, 0x00	; 0
     a00:	30 e0       	ldi	r19, 0x00	; 0
     a02:	4a ef       	ldi	r20, 0xFA	; 250
     a04:	54 e4       	ldi	r21, 0x44	; 68
     a06:	69 81       	ldd	r22, Y+1	; 0x01
     a08:	7a 81       	ldd	r23, Y+2	; 0x02
     a0a:	8b 81       	ldd	r24, Y+3	; 0x03
     a0c:	9c 81       	ldd	r25, Y+4	; 0x04
     a0e:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__mulsf3>
     a12:	dc 01       	movw	r26, r24
     a14:	cb 01       	movw	r24, r22
     a16:	8d 83       	std	Y+5, r24	; 0x05
     a18:	9e 83       	std	Y+6, r25	; 0x06
     a1a:	af 83       	std	Y+7, r26	; 0x07
     a1c:	b8 87       	std	Y+8, r27	; 0x08
     a1e:	20 e0       	ldi	r18, 0x00	; 0
     a20:	30 e0       	ldi	r19, 0x00	; 0
     a22:	40 e8       	ldi	r20, 0x80	; 128
     a24:	5f e3       	ldi	r21, 0x3F	; 63
     a26:	6d 81       	ldd	r22, Y+5	; 0x05
     a28:	7e 81       	ldd	r23, Y+6	; 0x06
     a2a:	8f 81       	ldd	r24, Y+7	; 0x07
     a2c:	98 85       	ldd	r25, Y+8	; 0x08
     a2e:	0e 94 9c 0b 	call	0x1738	; 0x1738 <__cmpsf2>
     a32:	88 23       	and	r24, r24
     a34:	2c f4       	brge	.+10     	; 0xa40 <LCD_ret_Home+0x6c>
     a36:	81 e0       	ldi	r24, 0x01	; 1
     a38:	90 e0       	ldi	r25, 0x00	; 0
     a3a:	9a 87       	std	Y+10, r25	; 0x0a
     a3c:	89 87       	std	Y+9, r24	; 0x09
     a3e:	3f c0       	rjmp	.+126    	; 0xabe <LCD_ret_Home+0xea>
     a40:	20 e0       	ldi	r18, 0x00	; 0
     a42:	3f ef       	ldi	r19, 0xFF	; 255
     a44:	4f e7       	ldi	r20, 0x7F	; 127
     a46:	57 e4       	ldi	r21, 0x47	; 71
     a48:	6d 81       	ldd	r22, Y+5	; 0x05
     a4a:	7e 81       	ldd	r23, Y+6	; 0x06
     a4c:	8f 81       	ldd	r24, Y+7	; 0x07
     a4e:	98 85       	ldd	r25, Y+8	; 0x08
     a50:	0e 94 b7 0c 	call	0x196e	; 0x196e <__gesf2>
     a54:	18 16       	cp	r1, r24
     a56:	4c f5       	brge	.+82     	; 0xaaa <LCD_ret_Home+0xd6>
     a58:	20 e0       	ldi	r18, 0x00	; 0
     a5a:	30 e0       	ldi	r19, 0x00	; 0
     a5c:	40 e2       	ldi	r20, 0x20	; 32
     a5e:	51 e4       	ldi	r21, 0x41	; 65
     a60:	69 81       	ldd	r22, Y+1	; 0x01
     a62:	7a 81       	ldd	r23, Y+2	; 0x02
     a64:	8b 81       	ldd	r24, Y+3	; 0x03
     a66:	9c 81       	ldd	r25, Y+4	; 0x04
     a68:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__mulsf3>
     a6c:	dc 01       	movw	r26, r24
     a6e:	cb 01       	movw	r24, r22
     a70:	bc 01       	movw	r22, r24
     a72:	cd 01       	movw	r24, r26
     a74:	0e 94 13 0c 	call	0x1826	; 0x1826 <__fixunssfsi>
     a78:	dc 01       	movw	r26, r24
     a7a:	cb 01       	movw	r24, r22
     a7c:	9a 87       	std	Y+10, r25	; 0x0a
     a7e:	89 87       	std	Y+9, r24	; 0x09
     a80:	0f c0       	rjmp	.+30     	; 0xaa0 <LCD_ret_Home+0xcc>
     a82:	88 ec       	ldi	r24, 0xC8	; 200
     a84:	90 e0       	ldi	r25, 0x00	; 0
     a86:	9c 87       	std	Y+12, r25	; 0x0c
     a88:	8b 87       	std	Y+11, r24	; 0x0b
     a8a:	8b 85       	ldd	r24, Y+11	; 0x0b
     a8c:	9c 85       	ldd	r25, Y+12	; 0x0c
     a8e:	01 97       	sbiw	r24, 0x01	; 1
     a90:	f1 f7       	brne	.-4      	; 0xa8e <LCD_ret_Home+0xba>
     a92:	9c 87       	std	Y+12, r25	; 0x0c
     a94:	8b 87       	std	Y+11, r24	; 0x0b
     a96:	89 85       	ldd	r24, Y+9	; 0x09
     a98:	9a 85       	ldd	r25, Y+10	; 0x0a
     a9a:	01 97       	sbiw	r24, 0x01	; 1
     a9c:	9a 87       	std	Y+10, r25	; 0x0a
     a9e:	89 87       	std	Y+9, r24	; 0x09
     aa0:	89 85       	ldd	r24, Y+9	; 0x09
     aa2:	9a 85       	ldd	r25, Y+10	; 0x0a
     aa4:	89 2b       	or	r24, r25
     aa6:	69 f7       	brne	.-38     	; 0xa82 <LCD_ret_Home+0xae>
     aa8:	14 c0       	rjmp	.+40     	; 0xad2 <LCD_ret_Home+0xfe>
     aaa:	6d 81       	ldd	r22, Y+5	; 0x05
     aac:	7e 81       	ldd	r23, Y+6	; 0x06
     aae:	8f 81       	ldd	r24, Y+7	; 0x07
     ab0:	98 85       	ldd	r25, Y+8	; 0x08
     ab2:	0e 94 13 0c 	call	0x1826	; 0x1826 <__fixunssfsi>
     ab6:	dc 01       	movw	r26, r24
     ab8:	cb 01       	movw	r24, r22
     aba:	9a 87       	std	Y+10, r25	; 0x0a
     abc:	89 87       	std	Y+9, r24	; 0x09
     abe:	89 85       	ldd	r24, Y+9	; 0x09
     ac0:	9a 85       	ldd	r25, Y+10	; 0x0a
     ac2:	9e 87       	std	Y+14, r25	; 0x0e
     ac4:	8d 87       	std	Y+13, r24	; 0x0d
     ac6:	8d 85       	ldd	r24, Y+13	; 0x0d
     ac8:	9e 85       	ldd	r25, Y+14	; 0x0e
     aca:	01 97       	sbiw	r24, 0x01	; 1
     acc:	f1 f7       	brne	.-4      	; 0xaca <LCD_ret_Home+0xf6>
     ace:	9e 87       	std	Y+14, r25	; 0x0e
     ad0:	8d 87       	std	Y+13, r24	; 0x0d
     ad2:	2e 96       	adiw	r28, 0x0e	; 14
     ad4:	0f b6       	in	r0, 0x3f	; 63
     ad6:	f8 94       	cli
     ad8:	de bf       	out	0x3e, r29	; 62
     ada:	0f be       	out	0x3f, r0	; 63
     adc:	cd bf       	out	0x3d, r28	; 61
     ade:	df 91       	pop	r29
     ae0:	cf 91       	pop	r28
     ae2:	08 95       	ret

00000ae4 <SendToLCD>:
     ae4:	cf 93       	push	r28
     ae6:	df 93       	push	r29
     ae8:	cd b7       	in	r28, 0x3d	; 61
     aea:	de b7       	in	r29, 0x3e	; 62
     aec:	a1 97       	sbiw	r28, 0x21	; 33
     aee:	0f b6       	in	r0, 0x3f	; 63
     af0:	f8 94       	cli
     af2:	de bf       	out	0x3e, r29	; 62
     af4:	0f be       	out	0x3f, r0	; 63
     af6:	cd bf       	out	0x3d, r28	; 61
     af8:	89 a3       	std	Y+33, r24	; 0x21
     afa:	40 e0       	ldi	r20, 0x00	; 0
     afc:	60 ef       	ldi	r22, 0xF0	; 240
     afe:	8b e3       	ldi	r24, 0x3B	; 59
     b00:	90 e0       	ldi	r25, 0x00	; 0
     b02:	0e 94 27 0a 	call	0x144e	; 0x144e <writePins>
     b06:	89 a1       	ldd	r24, Y+33	; 0x21
     b08:	80 7f       	andi	r24, 0xF0	; 240
     b0a:	41 e0       	ldi	r20, 0x01	; 1
     b0c:	68 2f       	mov	r22, r24
     b0e:	8b e3       	ldi	r24, 0x3B	; 59
     b10:	90 e0       	ldi	r25, 0x00	; 0
     b12:	0e 94 27 0a 	call	0x144e	; 0x144e <writePins>
     b16:	0e 94 be 06 	call	0xd7c	; 0xd7c <LCD_latch>
     b1a:	40 e0       	ldi	r20, 0x00	; 0
     b1c:	60 ef       	ldi	r22, 0xF0	; 240
     b1e:	8b e3       	ldi	r24, 0x3B	; 59
     b20:	90 e0       	ldi	r25, 0x00	; 0
     b22:	0e 94 27 0a 	call	0x144e	; 0x144e <writePins>
     b26:	89 a1       	ldd	r24, Y+33	; 0x21
     b28:	88 2f       	mov	r24, r24
     b2a:	90 e0       	ldi	r25, 0x00	; 0
     b2c:	82 95       	swap	r24
     b2e:	92 95       	swap	r25
     b30:	90 7f       	andi	r25, 0xF0	; 240
     b32:	98 27       	eor	r25, r24
     b34:	80 7f       	andi	r24, 0xF0	; 240
     b36:	98 27       	eor	r25, r24
     b38:	41 e0       	ldi	r20, 0x01	; 1
     b3a:	68 2f       	mov	r22, r24
     b3c:	8b e3       	ldi	r24, 0x3B	; 59
     b3e:	90 e0       	ldi	r25, 0x00	; 0
     b40:	0e 94 27 0a 	call	0x144e	; 0x144e <writePins>
     b44:	0e 94 be 06 	call	0xd7c	; 0xd7c <LCD_latch>
     b48:	80 e0       	ldi	r24, 0x00	; 0
     b4a:	90 e0       	ldi	r25, 0x00	; 0
     b4c:	a0 e2       	ldi	r26, 0x20	; 32
     b4e:	b2 e4       	ldi	r27, 0x42	; 66
     b50:	89 83       	std	Y+1, r24	; 0x01
     b52:	9a 83       	std	Y+2, r25	; 0x02
     b54:	ab 83       	std	Y+3, r26	; 0x03
     b56:	bc 83       	std	Y+4, r27	; 0x04
     b58:	2b ea       	ldi	r18, 0xAB	; 171
     b5a:	3a ea       	ldi	r19, 0xAA	; 170
     b5c:	4a e2       	ldi	r20, 0x2A	; 42
     b5e:	50 e4       	ldi	r21, 0x40	; 64
     b60:	69 81       	ldd	r22, Y+1	; 0x01
     b62:	7a 81       	ldd	r23, Y+2	; 0x02
     b64:	8b 81       	ldd	r24, Y+3	; 0x03
     b66:	9c 81       	ldd	r25, Y+4	; 0x04
     b68:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__mulsf3>
     b6c:	dc 01       	movw	r26, r24
     b6e:	cb 01       	movw	r24, r22
     b70:	8d 83       	std	Y+5, r24	; 0x05
     b72:	9e 83       	std	Y+6, r25	; 0x06
     b74:	af 83       	std	Y+7, r26	; 0x07
     b76:	b8 87       	std	Y+8, r27	; 0x08
     b78:	89 81       	ldd	r24, Y+1	; 0x01
     b7a:	9a 81       	ldd	r25, Y+2	; 0x02
     b7c:	ab 81       	ldd	r26, Y+3	; 0x03
     b7e:	bc 81       	ldd	r27, Y+4	; 0x04
     b80:	9c 01       	movw	r18, r24
     b82:	ad 01       	movw	r20, r26
     b84:	bc 01       	movw	r22, r24
     b86:	cd 01       	movw	r24, r26
     b88:	0e 94 30 0b 	call	0x1660	; 0x1660 <__addsf3>
     b8c:	dc 01       	movw	r26, r24
     b8e:	cb 01       	movw	r24, r22
     b90:	89 87       	std	Y+9, r24	; 0x09
     b92:	9a 87       	std	Y+10, r25	; 0x0a
     b94:	ab 87       	std	Y+11, r26	; 0x0b
     b96:	bc 87       	std	Y+12, r27	; 0x0c
     b98:	20 e0       	ldi	r18, 0x00	; 0
     b9a:	30 e0       	ldi	r19, 0x00	; 0
     b9c:	40 e8       	ldi	r20, 0x80	; 128
     b9e:	5f e3       	ldi	r21, 0x3F	; 63
     ba0:	6d 81       	ldd	r22, Y+5	; 0x05
     ba2:	7e 81       	ldd	r23, Y+6	; 0x06
     ba4:	8f 81       	ldd	r24, Y+7	; 0x07
     ba6:	98 85       	ldd	r25, Y+8	; 0x08
     ba8:	0e 94 9c 0b 	call	0x1738	; 0x1738 <__cmpsf2>
     bac:	88 23       	and	r24, r24
     bae:	1c f4       	brge	.+6      	; 0xbb6 <SendToLCD+0xd2>
     bb0:	81 e0       	ldi	r24, 0x01	; 1
     bb2:	8d 87       	std	Y+13, r24	; 0x0d
     bb4:	b2 c0       	rjmp	.+356    	; 0xd1a <SendToLCD+0x236>
     bb6:	20 e0       	ldi	r18, 0x00	; 0
     bb8:	3f ef       	ldi	r19, 0xFF	; 255
     bba:	4f e7       	ldi	r20, 0x7F	; 127
     bbc:	57 e4       	ldi	r21, 0x47	; 71
     bbe:	69 85       	ldd	r22, Y+9	; 0x09
     bc0:	7a 85       	ldd	r23, Y+10	; 0x0a
     bc2:	8b 85       	ldd	r24, Y+11	; 0x0b
     bc4:	9c 85       	ldd	r25, Y+12	; 0x0c
     bc6:	0e 94 b7 0c 	call	0x196e	; 0x196e <__gesf2>
     bca:	18 16       	cp	r1, r24
     bcc:	0c f0       	brlt	.+2      	; 0xbd0 <SendToLCD+0xec>
     bce:	7b c0       	rjmp	.+246    	; 0xcc6 <SendToLCD+0x1e2>
     bd0:	20 e0       	ldi	r18, 0x00	; 0
     bd2:	30 e0       	ldi	r19, 0x00	; 0
     bd4:	4a e7       	ldi	r20, 0x7A	; 122
     bd6:	54 e4       	ldi	r21, 0x44	; 68
     bd8:	69 81       	ldd	r22, Y+1	; 0x01
     bda:	7a 81       	ldd	r23, Y+2	; 0x02
     bdc:	8b 81       	ldd	r24, Y+3	; 0x03
     bde:	9c 81       	ldd	r25, Y+4	; 0x04
     be0:	0e 94 a1 0b 	call	0x1742	; 0x1742 <__divsf3>
     be4:	dc 01       	movw	r26, r24
     be6:	cb 01       	movw	r24, r22
     be8:	8e 87       	std	Y+14, r24	; 0x0e
     bea:	9f 87       	std	Y+15, r25	; 0x0f
     bec:	a8 8b       	std	Y+16, r26	; 0x10
     bee:	b9 8b       	std	Y+17, r27	; 0x11
     bf0:	20 e0       	ldi	r18, 0x00	; 0
     bf2:	30 e0       	ldi	r19, 0x00	; 0
     bf4:	4a ef       	ldi	r20, 0xFA	; 250
     bf6:	54 e4       	ldi	r21, 0x44	; 68
     bf8:	6e 85       	ldd	r22, Y+14	; 0x0e
     bfa:	7f 85       	ldd	r23, Y+15	; 0x0f
     bfc:	88 89       	ldd	r24, Y+16	; 0x10
     bfe:	99 89       	ldd	r25, Y+17	; 0x11
     c00:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__mulsf3>
     c04:	dc 01       	movw	r26, r24
     c06:	cb 01       	movw	r24, r22
     c08:	8a 8b       	std	Y+18, r24	; 0x12
     c0a:	9b 8b       	std	Y+19, r25	; 0x13
     c0c:	ac 8b       	std	Y+20, r26	; 0x14
     c0e:	bd 8b       	std	Y+21, r27	; 0x15
     c10:	20 e0       	ldi	r18, 0x00	; 0
     c12:	30 e0       	ldi	r19, 0x00	; 0
     c14:	40 e8       	ldi	r20, 0x80	; 128
     c16:	5f e3       	ldi	r21, 0x3F	; 63
     c18:	6a 89       	ldd	r22, Y+18	; 0x12
     c1a:	7b 89       	ldd	r23, Y+19	; 0x13
     c1c:	8c 89       	ldd	r24, Y+20	; 0x14
     c1e:	9d 89       	ldd	r25, Y+21	; 0x15
     c20:	0e 94 9c 0b 	call	0x1738	; 0x1738 <__cmpsf2>
     c24:	88 23       	and	r24, r24
     c26:	2c f4       	brge	.+10     	; 0xc32 <SendToLCD+0x14e>
     c28:	81 e0       	ldi	r24, 0x01	; 1
     c2a:	90 e0       	ldi	r25, 0x00	; 0
     c2c:	9f 8b       	std	Y+23, r25	; 0x17
     c2e:	8e 8b       	std	Y+22, r24	; 0x16
     c30:	3f c0       	rjmp	.+126    	; 0xcb0 <SendToLCD+0x1cc>
     c32:	20 e0       	ldi	r18, 0x00	; 0
     c34:	3f ef       	ldi	r19, 0xFF	; 255
     c36:	4f e7       	ldi	r20, 0x7F	; 127
     c38:	57 e4       	ldi	r21, 0x47	; 71
     c3a:	6a 89       	ldd	r22, Y+18	; 0x12
     c3c:	7b 89       	ldd	r23, Y+19	; 0x13
     c3e:	8c 89       	ldd	r24, Y+20	; 0x14
     c40:	9d 89       	ldd	r25, Y+21	; 0x15
     c42:	0e 94 b7 0c 	call	0x196e	; 0x196e <__gesf2>
     c46:	18 16       	cp	r1, r24
     c48:	4c f5       	brge	.+82     	; 0xc9c <SendToLCD+0x1b8>
     c4a:	20 e0       	ldi	r18, 0x00	; 0
     c4c:	30 e0       	ldi	r19, 0x00	; 0
     c4e:	40 e2       	ldi	r20, 0x20	; 32
     c50:	51 e4       	ldi	r21, 0x41	; 65
     c52:	6e 85       	ldd	r22, Y+14	; 0x0e
     c54:	7f 85       	ldd	r23, Y+15	; 0x0f
     c56:	88 89       	ldd	r24, Y+16	; 0x10
     c58:	99 89       	ldd	r25, Y+17	; 0x11
     c5a:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__mulsf3>
     c5e:	dc 01       	movw	r26, r24
     c60:	cb 01       	movw	r24, r22
     c62:	bc 01       	movw	r22, r24
     c64:	cd 01       	movw	r24, r26
     c66:	0e 94 13 0c 	call	0x1826	; 0x1826 <__fixunssfsi>
     c6a:	dc 01       	movw	r26, r24
     c6c:	cb 01       	movw	r24, r22
     c6e:	9f 8b       	std	Y+23, r25	; 0x17
     c70:	8e 8b       	std	Y+22, r24	; 0x16
     c72:	0f c0       	rjmp	.+30     	; 0xc92 <SendToLCD+0x1ae>
     c74:	88 ec       	ldi	r24, 0xC8	; 200
     c76:	90 e0       	ldi	r25, 0x00	; 0
     c78:	99 8f       	std	Y+25, r25	; 0x19
     c7a:	88 8f       	std	Y+24, r24	; 0x18
     c7c:	88 8d       	ldd	r24, Y+24	; 0x18
     c7e:	99 8d       	ldd	r25, Y+25	; 0x19
     c80:	01 97       	sbiw	r24, 0x01	; 1
     c82:	f1 f7       	brne	.-4      	; 0xc80 <SendToLCD+0x19c>
     c84:	99 8f       	std	Y+25, r25	; 0x19
     c86:	88 8f       	std	Y+24, r24	; 0x18
     c88:	8e 89       	ldd	r24, Y+22	; 0x16
     c8a:	9f 89       	ldd	r25, Y+23	; 0x17
     c8c:	01 97       	sbiw	r24, 0x01	; 1
     c8e:	9f 8b       	std	Y+23, r25	; 0x17
     c90:	8e 8b       	std	Y+22, r24	; 0x16
     c92:	8e 89       	ldd	r24, Y+22	; 0x16
     c94:	9f 89       	ldd	r25, Y+23	; 0x17
     c96:	89 2b       	or	r24, r25
     c98:	69 f7       	brne	.-38     	; 0xc74 <SendToLCD+0x190>
     c9a:	3f c0       	rjmp	.+126    	; 0xd1a <SendToLCD+0x236>
     c9c:	6a 89       	ldd	r22, Y+18	; 0x12
     c9e:	7b 89       	ldd	r23, Y+19	; 0x13
     ca0:	8c 89       	ldd	r24, Y+20	; 0x14
     ca2:	9d 89       	ldd	r25, Y+21	; 0x15
     ca4:	0e 94 13 0c 	call	0x1826	; 0x1826 <__fixunssfsi>
     ca8:	dc 01       	movw	r26, r24
     caa:	cb 01       	movw	r24, r22
     cac:	9f 8b       	std	Y+23, r25	; 0x17
     cae:	8e 8b       	std	Y+22, r24	; 0x16
     cb0:	8e 89       	ldd	r24, Y+22	; 0x16
     cb2:	9f 89       	ldd	r25, Y+23	; 0x17
     cb4:	9b 8f       	std	Y+27, r25	; 0x1b
     cb6:	8a 8f       	std	Y+26, r24	; 0x1a
     cb8:	8a 8d       	ldd	r24, Y+26	; 0x1a
     cba:	9b 8d       	ldd	r25, Y+27	; 0x1b
     cbc:	01 97       	sbiw	r24, 0x01	; 1
     cbe:	f1 f7       	brne	.-4      	; 0xcbc <SendToLCD+0x1d8>
     cc0:	9b 8f       	std	Y+27, r25	; 0x1b
     cc2:	8a 8f       	std	Y+26, r24	; 0x1a
     cc4:	2a c0       	rjmp	.+84     	; 0xd1a <SendToLCD+0x236>
     cc6:	20 e0       	ldi	r18, 0x00	; 0
     cc8:	30 e0       	ldi	r19, 0x00	; 0
     cca:	4f e7       	ldi	r20, 0x7F	; 127
     ccc:	53 e4       	ldi	r21, 0x43	; 67
     cce:	6d 81       	ldd	r22, Y+5	; 0x05
     cd0:	7e 81       	ldd	r23, Y+6	; 0x06
     cd2:	8f 81       	ldd	r24, Y+7	; 0x07
     cd4:	98 85       	ldd	r25, Y+8	; 0x08
     cd6:	0e 94 b7 0c 	call	0x196e	; 0x196e <__gesf2>
     cda:	18 16       	cp	r1, r24
     cdc:	ac f4       	brge	.+42     	; 0xd08 <SendToLCD+0x224>
     cde:	69 85       	ldd	r22, Y+9	; 0x09
     ce0:	7a 85       	ldd	r23, Y+10	; 0x0a
     ce2:	8b 85       	ldd	r24, Y+11	; 0x0b
     ce4:	9c 85       	ldd	r25, Y+12	; 0x0c
     ce6:	0e 94 13 0c 	call	0x1826	; 0x1826 <__fixunssfsi>
     cea:	dc 01       	movw	r26, r24
     cec:	cb 01       	movw	r24, r22
     cee:	9d 8f       	std	Y+29, r25	; 0x1d
     cf0:	8c 8f       	std	Y+28, r24	; 0x1c
     cf2:	8c 8d       	ldd	r24, Y+28	; 0x1c
     cf4:	9d 8d       	ldd	r25, Y+29	; 0x1d
     cf6:	9f 8f       	std	Y+31, r25	; 0x1f
     cf8:	8e 8f       	std	Y+30, r24	; 0x1e
     cfa:	8e 8d       	ldd	r24, Y+30	; 0x1e
     cfc:	9f 8d       	ldd	r25, Y+31	; 0x1f
     cfe:	01 97       	sbiw	r24, 0x01	; 1
     d00:	f1 f7       	brne	.-4      	; 0xcfe <SendToLCD+0x21a>
     d02:	9f 8f       	std	Y+31, r25	; 0x1f
     d04:	8e 8f       	std	Y+30, r24	; 0x1e
     d06:	0f c0       	rjmp	.+30     	; 0xd26 <SendToLCD+0x242>
     d08:	6d 81       	ldd	r22, Y+5	; 0x05
     d0a:	7e 81       	ldd	r23, Y+6	; 0x06
     d0c:	8f 81       	ldd	r24, Y+7	; 0x07
     d0e:	98 85       	ldd	r25, Y+8	; 0x08
     d10:	0e 94 13 0c 	call	0x1826	; 0x1826 <__fixunssfsi>
     d14:	dc 01       	movw	r26, r24
     d16:	cb 01       	movw	r24, r22
     d18:	8d 87       	std	Y+13, r24	; 0x0d
     d1a:	8d 85       	ldd	r24, Y+13	; 0x0d
     d1c:	88 a3       	std	Y+32, r24	; 0x20
     d1e:	88 a1       	ldd	r24, Y+32	; 0x20
     d20:	8a 95       	dec	r24
     d22:	f1 f7       	brne	.-4      	; 0xd20 <SendToLCD+0x23c>
     d24:	88 a3       	std	Y+32, r24	; 0x20
     d26:	a1 96       	adiw	r28, 0x21	; 33
     d28:	0f b6       	in	r0, 0x3f	; 63
     d2a:	f8 94       	cli
     d2c:	de bf       	out	0x3e, r29	; 62
     d2e:	0f be       	out	0x3f, r0	; 63
     d30:	cd bf       	out	0x3d, r28	; 61
     d32:	df 91       	pop	r29
     d34:	cf 91       	pop	r28
     d36:	08 95       	ret

00000d38 <LCD_send_cmd>:
     d38:	cf 93       	push	r28
     d3a:	df 93       	push	r29
     d3c:	1f 92       	push	r1
     d3e:	cd b7       	in	r28, 0x3d	; 61
     d40:	de b7       	in	r29, 0x3e	; 62
     d42:	89 83       	std	Y+1, r24	; 0x01
     d44:	60 e0       	ldi	r22, 0x00	; 0
     d46:	89 e0       	ldi	r24, 0x09	; 9
     d48:	0e 94 30 09 	call	0x1260	; 0x1260 <writePin>
     d4c:	89 81       	ldd	r24, Y+1	; 0x01
     d4e:	0e 94 72 05 	call	0xae4	; 0xae4 <SendToLCD>
     d52:	0f 90       	pop	r0
     d54:	df 91       	pop	r29
     d56:	cf 91       	pop	r28
     d58:	08 95       	ret

00000d5a <LCD_send_data>:
     d5a:	cf 93       	push	r28
     d5c:	df 93       	push	r29
     d5e:	1f 92       	push	r1
     d60:	cd b7       	in	r28, 0x3d	; 61
     d62:	de b7       	in	r29, 0x3e	; 62
     d64:	89 83       	std	Y+1, r24	; 0x01
     d66:	61 e0       	ldi	r22, 0x01	; 1
     d68:	89 e0       	ldi	r24, 0x09	; 9
     d6a:	0e 94 30 09 	call	0x1260	; 0x1260 <writePin>
     d6e:	89 81       	ldd	r24, Y+1	; 0x01
     d70:	0e 94 72 05 	call	0xae4	; 0xae4 <SendToLCD>
     d74:	0f 90       	pop	r0
     d76:	df 91       	pop	r29
     d78:	cf 91       	pop	r28
     d7a:	08 95       	ret

00000d7c <LCD_latch>:
     d7c:	cf 93       	push	r28
     d7e:	df 93       	push	r29
     d80:	cd b7       	in	r28, 0x3d	; 61
     d82:	de b7       	in	r29, 0x3e	; 62
     d84:	c0 54       	subi	r28, 0x40	; 64
     d86:	d1 09       	sbc	r29, r1
     d88:	0f b6       	in	r0, 0x3f	; 63
     d8a:	f8 94       	cli
     d8c:	de bf       	out	0x3e, r29	; 62
     d8e:	0f be       	out	0x3f, r0	; 63
     d90:	cd bf       	out	0x3d, r28	; 61
     d92:	61 e0       	ldi	r22, 0x01	; 1
     d94:	8b e0       	ldi	r24, 0x0B	; 11
     d96:	0e 94 30 09 	call	0x1260	; 0x1260 <writePin>
     d9a:	80 e0       	ldi	r24, 0x00	; 0
     d9c:	90 e0       	ldi	r25, 0x00	; 0
     d9e:	a0 e2       	ldi	r26, 0x20	; 32
     da0:	b2 e4       	ldi	r27, 0x42	; 66
     da2:	89 83       	std	Y+1, r24	; 0x01
     da4:	9a 83       	std	Y+2, r25	; 0x02
     da6:	ab 83       	std	Y+3, r26	; 0x03
     da8:	bc 83       	std	Y+4, r27	; 0x04
     daa:	2b ea       	ldi	r18, 0xAB	; 171
     dac:	3a ea       	ldi	r19, 0xAA	; 170
     dae:	4a e2       	ldi	r20, 0x2A	; 42
     db0:	50 e4       	ldi	r21, 0x40	; 64
     db2:	69 81       	ldd	r22, Y+1	; 0x01
     db4:	7a 81       	ldd	r23, Y+2	; 0x02
     db6:	8b 81       	ldd	r24, Y+3	; 0x03
     db8:	9c 81       	ldd	r25, Y+4	; 0x04
     dba:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__mulsf3>
     dbe:	dc 01       	movw	r26, r24
     dc0:	cb 01       	movw	r24, r22
     dc2:	8d 83       	std	Y+5, r24	; 0x05
     dc4:	9e 83       	std	Y+6, r25	; 0x06
     dc6:	af 83       	std	Y+7, r26	; 0x07
     dc8:	b8 87       	std	Y+8, r27	; 0x08
     dca:	89 81       	ldd	r24, Y+1	; 0x01
     dcc:	9a 81       	ldd	r25, Y+2	; 0x02
     dce:	ab 81       	ldd	r26, Y+3	; 0x03
     dd0:	bc 81       	ldd	r27, Y+4	; 0x04
     dd2:	9c 01       	movw	r18, r24
     dd4:	ad 01       	movw	r20, r26
     dd6:	bc 01       	movw	r22, r24
     dd8:	cd 01       	movw	r24, r26
     dda:	0e 94 30 0b 	call	0x1660	; 0x1660 <__addsf3>
     dde:	dc 01       	movw	r26, r24
     de0:	cb 01       	movw	r24, r22
     de2:	89 87       	std	Y+9, r24	; 0x09
     de4:	9a 87       	std	Y+10, r25	; 0x0a
     de6:	ab 87       	std	Y+11, r26	; 0x0b
     de8:	bc 87       	std	Y+12, r27	; 0x0c
     dea:	20 e0       	ldi	r18, 0x00	; 0
     dec:	30 e0       	ldi	r19, 0x00	; 0
     dee:	40 e8       	ldi	r20, 0x80	; 128
     df0:	5f e3       	ldi	r21, 0x3F	; 63
     df2:	6d 81       	ldd	r22, Y+5	; 0x05
     df4:	7e 81       	ldd	r23, Y+6	; 0x06
     df6:	8f 81       	ldd	r24, Y+7	; 0x07
     df8:	98 85       	ldd	r25, Y+8	; 0x08
     dfa:	0e 94 9c 0b 	call	0x1738	; 0x1738 <__cmpsf2>
     dfe:	88 23       	and	r24, r24
     e00:	1c f4       	brge	.+6      	; 0xe08 <LCD_latch+0x8c>
     e02:	81 e0       	ldi	r24, 0x01	; 1
     e04:	8d 87       	std	Y+13, r24	; 0x0d
     e06:	b2 c0       	rjmp	.+356    	; 0xf6c <LCD_latch+0x1f0>
     e08:	20 e0       	ldi	r18, 0x00	; 0
     e0a:	3f ef       	ldi	r19, 0xFF	; 255
     e0c:	4f e7       	ldi	r20, 0x7F	; 127
     e0e:	57 e4       	ldi	r21, 0x47	; 71
     e10:	69 85       	ldd	r22, Y+9	; 0x09
     e12:	7a 85       	ldd	r23, Y+10	; 0x0a
     e14:	8b 85       	ldd	r24, Y+11	; 0x0b
     e16:	9c 85       	ldd	r25, Y+12	; 0x0c
     e18:	0e 94 b7 0c 	call	0x196e	; 0x196e <__gesf2>
     e1c:	18 16       	cp	r1, r24
     e1e:	0c f0       	brlt	.+2      	; 0xe22 <LCD_latch+0xa6>
     e20:	7b c0       	rjmp	.+246    	; 0xf18 <LCD_latch+0x19c>
     e22:	20 e0       	ldi	r18, 0x00	; 0
     e24:	30 e0       	ldi	r19, 0x00	; 0
     e26:	4a e7       	ldi	r20, 0x7A	; 122
     e28:	54 e4       	ldi	r21, 0x44	; 68
     e2a:	69 81       	ldd	r22, Y+1	; 0x01
     e2c:	7a 81       	ldd	r23, Y+2	; 0x02
     e2e:	8b 81       	ldd	r24, Y+3	; 0x03
     e30:	9c 81       	ldd	r25, Y+4	; 0x04
     e32:	0e 94 a1 0b 	call	0x1742	; 0x1742 <__divsf3>
     e36:	dc 01       	movw	r26, r24
     e38:	cb 01       	movw	r24, r22
     e3a:	8e 87       	std	Y+14, r24	; 0x0e
     e3c:	9f 87       	std	Y+15, r25	; 0x0f
     e3e:	a8 8b       	std	Y+16, r26	; 0x10
     e40:	b9 8b       	std	Y+17, r27	; 0x11
     e42:	20 e0       	ldi	r18, 0x00	; 0
     e44:	30 e0       	ldi	r19, 0x00	; 0
     e46:	4a ef       	ldi	r20, 0xFA	; 250
     e48:	54 e4       	ldi	r21, 0x44	; 68
     e4a:	6e 85       	ldd	r22, Y+14	; 0x0e
     e4c:	7f 85       	ldd	r23, Y+15	; 0x0f
     e4e:	88 89       	ldd	r24, Y+16	; 0x10
     e50:	99 89       	ldd	r25, Y+17	; 0x11
     e52:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__mulsf3>
     e56:	dc 01       	movw	r26, r24
     e58:	cb 01       	movw	r24, r22
     e5a:	8a 8b       	std	Y+18, r24	; 0x12
     e5c:	9b 8b       	std	Y+19, r25	; 0x13
     e5e:	ac 8b       	std	Y+20, r26	; 0x14
     e60:	bd 8b       	std	Y+21, r27	; 0x15
     e62:	20 e0       	ldi	r18, 0x00	; 0
     e64:	30 e0       	ldi	r19, 0x00	; 0
     e66:	40 e8       	ldi	r20, 0x80	; 128
     e68:	5f e3       	ldi	r21, 0x3F	; 63
     e6a:	6a 89       	ldd	r22, Y+18	; 0x12
     e6c:	7b 89       	ldd	r23, Y+19	; 0x13
     e6e:	8c 89       	ldd	r24, Y+20	; 0x14
     e70:	9d 89       	ldd	r25, Y+21	; 0x15
     e72:	0e 94 9c 0b 	call	0x1738	; 0x1738 <__cmpsf2>
     e76:	88 23       	and	r24, r24
     e78:	2c f4       	brge	.+10     	; 0xe84 <LCD_latch+0x108>
     e7a:	81 e0       	ldi	r24, 0x01	; 1
     e7c:	90 e0       	ldi	r25, 0x00	; 0
     e7e:	9f 8b       	std	Y+23, r25	; 0x17
     e80:	8e 8b       	std	Y+22, r24	; 0x16
     e82:	3f c0       	rjmp	.+126    	; 0xf02 <LCD_latch+0x186>
     e84:	20 e0       	ldi	r18, 0x00	; 0
     e86:	3f ef       	ldi	r19, 0xFF	; 255
     e88:	4f e7       	ldi	r20, 0x7F	; 127
     e8a:	57 e4       	ldi	r21, 0x47	; 71
     e8c:	6a 89       	ldd	r22, Y+18	; 0x12
     e8e:	7b 89       	ldd	r23, Y+19	; 0x13
     e90:	8c 89       	ldd	r24, Y+20	; 0x14
     e92:	9d 89       	ldd	r25, Y+21	; 0x15
     e94:	0e 94 b7 0c 	call	0x196e	; 0x196e <__gesf2>
     e98:	18 16       	cp	r1, r24
     e9a:	4c f5       	brge	.+82     	; 0xeee <LCD_latch+0x172>
     e9c:	20 e0       	ldi	r18, 0x00	; 0
     e9e:	30 e0       	ldi	r19, 0x00	; 0
     ea0:	40 e2       	ldi	r20, 0x20	; 32
     ea2:	51 e4       	ldi	r21, 0x41	; 65
     ea4:	6e 85       	ldd	r22, Y+14	; 0x0e
     ea6:	7f 85       	ldd	r23, Y+15	; 0x0f
     ea8:	88 89       	ldd	r24, Y+16	; 0x10
     eaa:	99 89       	ldd	r25, Y+17	; 0x11
     eac:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__mulsf3>
     eb0:	dc 01       	movw	r26, r24
     eb2:	cb 01       	movw	r24, r22
     eb4:	bc 01       	movw	r22, r24
     eb6:	cd 01       	movw	r24, r26
     eb8:	0e 94 13 0c 	call	0x1826	; 0x1826 <__fixunssfsi>
     ebc:	dc 01       	movw	r26, r24
     ebe:	cb 01       	movw	r24, r22
     ec0:	9f 8b       	std	Y+23, r25	; 0x17
     ec2:	8e 8b       	std	Y+22, r24	; 0x16
     ec4:	0f c0       	rjmp	.+30     	; 0xee4 <LCD_latch+0x168>
     ec6:	88 ec       	ldi	r24, 0xC8	; 200
     ec8:	90 e0       	ldi	r25, 0x00	; 0
     eca:	99 8f       	std	Y+25, r25	; 0x19
     ecc:	88 8f       	std	Y+24, r24	; 0x18
     ece:	88 8d       	ldd	r24, Y+24	; 0x18
     ed0:	99 8d       	ldd	r25, Y+25	; 0x19
     ed2:	01 97       	sbiw	r24, 0x01	; 1
     ed4:	f1 f7       	brne	.-4      	; 0xed2 <LCD_latch+0x156>
     ed6:	99 8f       	std	Y+25, r25	; 0x19
     ed8:	88 8f       	std	Y+24, r24	; 0x18
     eda:	8e 89       	ldd	r24, Y+22	; 0x16
     edc:	9f 89       	ldd	r25, Y+23	; 0x17
     ede:	01 97       	sbiw	r24, 0x01	; 1
     ee0:	9f 8b       	std	Y+23, r25	; 0x17
     ee2:	8e 8b       	std	Y+22, r24	; 0x16
     ee4:	8e 89       	ldd	r24, Y+22	; 0x16
     ee6:	9f 89       	ldd	r25, Y+23	; 0x17
     ee8:	89 2b       	or	r24, r25
     eea:	69 f7       	brne	.-38     	; 0xec6 <LCD_latch+0x14a>
     eec:	3f c0       	rjmp	.+126    	; 0xf6c <LCD_latch+0x1f0>
     eee:	6a 89       	ldd	r22, Y+18	; 0x12
     ef0:	7b 89       	ldd	r23, Y+19	; 0x13
     ef2:	8c 89       	ldd	r24, Y+20	; 0x14
     ef4:	9d 89       	ldd	r25, Y+21	; 0x15
     ef6:	0e 94 13 0c 	call	0x1826	; 0x1826 <__fixunssfsi>
     efa:	dc 01       	movw	r26, r24
     efc:	cb 01       	movw	r24, r22
     efe:	9f 8b       	std	Y+23, r25	; 0x17
     f00:	8e 8b       	std	Y+22, r24	; 0x16
     f02:	8e 89       	ldd	r24, Y+22	; 0x16
     f04:	9f 89       	ldd	r25, Y+23	; 0x17
     f06:	9b 8f       	std	Y+27, r25	; 0x1b
     f08:	8a 8f       	std	Y+26, r24	; 0x1a
     f0a:	8a 8d       	ldd	r24, Y+26	; 0x1a
     f0c:	9b 8d       	ldd	r25, Y+27	; 0x1b
     f0e:	01 97       	sbiw	r24, 0x01	; 1
     f10:	f1 f7       	brne	.-4      	; 0xf0e <LCD_latch+0x192>
     f12:	9b 8f       	std	Y+27, r25	; 0x1b
     f14:	8a 8f       	std	Y+26, r24	; 0x1a
     f16:	2a c0       	rjmp	.+84     	; 0xf6c <LCD_latch+0x1f0>
     f18:	20 e0       	ldi	r18, 0x00	; 0
     f1a:	30 e0       	ldi	r19, 0x00	; 0
     f1c:	4f e7       	ldi	r20, 0x7F	; 127
     f1e:	53 e4       	ldi	r21, 0x43	; 67
     f20:	6d 81       	ldd	r22, Y+5	; 0x05
     f22:	7e 81       	ldd	r23, Y+6	; 0x06
     f24:	8f 81       	ldd	r24, Y+7	; 0x07
     f26:	98 85       	ldd	r25, Y+8	; 0x08
     f28:	0e 94 b7 0c 	call	0x196e	; 0x196e <__gesf2>
     f2c:	18 16       	cp	r1, r24
     f2e:	ac f4       	brge	.+42     	; 0xf5a <LCD_latch+0x1de>
     f30:	69 85       	ldd	r22, Y+9	; 0x09
     f32:	7a 85       	ldd	r23, Y+10	; 0x0a
     f34:	8b 85       	ldd	r24, Y+11	; 0x0b
     f36:	9c 85       	ldd	r25, Y+12	; 0x0c
     f38:	0e 94 13 0c 	call	0x1826	; 0x1826 <__fixunssfsi>
     f3c:	dc 01       	movw	r26, r24
     f3e:	cb 01       	movw	r24, r22
     f40:	9d 8f       	std	Y+29, r25	; 0x1d
     f42:	8c 8f       	std	Y+28, r24	; 0x1c
     f44:	8c 8d       	ldd	r24, Y+28	; 0x1c
     f46:	9d 8d       	ldd	r25, Y+29	; 0x1d
     f48:	9f 8f       	std	Y+31, r25	; 0x1f
     f4a:	8e 8f       	std	Y+30, r24	; 0x1e
     f4c:	8e 8d       	ldd	r24, Y+30	; 0x1e
     f4e:	9f 8d       	ldd	r25, Y+31	; 0x1f
     f50:	01 97       	sbiw	r24, 0x01	; 1
     f52:	f1 f7       	brne	.-4      	; 0xf50 <LCD_latch+0x1d4>
     f54:	9f 8f       	std	Y+31, r25	; 0x1f
     f56:	8e 8f       	std	Y+30, r24	; 0x1e
     f58:	0f c0       	rjmp	.+30     	; 0xf78 <LCD_latch+0x1fc>
     f5a:	6d 81       	ldd	r22, Y+5	; 0x05
     f5c:	7e 81       	ldd	r23, Y+6	; 0x06
     f5e:	8f 81       	ldd	r24, Y+7	; 0x07
     f60:	98 85       	ldd	r25, Y+8	; 0x08
     f62:	0e 94 13 0c 	call	0x1826	; 0x1826 <__fixunssfsi>
     f66:	dc 01       	movw	r26, r24
     f68:	cb 01       	movw	r24, r22
     f6a:	8d 87       	std	Y+13, r24	; 0x0d
     f6c:	8d 85       	ldd	r24, Y+13	; 0x0d
     f6e:	88 a3       	std	Y+32, r24	; 0x20
     f70:	88 a1       	ldd	r24, Y+32	; 0x20
     f72:	8a 95       	dec	r24
     f74:	f1 f7       	brne	.-4      	; 0xf72 <LCD_latch+0x1f6>
     f76:	88 a3       	std	Y+32, r24	; 0x20
     f78:	60 e0       	ldi	r22, 0x00	; 0
     f7a:	8b e0       	ldi	r24, 0x0B	; 11
     f7c:	0e 94 30 09 	call	0x1260	; 0x1260 <writePin>
     f80:	80 e0       	ldi	r24, 0x00	; 0
     f82:	90 e0       	ldi	r25, 0x00	; 0
     f84:	a0 e2       	ldi	r26, 0x20	; 32
     f86:	b2 e4       	ldi	r27, 0x42	; 66
     f88:	89 a3       	std	Y+33, r24	; 0x21
     f8a:	9a a3       	std	Y+34, r25	; 0x22
     f8c:	ab a3       	std	Y+35, r26	; 0x23
     f8e:	bc a3       	std	Y+36, r27	; 0x24
     f90:	2b ea       	ldi	r18, 0xAB	; 171
     f92:	3a ea       	ldi	r19, 0xAA	; 170
     f94:	4a e2       	ldi	r20, 0x2A	; 42
     f96:	50 e4       	ldi	r21, 0x40	; 64
     f98:	69 a1       	ldd	r22, Y+33	; 0x21
     f9a:	7a a1       	ldd	r23, Y+34	; 0x22
     f9c:	8b a1       	ldd	r24, Y+35	; 0x23
     f9e:	9c a1       	ldd	r25, Y+36	; 0x24
     fa0:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__mulsf3>
     fa4:	dc 01       	movw	r26, r24
     fa6:	cb 01       	movw	r24, r22
     fa8:	8d a3       	std	Y+37, r24	; 0x25
     faa:	9e a3       	std	Y+38, r25	; 0x26
     fac:	af a3       	std	Y+39, r26	; 0x27
     fae:	b8 a7       	std	Y+40, r27	; 0x28
     fb0:	89 a1       	ldd	r24, Y+33	; 0x21
     fb2:	9a a1       	ldd	r25, Y+34	; 0x22
     fb4:	ab a1       	ldd	r26, Y+35	; 0x23
     fb6:	bc a1       	ldd	r27, Y+36	; 0x24
     fb8:	9c 01       	movw	r18, r24
     fba:	ad 01       	movw	r20, r26
     fbc:	bc 01       	movw	r22, r24
     fbe:	cd 01       	movw	r24, r26
     fc0:	0e 94 30 0b 	call	0x1660	; 0x1660 <__addsf3>
     fc4:	dc 01       	movw	r26, r24
     fc6:	cb 01       	movw	r24, r22
     fc8:	89 a7       	std	Y+41, r24	; 0x29
     fca:	9a a7       	std	Y+42, r25	; 0x2a
     fcc:	ab a7       	std	Y+43, r26	; 0x2b
     fce:	bc a7       	std	Y+44, r27	; 0x2c
     fd0:	20 e0       	ldi	r18, 0x00	; 0
     fd2:	30 e0       	ldi	r19, 0x00	; 0
     fd4:	40 e8       	ldi	r20, 0x80	; 128
     fd6:	5f e3       	ldi	r21, 0x3F	; 63
     fd8:	6d a1       	ldd	r22, Y+37	; 0x25
     fda:	7e a1       	ldd	r23, Y+38	; 0x26
     fdc:	8f a1       	ldd	r24, Y+39	; 0x27
     fde:	98 a5       	ldd	r25, Y+40	; 0x28
     fe0:	0e 94 9c 0b 	call	0x1738	; 0x1738 <__cmpsf2>
     fe4:	88 23       	and	r24, r24
     fe6:	1c f4       	brge	.+6      	; 0xfee <LCD_latch+0x272>
     fe8:	81 e0       	ldi	r24, 0x01	; 1
     fea:	8d a7       	std	Y+45, r24	; 0x2d
     fec:	b2 c0       	rjmp	.+356    	; 0x1152 <LCD_latch+0x3d6>
     fee:	20 e0       	ldi	r18, 0x00	; 0
     ff0:	3f ef       	ldi	r19, 0xFF	; 255
     ff2:	4f e7       	ldi	r20, 0x7F	; 127
     ff4:	57 e4       	ldi	r21, 0x47	; 71
     ff6:	69 a5       	ldd	r22, Y+41	; 0x29
     ff8:	7a a5       	ldd	r23, Y+42	; 0x2a
     ffa:	8b a5       	ldd	r24, Y+43	; 0x2b
     ffc:	9c a5       	ldd	r25, Y+44	; 0x2c
     ffe:	0e 94 b7 0c 	call	0x196e	; 0x196e <__gesf2>
    1002:	18 16       	cp	r1, r24
    1004:	0c f0       	brlt	.+2      	; 0x1008 <LCD_latch+0x28c>
    1006:	7b c0       	rjmp	.+246    	; 0x10fe <LCD_latch+0x382>
    1008:	20 e0       	ldi	r18, 0x00	; 0
    100a:	30 e0       	ldi	r19, 0x00	; 0
    100c:	4a e7       	ldi	r20, 0x7A	; 122
    100e:	54 e4       	ldi	r21, 0x44	; 68
    1010:	69 a1       	ldd	r22, Y+33	; 0x21
    1012:	7a a1       	ldd	r23, Y+34	; 0x22
    1014:	8b a1       	ldd	r24, Y+35	; 0x23
    1016:	9c a1       	ldd	r25, Y+36	; 0x24
    1018:	0e 94 a1 0b 	call	0x1742	; 0x1742 <__divsf3>
    101c:	dc 01       	movw	r26, r24
    101e:	cb 01       	movw	r24, r22
    1020:	8e a7       	std	Y+46, r24	; 0x2e
    1022:	9f a7       	std	Y+47, r25	; 0x2f
    1024:	a8 ab       	std	Y+48, r26	; 0x30
    1026:	b9 ab       	std	Y+49, r27	; 0x31
    1028:	20 e0       	ldi	r18, 0x00	; 0
    102a:	30 e0       	ldi	r19, 0x00	; 0
    102c:	4a ef       	ldi	r20, 0xFA	; 250
    102e:	54 e4       	ldi	r21, 0x44	; 68
    1030:	6e a5       	ldd	r22, Y+46	; 0x2e
    1032:	7f a5       	ldd	r23, Y+47	; 0x2f
    1034:	88 a9       	ldd	r24, Y+48	; 0x30
    1036:	99 a9       	ldd	r25, Y+49	; 0x31
    1038:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__mulsf3>
    103c:	dc 01       	movw	r26, r24
    103e:	cb 01       	movw	r24, r22
    1040:	8a ab       	std	Y+50, r24	; 0x32
    1042:	9b ab       	std	Y+51, r25	; 0x33
    1044:	ac ab       	std	Y+52, r26	; 0x34
    1046:	bd ab       	std	Y+53, r27	; 0x35
    1048:	20 e0       	ldi	r18, 0x00	; 0
    104a:	30 e0       	ldi	r19, 0x00	; 0
    104c:	40 e8       	ldi	r20, 0x80	; 128
    104e:	5f e3       	ldi	r21, 0x3F	; 63
    1050:	6a a9       	ldd	r22, Y+50	; 0x32
    1052:	7b a9       	ldd	r23, Y+51	; 0x33
    1054:	8c a9       	ldd	r24, Y+52	; 0x34
    1056:	9d a9       	ldd	r25, Y+53	; 0x35
    1058:	0e 94 9c 0b 	call	0x1738	; 0x1738 <__cmpsf2>
    105c:	88 23       	and	r24, r24
    105e:	2c f4       	brge	.+10     	; 0x106a <LCD_latch+0x2ee>
    1060:	81 e0       	ldi	r24, 0x01	; 1
    1062:	90 e0       	ldi	r25, 0x00	; 0
    1064:	9f ab       	std	Y+55, r25	; 0x37
    1066:	8e ab       	std	Y+54, r24	; 0x36
    1068:	3f c0       	rjmp	.+126    	; 0x10e8 <LCD_latch+0x36c>
    106a:	20 e0       	ldi	r18, 0x00	; 0
    106c:	3f ef       	ldi	r19, 0xFF	; 255
    106e:	4f e7       	ldi	r20, 0x7F	; 127
    1070:	57 e4       	ldi	r21, 0x47	; 71
    1072:	6a a9       	ldd	r22, Y+50	; 0x32
    1074:	7b a9       	ldd	r23, Y+51	; 0x33
    1076:	8c a9       	ldd	r24, Y+52	; 0x34
    1078:	9d a9       	ldd	r25, Y+53	; 0x35
    107a:	0e 94 b7 0c 	call	0x196e	; 0x196e <__gesf2>
    107e:	18 16       	cp	r1, r24
    1080:	4c f5       	brge	.+82     	; 0x10d4 <LCD_latch+0x358>
    1082:	20 e0       	ldi	r18, 0x00	; 0
    1084:	30 e0       	ldi	r19, 0x00	; 0
    1086:	40 e2       	ldi	r20, 0x20	; 32
    1088:	51 e4       	ldi	r21, 0x41	; 65
    108a:	6e a5       	ldd	r22, Y+46	; 0x2e
    108c:	7f a5       	ldd	r23, Y+47	; 0x2f
    108e:	88 a9       	ldd	r24, Y+48	; 0x30
    1090:	99 a9       	ldd	r25, Y+49	; 0x31
    1092:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__mulsf3>
    1096:	dc 01       	movw	r26, r24
    1098:	cb 01       	movw	r24, r22
    109a:	bc 01       	movw	r22, r24
    109c:	cd 01       	movw	r24, r26
    109e:	0e 94 13 0c 	call	0x1826	; 0x1826 <__fixunssfsi>
    10a2:	dc 01       	movw	r26, r24
    10a4:	cb 01       	movw	r24, r22
    10a6:	9f ab       	std	Y+55, r25	; 0x37
    10a8:	8e ab       	std	Y+54, r24	; 0x36
    10aa:	0f c0       	rjmp	.+30     	; 0x10ca <LCD_latch+0x34e>
    10ac:	88 ec       	ldi	r24, 0xC8	; 200
    10ae:	90 e0       	ldi	r25, 0x00	; 0
    10b0:	99 af       	std	Y+57, r25	; 0x39
    10b2:	88 af       	std	Y+56, r24	; 0x38
    10b4:	88 ad       	ldd	r24, Y+56	; 0x38
    10b6:	99 ad       	ldd	r25, Y+57	; 0x39
    10b8:	01 97       	sbiw	r24, 0x01	; 1
    10ba:	f1 f7       	brne	.-4      	; 0x10b8 <LCD_latch+0x33c>
    10bc:	99 af       	std	Y+57, r25	; 0x39
    10be:	88 af       	std	Y+56, r24	; 0x38
    10c0:	8e a9       	ldd	r24, Y+54	; 0x36
    10c2:	9f a9       	ldd	r25, Y+55	; 0x37
    10c4:	01 97       	sbiw	r24, 0x01	; 1
    10c6:	9f ab       	std	Y+55, r25	; 0x37
    10c8:	8e ab       	std	Y+54, r24	; 0x36
    10ca:	8e a9       	ldd	r24, Y+54	; 0x36
    10cc:	9f a9       	ldd	r25, Y+55	; 0x37
    10ce:	89 2b       	or	r24, r25
    10d0:	69 f7       	brne	.-38     	; 0x10ac <LCD_latch+0x330>
    10d2:	3f c0       	rjmp	.+126    	; 0x1152 <LCD_latch+0x3d6>
    10d4:	6a a9       	ldd	r22, Y+50	; 0x32
    10d6:	7b a9       	ldd	r23, Y+51	; 0x33
    10d8:	8c a9       	ldd	r24, Y+52	; 0x34
    10da:	9d a9       	ldd	r25, Y+53	; 0x35
    10dc:	0e 94 13 0c 	call	0x1826	; 0x1826 <__fixunssfsi>
    10e0:	dc 01       	movw	r26, r24
    10e2:	cb 01       	movw	r24, r22
    10e4:	9f ab       	std	Y+55, r25	; 0x37
    10e6:	8e ab       	std	Y+54, r24	; 0x36
    10e8:	8e a9       	ldd	r24, Y+54	; 0x36
    10ea:	9f a9       	ldd	r25, Y+55	; 0x37
    10ec:	9b af       	std	Y+59, r25	; 0x3b
    10ee:	8a af       	std	Y+58, r24	; 0x3a
    10f0:	8a ad       	ldd	r24, Y+58	; 0x3a
    10f2:	9b ad       	ldd	r25, Y+59	; 0x3b
    10f4:	01 97       	sbiw	r24, 0x01	; 1
    10f6:	f1 f7       	brne	.-4      	; 0x10f4 <LCD_latch+0x378>
    10f8:	9b af       	std	Y+59, r25	; 0x3b
    10fa:	8a af       	std	Y+58, r24	; 0x3a
    10fc:	2a c0       	rjmp	.+84     	; 0x1152 <LCD_latch+0x3d6>
    10fe:	20 e0       	ldi	r18, 0x00	; 0
    1100:	30 e0       	ldi	r19, 0x00	; 0
    1102:	4f e7       	ldi	r20, 0x7F	; 127
    1104:	53 e4       	ldi	r21, 0x43	; 67
    1106:	6d a1       	ldd	r22, Y+37	; 0x25
    1108:	7e a1       	ldd	r23, Y+38	; 0x26
    110a:	8f a1       	ldd	r24, Y+39	; 0x27
    110c:	98 a5       	ldd	r25, Y+40	; 0x28
    110e:	0e 94 b7 0c 	call	0x196e	; 0x196e <__gesf2>
    1112:	18 16       	cp	r1, r24
    1114:	ac f4       	brge	.+42     	; 0x1140 <LCD_latch+0x3c4>
    1116:	69 a5       	ldd	r22, Y+41	; 0x29
    1118:	7a a5       	ldd	r23, Y+42	; 0x2a
    111a:	8b a5       	ldd	r24, Y+43	; 0x2b
    111c:	9c a5       	ldd	r25, Y+44	; 0x2c
    111e:	0e 94 13 0c 	call	0x1826	; 0x1826 <__fixunssfsi>
    1122:	dc 01       	movw	r26, r24
    1124:	cb 01       	movw	r24, r22
    1126:	9d af       	std	Y+61, r25	; 0x3d
    1128:	8c af       	std	Y+60, r24	; 0x3c
    112a:	8c ad       	ldd	r24, Y+60	; 0x3c
    112c:	9d ad       	ldd	r25, Y+61	; 0x3d
    112e:	9f af       	std	Y+63, r25	; 0x3f
    1130:	8e af       	std	Y+62, r24	; 0x3e
    1132:	8e ad       	ldd	r24, Y+62	; 0x3e
    1134:	9f ad       	ldd	r25, Y+63	; 0x3f
    1136:	01 97       	sbiw	r24, 0x01	; 1
    1138:	f1 f7       	brne	.-4      	; 0x1136 <LCD_latch+0x3ba>
    113a:	9f af       	std	Y+63, r25	; 0x3f
    113c:	8e af       	std	Y+62, r24	; 0x3e
    113e:	1c c0       	rjmp	.+56     	; 0x1178 <LCD_latch+0x3fc>
    1140:	6d a1       	ldd	r22, Y+37	; 0x25
    1142:	7e a1       	ldd	r23, Y+38	; 0x26
    1144:	8f a1       	ldd	r24, Y+39	; 0x27
    1146:	98 a5       	ldd	r25, Y+40	; 0x28
    1148:	0e 94 13 0c 	call	0x1826	; 0x1826 <__fixunssfsi>
    114c:	dc 01       	movw	r26, r24
    114e:	cb 01       	movw	r24, r22
    1150:	8d a7       	std	Y+45, r24	; 0x2d
    1152:	2d a5       	ldd	r18, Y+45	; 0x2d
    1154:	ce 01       	movw	r24, r28
    1156:	80 5c       	subi	r24, 0xC0	; 192
    1158:	9f 4f       	sbci	r25, 0xFF	; 255
    115a:	fc 01       	movw	r30, r24
    115c:	20 83       	st	Z, r18
    115e:	ce 01       	movw	r24, r28
    1160:	80 5c       	subi	r24, 0xC0	; 192
    1162:	9f 4f       	sbci	r25, 0xFF	; 255
    1164:	fc 01       	movw	r30, r24
    1166:	80 81       	ld	r24, Z
    1168:	28 2f       	mov	r18, r24
    116a:	2a 95       	dec	r18
    116c:	f1 f7       	brne	.-4      	; 0x116a <LCD_latch+0x3ee>
    116e:	ce 01       	movw	r24, r28
    1170:	80 5c       	subi	r24, 0xC0	; 192
    1172:	9f 4f       	sbci	r25, 0xFF	; 255
    1174:	fc 01       	movw	r30, r24
    1176:	20 83       	st	Z, r18
    1178:	c0 5c       	subi	r28, 0xC0	; 192
    117a:	df 4f       	sbci	r29, 0xFF	; 255
    117c:	0f b6       	in	r0, 0x3f	; 63
    117e:	f8 94       	cli
    1180:	de bf       	out	0x3e, r29	; 62
    1182:	0f be       	out	0x3f, r0	; 63
    1184:	cd bf       	out	0x3d, r28	; 61
    1186:	df 91       	pop	r29
    1188:	cf 91       	pop	r28
    118a:	08 95       	ret

0000118c <disp_char>:
    118c:	cf 93       	push	r28
    118e:	df 93       	push	r29
    1190:	1f 92       	push	r1
    1192:	cd b7       	in	r28, 0x3d	; 61
    1194:	de b7       	in	r29, 0x3e	; 62
    1196:	89 83       	std	Y+1, r24	; 0x01
    1198:	89 81       	ldd	r24, Y+1	; 0x01
    119a:	0e 94 ad 06 	call	0xd5a	; 0xd5a <LCD_send_data>
    119e:	0f 90       	pop	r0
    11a0:	df 91       	pop	r29
    11a2:	cf 91       	pop	r28
    11a4:	08 95       	ret

000011a6 <disp_str>:
void disp_str(u8* str)
{
    11a6:	cf 93       	push	r28
    11a8:	df 93       	push	r29
    11aa:	00 d0       	rcall	.+0      	; 0x11ac <disp_str+0x6>
    11ac:	1f 92       	push	r1
    11ae:	cd b7       	in	r28, 0x3d	; 61
    11b0:	de b7       	in	r29, 0x3e	; 62
    11b2:	9b 83       	std	Y+3, r25	; 0x03
    11b4:	8a 83       	std	Y+2, r24	; 0x02
	u8 indx=0;
    11b6:	19 82       	std	Y+1, r1	; 0x01
	while(str[indx]!='\0')
    11b8:	0e c0       	rjmp	.+28     	; 0x11d6 <disp_str+0x30>
	{
		disp_char(indx[str]);
    11ba:	89 81       	ldd	r24, Y+1	; 0x01
    11bc:	88 2f       	mov	r24, r24
    11be:	90 e0       	ldi	r25, 0x00	; 0
    11c0:	2a 81       	ldd	r18, Y+2	; 0x02
    11c2:	3b 81       	ldd	r19, Y+3	; 0x03
    11c4:	82 0f       	add	r24, r18
    11c6:	93 1f       	adc	r25, r19
    11c8:	fc 01       	movw	r30, r24
    11ca:	80 81       	ld	r24, Z
    11cc:	0e 94 c6 08 	call	0x118c	; 0x118c <disp_char>
		indx++;
    11d0:	89 81       	ldd	r24, Y+1	; 0x01
    11d2:	8f 5f       	subi	r24, 0xFF	; 255
    11d4:	89 83       	std	Y+1, r24	; 0x01
	disp_char(letter);	
}
void disp_str(u8* str)
{
	u8 indx=0;
	while(str[indx]!='\0')
    11d6:	89 81       	ldd	r24, Y+1	; 0x01
    11d8:	88 2f       	mov	r24, r24
    11da:	90 e0       	ldi	r25, 0x00	; 0
    11dc:	2a 81       	ldd	r18, Y+2	; 0x02
    11de:	3b 81       	ldd	r19, Y+3	; 0x03
    11e0:	82 0f       	add	r24, r18
    11e2:	93 1f       	adc	r25, r19
    11e4:	fc 01       	movw	r30, r24
    11e6:	80 81       	ld	r24, Z
    11e8:	88 23       	and	r24, r24
    11ea:	39 f7       	brne	.-50     	; 0x11ba <disp_str+0x14>
	{
		disp_char(indx[str]);
		indx++;
	}
}
    11ec:	0f 90       	pop	r0
    11ee:	0f 90       	pop	r0
    11f0:	0f 90       	pop	r0
    11f2:	df 91       	pop	r29
    11f4:	cf 91       	pop	r28
    11f6:	08 95       	ret

000011f8 <LCD_GOTXY>:
void LCD_GOTXY(u8 row,u8 col)
{
    11f8:	cf 93       	push	r28
    11fa:	df 93       	push	r29
    11fc:	00 d0       	rcall	.+0      	; 0x11fe <LCD_GOTXY+0x6>
    11fe:	cd b7       	in	r28, 0x3d	; 61
    1200:	de b7       	in	r29, 0x3e	; 62
    1202:	89 83       	std	Y+1, r24	; 0x01
    1204:	6a 83       	std	Y+2, r22	; 0x02
	if (row==1)
    1206:	89 81       	ldd	r24, Y+1	; 0x01
    1208:	81 30       	cpi	r24, 0x01	; 1
    120a:	29 f4       	brne	.+10     	; 0x1216 <LCD_GOTXY+0x1e>
	{
		LCD_send_cmd(DDRAM_ADD+0x00+col-1);
    120c:	8a 81       	ldd	r24, Y+2	; 0x02
    120e:	81 58       	subi	r24, 0x81	; 129
    1210:	0e 94 9c 06 	call	0xd38	; 0xd38 <LCD_send_cmd>
    1214:	07 c0       	rjmp	.+14     	; 0x1224 <LCD_GOTXY+0x2c>
	}
	else if(row==2)
    1216:	89 81       	ldd	r24, Y+1	; 0x01
    1218:	82 30       	cpi	r24, 0x02	; 2
    121a:	21 f4       	brne	.+8      	; 0x1224 <LCD_GOTXY+0x2c>
	{
		LCD_send_cmd(DDRAM_ADD+0x40+col-1);	
    121c:	8a 81       	ldd	r24, Y+2	; 0x02
    121e:	81 54       	subi	r24, 0x41	; 65
    1220:	0e 94 9c 06 	call	0xd38	; 0xd38 <LCD_send_cmd>
	}
	else{}
	
}
    1224:	0f 90       	pop	r0
    1226:	0f 90       	pop	r0
    1228:	df 91       	pop	r29
    122a:	cf 91       	pop	r28
    122c:	08 95       	ret

0000122e <disp_strXY>:

void disp_strXY(u8 row,u8 col,u8* str)
{
    122e:	cf 93       	push	r28
    1230:	df 93       	push	r29
    1232:	00 d0       	rcall	.+0      	; 0x1234 <disp_strXY+0x6>
    1234:	00 d0       	rcall	.+0      	; 0x1236 <disp_strXY+0x8>
    1236:	cd b7       	in	r28, 0x3d	; 61
    1238:	de b7       	in	r29, 0x3e	; 62
    123a:	89 83       	std	Y+1, r24	; 0x01
    123c:	6a 83       	std	Y+2, r22	; 0x02
    123e:	5c 83       	std	Y+4, r21	; 0x04
    1240:	4b 83       	std	Y+3, r20	; 0x03
	LCD_GOTXY(row,col);
    1242:	6a 81       	ldd	r22, Y+2	; 0x02
    1244:	89 81       	ldd	r24, Y+1	; 0x01
    1246:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <LCD_GOTXY>
	disp_str(str);
    124a:	8b 81       	ldd	r24, Y+3	; 0x03
    124c:	9c 81       	ldd	r25, Y+4	; 0x04
    124e:	0e 94 d3 08 	call	0x11a6	; 0x11a6 <disp_str>
}
    1252:	0f 90       	pop	r0
    1254:	0f 90       	pop	r0
    1256:	0f 90       	pop	r0
    1258:	0f 90       	pop	r0
    125a:	df 91       	pop	r29
    125c:	cf 91       	pop	r28
    125e:	08 95       	ret

00001260 <writePin>:
		result=GETBit(PINC,(pinNo-PORTC_OFFSET));
	else if((pinNo>=PD0)&&(pinNo<=PD7))
		result=GETBit(PIND,(pinNo-PORTD_OFFSET));
	else{}
	return result;
}
    1260:	cf 93       	push	r28
    1262:	df 93       	push	r29
    1264:	00 d0       	rcall	.+0      	; 0x1266 <writePin+0x6>
    1266:	cd b7       	in	r28, 0x3d	; 61
    1268:	de b7       	in	r29, 0x3e	; 62
    126a:	89 83       	std	Y+1, r24	; 0x01
    126c:	6a 83       	std	Y+2, r22	; 0x02
    126e:	89 81       	ldd	r24, Y+1	; 0x01
    1270:	88 30       	cpi	r24, 0x08	; 8
    1272:	90 f5       	brcc	.+100    	; 0x12d8 <writePin+0x78>
    1274:	8a 81       	ldd	r24, Y+2	; 0x02
    1276:	81 30       	cpi	r24, 0x01	; 1
    1278:	a9 f4       	brne	.+42     	; 0x12a4 <writePin+0x44>
    127a:	8b e3       	ldi	r24, 0x3B	; 59
    127c:	90 e0       	ldi	r25, 0x00	; 0
    127e:	2b e3       	ldi	r18, 0x3B	; 59
    1280:	30 e0       	ldi	r19, 0x00	; 0
    1282:	f9 01       	movw	r30, r18
    1284:	20 81       	ld	r18, Z
    1286:	62 2f       	mov	r22, r18
    1288:	29 81       	ldd	r18, Y+1	; 0x01
    128a:	42 2f       	mov	r20, r18
    128c:	50 e0       	ldi	r21, 0x00	; 0
    128e:	21 e0       	ldi	r18, 0x01	; 1
    1290:	30 e0       	ldi	r19, 0x00	; 0
    1292:	02 c0       	rjmp	.+4      	; 0x1298 <writePin+0x38>
    1294:	22 0f       	add	r18, r18
    1296:	33 1f       	adc	r19, r19
    1298:	4a 95       	dec	r20
    129a:	e2 f7       	brpl	.-8      	; 0x1294 <writePin+0x34>
    129c:	26 2b       	or	r18, r22
    129e:	fc 01       	movw	r30, r24
    12a0:	20 83       	st	Z, r18
    12a2:	d0 c0       	rjmp	.+416    	; 0x1444 <writePin+0x1e4>
    12a4:	8a 81       	ldd	r24, Y+2	; 0x02
    12a6:	88 23       	and	r24, r24
    12a8:	09 f0       	breq	.+2      	; 0x12ac <writePin+0x4c>
    12aa:	cc c0       	rjmp	.+408    	; 0x1444 <writePin+0x1e4>
    12ac:	8b e3       	ldi	r24, 0x3B	; 59
    12ae:	90 e0       	ldi	r25, 0x00	; 0
    12b0:	2b e3       	ldi	r18, 0x3B	; 59
    12b2:	30 e0       	ldi	r19, 0x00	; 0
    12b4:	f9 01       	movw	r30, r18
    12b6:	20 81       	ld	r18, Z
    12b8:	62 2f       	mov	r22, r18
    12ba:	29 81       	ldd	r18, Y+1	; 0x01
    12bc:	42 2f       	mov	r20, r18
    12be:	50 e0       	ldi	r21, 0x00	; 0
    12c0:	21 e0       	ldi	r18, 0x01	; 1
    12c2:	30 e0       	ldi	r19, 0x00	; 0
    12c4:	02 c0       	rjmp	.+4      	; 0x12ca <writePin+0x6a>
    12c6:	22 0f       	add	r18, r18
    12c8:	33 1f       	adc	r19, r19
    12ca:	4a 95       	dec	r20
    12cc:	e2 f7       	brpl	.-8      	; 0x12c6 <writePin+0x66>
    12ce:	20 95       	com	r18
    12d0:	26 23       	and	r18, r22
    12d2:	fc 01       	movw	r30, r24
    12d4:	20 83       	st	Z, r18
    12d6:	b6 c0       	rjmp	.+364    	; 0x1444 <writePin+0x1e4>
    12d8:	89 81       	ldd	r24, Y+1	; 0x01
    12da:	88 30       	cpi	r24, 0x08	; 8
    12dc:	d0 f1       	brcs	.+116    	; 0x1352 <writePin+0xf2>
    12de:	89 81       	ldd	r24, Y+1	; 0x01
    12e0:	80 31       	cpi	r24, 0x10	; 16
    12e2:	b8 f5       	brcc	.+110    	; 0x1352 <writePin+0xf2>
    12e4:	8a 81       	ldd	r24, Y+2	; 0x02
    12e6:	81 30       	cpi	r24, 0x01	; 1
    12e8:	c1 f4       	brne	.+48     	; 0x131a <writePin+0xba>
    12ea:	88 e3       	ldi	r24, 0x38	; 56
    12ec:	90 e0       	ldi	r25, 0x00	; 0
    12ee:	28 e3       	ldi	r18, 0x38	; 56
    12f0:	30 e0       	ldi	r19, 0x00	; 0
    12f2:	f9 01       	movw	r30, r18
    12f4:	20 81       	ld	r18, Z
    12f6:	62 2f       	mov	r22, r18
    12f8:	29 81       	ldd	r18, Y+1	; 0x01
    12fa:	22 2f       	mov	r18, r18
    12fc:	30 e0       	ldi	r19, 0x00	; 0
    12fe:	a9 01       	movw	r20, r18
    1300:	48 50       	subi	r20, 0x08	; 8
    1302:	51 09       	sbc	r21, r1
    1304:	21 e0       	ldi	r18, 0x01	; 1
    1306:	30 e0       	ldi	r19, 0x00	; 0
    1308:	02 c0       	rjmp	.+4      	; 0x130e <writePin+0xae>
    130a:	22 0f       	add	r18, r18
    130c:	33 1f       	adc	r19, r19
    130e:	4a 95       	dec	r20
    1310:	e2 f7       	brpl	.-8      	; 0x130a <writePin+0xaa>
    1312:	26 2b       	or	r18, r22
    1314:	fc 01       	movw	r30, r24
    1316:	20 83       	st	Z, r18
    1318:	1b c0       	rjmp	.+54     	; 0x1350 <writePin+0xf0>
    131a:	8a 81       	ldd	r24, Y+2	; 0x02
    131c:	88 23       	and	r24, r24
    131e:	c1 f4       	brne	.+48     	; 0x1350 <writePin+0xf0>
    1320:	88 e3       	ldi	r24, 0x38	; 56
    1322:	90 e0       	ldi	r25, 0x00	; 0
    1324:	28 e3       	ldi	r18, 0x38	; 56
    1326:	30 e0       	ldi	r19, 0x00	; 0
    1328:	f9 01       	movw	r30, r18
    132a:	20 81       	ld	r18, Z
    132c:	62 2f       	mov	r22, r18
    132e:	29 81       	ldd	r18, Y+1	; 0x01
    1330:	22 2f       	mov	r18, r18
    1332:	30 e0       	ldi	r19, 0x00	; 0
    1334:	a9 01       	movw	r20, r18
    1336:	48 50       	subi	r20, 0x08	; 8
    1338:	51 09       	sbc	r21, r1
    133a:	21 e0       	ldi	r18, 0x01	; 1
    133c:	30 e0       	ldi	r19, 0x00	; 0
    133e:	02 c0       	rjmp	.+4      	; 0x1344 <writePin+0xe4>
    1340:	22 0f       	add	r18, r18
    1342:	33 1f       	adc	r19, r19
    1344:	4a 95       	dec	r20
    1346:	e2 f7       	brpl	.-8      	; 0x1340 <writePin+0xe0>
    1348:	20 95       	com	r18
    134a:	26 23       	and	r18, r22
    134c:	fc 01       	movw	r30, r24
    134e:	20 83       	st	Z, r18
    1350:	79 c0       	rjmp	.+242    	; 0x1444 <writePin+0x1e4>
    1352:	89 81       	ldd	r24, Y+1	; 0x01
    1354:	80 31       	cpi	r24, 0x10	; 16
    1356:	d0 f1       	brcs	.+116    	; 0x13cc <writePin+0x16c>
    1358:	89 81       	ldd	r24, Y+1	; 0x01
    135a:	88 31       	cpi	r24, 0x18	; 24
    135c:	b8 f5       	brcc	.+110    	; 0x13cc <writePin+0x16c>
    135e:	8a 81       	ldd	r24, Y+2	; 0x02
    1360:	81 30       	cpi	r24, 0x01	; 1
    1362:	c1 f4       	brne	.+48     	; 0x1394 <writePin+0x134>
    1364:	85 e3       	ldi	r24, 0x35	; 53
    1366:	90 e0       	ldi	r25, 0x00	; 0
    1368:	25 e3       	ldi	r18, 0x35	; 53
    136a:	30 e0       	ldi	r19, 0x00	; 0
    136c:	f9 01       	movw	r30, r18
    136e:	20 81       	ld	r18, Z
    1370:	62 2f       	mov	r22, r18
    1372:	29 81       	ldd	r18, Y+1	; 0x01
    1374:	22 2f       	mov	r18, r18
    1376:	30 e0       	ldi	r19, 0x00	; 0
    1378:	a9 01       	movw	r20, r18
    137a:	40 51       	subi	r20, 0x10	; 16
    137c:	51 09       	sbc	r21, r1
    137e:	21 e0       	ldi	r18, 0x01	; 1
    1380:	30 e0       	ldi	r19, 0x00	; 0
    1382:	02 c0       	rjmp	.+4      	; 0x1388 <writePin+0x128>
    1384:	22 0f       	add	r18, r18
    1386:	33 1f       	adc	r19, r19
    1388:	4a 95       	dec	r20
    138a:	e2 f7       	brpl	.-8      	; 0x1384 <writePin+0x124>
    138c:	26 2b       	or	r18, r22
    138e:	fc 01       	movw	r30, r24
    1390:	20 83       	st	Z, r18
    1392:	1b c0       	rjmp	.+54     	; 0x13ca <writePin+0x16a>
    1394:	8a 81       	ldd	r24, Y+2	; 0x02
    1396:	88 23       	and	r24, r24
    1398:	c1 f4       	brne	.+48     	; 0x13ca <writePin+0x16a>
    139a:	85 e3       	ldi	r24, 0x35	; 53
    139c:	90 e0       	ldi	r25, 0x00	; 0
    139e:	25 e3       	ldi	r18, 0x35	; 53
    13a0:	30 e0       	ldi	r19, 0x00	; 0
    13a2:	f9 01       	movw	r30, r18
    13a4:	20 81       	ld	r18, Z
    13a6:	62 2f       	mov	r22, r18
    13a8:	29 81       	ldd	r18, Y+1	; 0x01
    13aa:	22 2f       	mov	r18, r18
    13ac:	30 e0       	ldi	r19, 0x00	; 0
    13ae:	a9 01       	movw	r20, r18
    13b0:	40 51       	subi	r20, 0x10	; 16
    13b2:	51 09       	sbc	r21, r1
    13b4:	21 e0       	ldi	r18, 0x01	; 1
    13b6:	30 e0       	ldi	r19, 0x00	; 0
    13b8:	02 c0       	rjmp	.+4      	; 0x13be <writePin+0x15e>
    13ba:	22 0f       	add	r18, r18
    13bc:	33 1f       	adc	r19, r19
    13be:	4a 95       	dec	r20
    13c0:	e2 f7       	brpl	.-8      	; 0x13ba <writePin+0x15a>
    13c2:	20 95       	com	r18
    13c4:	26 23       	and	r18, r22
    13c6:	fc 01       	movw	r30, r24
    13c8:	20 83       	st	Z, r18
    13ca:	3c c0       	rjmp	.+120    	; 0x1444 <writePin+0x1e4>
    13cc:	89 81       	ldd	r24, Y+1	; 0x01
    13ce:	88 31       	cpi	r24, 0x18	; 24
    13d0:	c8 f1       	brcs	.+114    	; 0x1444 <writePin+0x1e4>
    13d2:	89 81       	ldd	r24, Y+1	; 0x01
    13d4:	80 32       	cpi	r24, 0x20	; 32
    13d6:	b0 f5       	brcc	.+108    	; 0x1444 <writePin+0x1e4>
    13d8:	8a 81       	ldd	r24, Y+2	; 0x02
    13da:	81 30       	cpi	r24, 0x01	; 1
    13dc:	c1 f4       	brne	.+48     	; 0x140e <writePin+0x1ae>
    13de:	82 e3       	ldi	r24, 0x32	; 50
    13e0:	90 e0       	ldi	r25, 0x00	; 0
    13e2:	22 e3       	ldi	r18, 0x32	; 50
    13e4:	30 e0       	ldi	r19, 0x00	; 0
    13e6:	f9 01       	movw	r30, r18
    13e8:	20 81       	ld	r18, Z
    13ea:	62 2f       	mov	r22, r18
    13ec:	29 81       	ldd	r18, Y+1	; 0x01
    13ee:	22 2f       	mov	r18, r18
    13f0:	30 e0       	ldi	r19, 0x00	; 0
    13f2:	a9 01       	movw	r20, r18
    13f4:	48 51       	subi	r20, 0x18	; 24
    13f6:	51 09       	sbc	r21, r1
    13f8:	21 e0       	ldi	r18, 0x01	; 1
    13fa:	30 e0       	ldi	r19, 0x00	; 0
    13fc:	02 c0       	rjmp	.+4      	; 0x1402 <writePin+0x1a2>
    13fe:	22 0f       	add	r18, r18
    1400:	33 1f       	adc	r19, r19
    1402:	4a 95       	dec	r20
    1404:	e2 f7       	brpl	.-8      	; 0x13fe <writePin+0x19e>
    1406:	26 2b       	or	r18, r22
    1408:	fc 01       	movw	r30, r24
    140a:	20 83       	st	Z, r18
    140c:	1b c0       	rjmp	.+54     	; 0x1444 <writePin+0x1e4>
    140e:	8a 81       	ldd	r24, Y+2	; 0x02
    1410:	88 23       	and	r24, r24
    1412:	c1 f4       	brne	.+48     	; 0x1444 <writePin+0x1e4>
    1414:	82 e3       	ldi	r24, 0x32	; 50
    1416:	90 e0       	ldi	r25, 0x00	; 0
    1418:	22 e3       	ldi	r18, 0x32	; 50
    141a:	30 e0       	ldi	r19, 0x00	; 0
    141c:	f9 01       	movw	r30, r18
    141e:	20 81       	ld	r18, Z
    1420:	62 2f       	mov	r22, r18
    1422:	29 81       	ldd	r18, Y+1	; 0x01
    1424:	22 2f       	mov	r18, r18
    1426:	30 e0       	ldi	r19, 0x00	; 0
    1428:	a9 01       	movw	r20, r18
    142a:	48 51       	subi	r20, 0x18	; 24
    142c:	51 09       	sbc	r21, r1
    142e:	21 e0       	ldi	r18, 0x01	; 1
    1430:	30 e0       	ldi	r19, 0x00	; 0
    1432:	02 c0       	rjmp	.+4      	; 0x1438 <writePin+0x1d8>
    1434:	22 0f       	add	r18, r18
    1436:	33 1f       	adc	r19, r19
    1438:	4a 95       	dec	r20
    143a:	e2 f7       	brpl	.-8      	; 0x1434 <writePin+0x1d4>
    143c:	20 95       	com	r18
    143e:	26 23       	and	r18, r22
    1440:	fc 01       	movw	r30, r24
    1442:	20 83       	st	Z, r18
    1444:	0f 90       	pop	r0
    1446:	0f 90       	pop	r0
    1448:	df 91       	pop	r29
    144a:	cf 91       	pop	r28
    144c:	08 95       	ret

0000144e <writePins>:
	
/*for custom number of bits*/
void writePins(volatile u8* port, u8 mask, u8 logic){
    144e:	cf 93       	push	r28
    1450:	df 93       	push	r29
    1452:	00 d0       	rcall	.+0      	; 0x1454 <writePins+0x6>
    1454:	00 d0       	rcall	.+0      	; 0x1456 <writePins+0x8>
    1456:	cd b7       	in	r28, 0x3d	; 61
    1458:	de b7       	in	r29, 0x3e	; 62
    145a:	9a 83       	std	Y+2, r25	; 0x02
    145c:	89 83       	std	Y+1, r24	; 0x01
    145e:	6b 83       	std	Y+3, r22	; 0x03
    1460:	4c 83       	std	Y+4, r20	; 0x04
	if(logic==HIGH)
    1462:	8c 81       	ldd	r24, Y+4	; 0x04
    1464:	81 30       	cpi	r24, 0x01	; 1
    1466:	61 f4       	brne	.+24     	; 0x1480 <writePins+0x32>
		SETBits(*port,mask);
    1468:	89 81       	ldd	r24, Y+1	; 0x01
    146a:	9a 81       	ldd	r25, Y+2	; 0x02
    146c:	fc 01       	movw	r30, r24
    146e:	90 81       	ld	r25, Z
    1470:	8b 81       	ldd	r24, Y+3	; 0x03
    1472:	29 2f       	mov	r18, r25
    1474:	28 2b       	or	r18, r24
    1476:	89 81       	ldd	r24, Y+1	; 0x01
    1478:	9a 81       	ldd	r25, Y+2	; 0x02
    147a:	fc 01       	movw	r30, r24
    147c:	20 83       	st	Z, r18
    147e:	10 c0       	rjmp	.+32     	; 0x14a0 <writePins+0x52>
	else if(logic==LOW)
    1480:	8c 81       	ldd	r24, Y+4	; 0x04
    1482:	88 23       	and	r24, r24
    1484:	69 f4       	brne	.+26     	; 0x14a0 <writePins+0x52>
		CLRBits(*port,mask);
    1486:	89 81       	ldd	r24, Y+1	; 0x01
    1488:	9a 81       	ldd	r25, Y+2	; 0x02
    148a:	fc 01       	movw	r30, r24
    148c:	80 81       	ld	r24, Z
    148e:	98 2f       	mov	r25, r24
    1490:	8b 81       	ldd	r24, Y+3	; 0x03
    1492:	80 95       	com	r24
    1494:	89 23       	and	r24, r25
    1496:	28 2f       	mov	r18, r24
    1498:	89 81       	ldd	r24, Y+1	; 0x01
    149a:	9a 81       	ldd	r25, Y+2	; 0x02
    149c:	fc 01       	movw	r30, r24
    149e:	20 83       	st	Z, r18
	else{}
}
    14a0:	0f 90       	pop	r0
    14a2:	0f 90       	pop	r0
    14a4:	0f 90       	pop	r0
    14a6:	0f 90       	pop	r0
    14a8:	df 91       	pop	r29
    14aa:	cf 91       	pop	r28
    14ac:	08 95       	ret

000014ae <pinsDirection>:
void pinsDirection(volatile u8* ddr, u8 mask, u8 direction){
    14ae:	cf 93       	push	r28
    14b0:	df 93       	push	r29
    14b2:	00 d0       	rcall	.+0      	; 0x14b4 <pinsDirection+0x6>
    14b4:	00 d0       	rcall	.+0      	; 0x14b6 <pinsDirection+0x8>
    14b6:	cd b7       	in	r28, 0x3d	; 61
    14b8:	de b7       	in	r29, 0x3e	; 62
    14ba:	9a 83       	std	Y+2, r25	; 0x02
    14bc:	89 83       	std	Y+1, r24	; 0x01
    14be:	6b 83       	std	Y+3, r22	; 0x03
    14c0:	4c 83       	std	Y+4, r20	; 0x04
	if(direction == OUTPUT)
    14c2:	8c 81       	ldd	r24, Y+4	; 0x04
    14c4:	81 30       	cpi	r24, 0x01	; 1
    14c6:	61 f4       	brne	.+24     	; 0x14e0 <pinsDirection+0x32>
		SETBits(*ddr,mask);
    14c8:	89 81       	ldd	r24, Y+1	; 0x01
    14ca:	9a 81       	ldd	r25, Y+2	; 0x02
    14cc:	fc 01       	movw	r30, r24
    14ce:	90 81       	ld	r25, Z
    14d0:	8b 81       	ldd	r24, Y+3	; 0x03
    14d2:	29 2f       	mov	r18, r25
    14d4:	28 2b       	or	r18, r24
    14d6:	89 81       	ldd	r24, Y+1	; 0x01
    14d8:	9a 81       	ldd	r25, Y+2	; 0x02
    14da:	fc 01       	movw	r30, r24
    14dc:	20 83       	st	Z, r18
    14de:	10 c0       	rjmp	.+32     	; 0x1500 <pinsDirection+0x52>
	else if(direction == INPUT)
    14e0:	8c 81       	ldd	r24, Y+4	; 0x04
    14e2:	88 23       	and	r24, r24
    14e4:	69 f4       	brne	.+26     	; 0x1500 <pinsDirection+0x52>
		CLRBits(*ddr,mask);
    14e6:	89 81       	ldd	r24, Y+1	; 0x01
    14e8:	9a 81       	ldd	r25, Y+2	; 0x02
    14ea:	fc 01       	movw	r30, r24
    14ec:	80 81       	ld	r24, Z
    14ee:	98 2f       	mov	r25, r24
    14f0:	8b 81       	ldd	r24, Y+3	; 0x03
    14f2:	80 95       	com	r24
    14f4:	89 23       	and	r24, r25
    14f6:	28 2f       	mov	r18, r24
    14f8:	89 81       	ldd	r24, Y+1	; 0x01
    14fa:	9a 81       	ldd	r25, Y+2	; 0x02
    14fc:	fc 01       	movw	r30, r24
    14fe:	20 83       	st	Z, r18
	else{}
}
    1500:	0f 90       	pop	r0
    1502:	0f 90       	pop	r0
    1504:	0f 90       	pop	r0
    1506:	0f 90       	pop	r0
    1508:	df 91       	pop	r29
    150a:	cf 91       	pop	r28
    150c:	08 95       	ret

0000150e <SPI_Init>:
#include "SPI.h"
void SPI_Init(SPI_Mode spiMode){
    150e:	cf 93       	push	r28
    1510:	df 93       	push	r29
    1512:	1f 92       	push	r1
    1514:	cd b7       	in	r28, 0x3d	; 61
    1516:	de b7       	in	r29, 0x3e	; 62
    1518:	89 83       	std	Y+1, r24	; 0x01
	switch(spiMode){
    151a:	89 81       	ldd	r24, Y+1	; 0x01
    151c:	88 2f       	mov	r24, r24
    151e:	90 e0       	ldi	r25, 0x00	; 0
    1520:	00 97       	sbiw	r24, 0x00	; 0
    1522:	21 f0       	breq	.+8      	; 0x152c <SPI_Init+0x1e>
    1524:	01 97       	sbiw	r24, 0x01	; 1
    1526:	09 f4       	brne	.+2      	; 0x152a <SPI_Init+0x1c>
    1528:	45 c0       	rjmp	.+138    	; 0x15b4 <SPI_Init+0xa6>
    152a:	7b c0       	rjmp	.+246    	; 0x1622 <SPI_Init+0x114>
	case SPI_MASTER:
	SETBit(SPI_DDR,SPI_SS);
    152c:	87 e3       	ldi	r24, 0x37	; 55
    152e:	90 e0       	ldi	r25, 0x00	; 0
    1530:	27 e3       	ldi	r18, 0x37	; 55
    1532:	30 e0       	ldi	r19, 0x00	; 0
    1534:	f9 01       	movw	r30, r18
    1536:	20 81       	ld	r18, Z
    1538:	20 61       	ori	r18, 0x10	; 16
    153a:	fc 01       	movw	r30, r24
    153c:	20 83       	st	Z, r18
	SETBit(SPI_DDR,SPI_SCK);
    153e:	87 e3       	ldi	r24, 0x37	; 55
    1540:	90 e0       	ldi	r25, 0x00	; 0
    1542:	27 e3       	ldi	r18, 0x37	; 55
    1544:	30 e0       	ldi	r19, 0x00	; 0
    1546:	f9 01       	movw	r30, r18
    1548:	20 81       	ld	r18, Z
    154a:	20 68       	ori	r18, 0x80	; 128
    154c:	fc 01       	movw	r30, r24
    154e:	20 83       	st	Z, r18
	SETBit(SPI_DDR,SPI_MOSI);
    1550:	87 e3       	ldi	r24, 0x37	; 55
    1552:	90 e0       	ldi	r25, 0x00	; 0
    1554:	27 e3       	ldi	r18, 0x37	; 55
    1556:	30 e0       	ldi	r19, 0x00	; 0
    1558:	f9 01       	movw	r30, r18
    155a:	20 81       	ld	r18, Z
    155c:	20 62       	ori	r18, 0x20	; 32
    155e:	fc 01       	movw	r30, r24
    1560:	20 83       	st	Z, r18
	CLRBit(SPI_DDR,SPI_MISO);
    1562:	87 e3       	ldi	r24, 0x37	; 55
    1564:	90 e0       	ldi	r25, 0x00	; 0
    1566:	27 e3       	ldi	r18, 0x37	; 55
    1568:	30 e0       	ldi	r19, 0x00	; 0
    156a:	f9 01       	movw	r30, r18
    156c:	20 81       	ld	r18, Z
    156e:	2f 7b       	andi	r18, 0xBF	; 191
    1570:	fc 01       	movw	r30, r24
    1572:	20 83       	st	Z, r18
	
		SETBit(SPCR,SPR0);
    1574:	8d e2       	ldi	r24, 0x2D	; 45
    1576:	90 e0       	ldi	r25, 0x00	; 0
    1578:	2d e2       	ldi	r18, 0x2D	; 45
    157a:	30 e0       	ldi	r19, 0x00	; 0
    157c:	f9 01       	movw	r30, r18
    157e:	20 81       	ld	r18, Z
    1580:	21 60       	ori	r18, 0x01	; 1
    1582:	fc 01       	movw	r30, r24
    1584:	20 83       	st	Z, r18
		SETBit(SPCR,MSTR);
    1586:	8d e2       	ldi	r24, 0x2D	; 45
    1588:	90 e0       	ldi	r25, 0x00	; 0
    158a:	2d e2       	ldi	r18, 0x2D	; 45
    158c:	30 e0       	ldi	r19, 0x00	; 0
    158e:	f9 01       	movw	r30, r18
    1590:	20 81       	ld	r18, Z
    1592:	20 61       	ori	r18, 0x10	; 16
    1594:	fc 01       	movw	r30, r24
    1596:	20 83       	st	Z, r18
		SETBit(SPCR,SPE);
    1598:	8d e2       	ldi	r24, 0x2D	; 45
    159a:	90 e0       	ldi	r25, 0x00	; 0
    159c:	2d e2       	ldi	r18, 0x2D	; 45
    159e:	30 e0       	ldi	r19, 0x00	; 0
    15a0:	f9 01       	movw	r30, r18
    15a2:	20 81       	ld	r18, Z
    15a4:	20 64       	ori	r18, 0x40	; 64
    15a6:	fc 01       	movw	r30, r24
    15a8:	20 83       	st	Z, r18
	    writePin(PB4,HIGH);
    15aa:	61 e0       	ldi	r22, 0x01	; 1
    15ac:	8c e0       	ldi	r24, 0x0C	; 12
    15ae:	0e 94 30 09 	call	0x1260	; 0x1260 <writePin>

	break;
    15b2:	37 c0       	rjmp	.+110    	; 0x1622 <SPI_Init+0x114>
	case SPI_SLAVE:
	CLRBit(SPI_DDR,SPI_SS);
    15b4:	87 e3       	ldi	r24, 0x37	; 55
    15b6:	90 e0       	ldi	r25, 0x00	; 0
    15b8:	27 e3       	ldi	r18, 0x37	; 55
    15ba:	30 e0       	ldi	r19, 0x00	; 0
    15bc:	f9 01       	movw	r30, r18
    15be:	20 81       	ld	r18, Z
    15c0:	2f 7e       	andi	r18, 0xEF	; 239
    15c2:	fc 01       	movw	r30, r24
    15c4:	20 83       	st	Z, r18
	CLRBit(SPI_DDR,SPI_SCK);
    15c6:	87 e3       	ldi	r24, 0x37	; 55
    15c8:	90 e0       	ldi	r25, 0x00	; 0
    15ca:	27 e3       	ldi	r18, 0x37	; 55
    15cc:	30 e0       	ldi	r19, 0x00	; 0
    15ce:	f9 01       	movw	r30, r18
    15d0:	20 81       	ld	r18, Z
    15d2:	2f 77       	andi	r18, 0x7F	; 127
    15d4:	fc 01       	movw	r30, r24
    15d6:	20 83       	st	Z, r18
	CLRBit(SPI_DDR,SPI_MOSI);
    15d8:	87 e3       	ldi	r24, 0x37	; 55
    15da:	90 e0       	ldi	r25, 0x00	; 0
    15dc:	27 e3       	ldi	r18, 0x37	; 55
    15de:	30 e0       	ldi	r19, 0x00	; 0
    15e0:	f9 01       	movw	r30, r18
    15e2:	20 81       	ld	r18, Z
    15e4:	2f 7d       	andi	r18, 0xDF	; 223
    15e6:	fc 01       	movw	r30, r24
    15e8:	20 83       	st	Z, r18
	SETBit(SPI_DDR,SPI_MISO);
    15ea:	87 e3       	ldi	r24, 0x37	; 55
    15ec:	90 e0       	ldi	r25, 0x00	; 0
    15ee:	27 e3       	ldi	r18, 0x37	; 55
    15f0:	30 e0       	ldi	r19, 0x00	; 0
    15f2:	f9 01       	movw	r30, r18
    15f4:	20 81       	ld	r18, Z
    15f6:	20 64       	ori	r18, 0x40	; 64
    15f8:	fc 01       	movw	r30, r24
    15fa:	20 83       	st	Z, r18
	
		CLRBit(SPCR,MSTR);
    15fc:	8d e2       	ldi	r24, 0x2D	; 45
    15fe:	90 e0       	ldi	r25, 0x00	; 0
    1600:	2d e2       	ldi	r18, 0x2D	; 45
    1602:	30 e0       	ldi	r19, 0x00	; 0
    1604:	f9 01       	movw	r30, r18
    1606:	20 81       	ld	r18, Z
    1608:	2f 7e       	andi	r18, 0xEF	; 239
    160a:	fc 01       	movw	r30, r24
    160c:	20 83       	st	Z, r18
		SETBit(SPCR,SPE);
    160e:	8d e2       	ldi	r24, 0x2D	; 45
    1610:	90 e0       	ldi	r25, 0x00	; 0
    1612:	2d e2       	ldi	r18, 0x2D	; 45
    1614:	30 e0       	ldi	r19, 0x00	; 0
    1616:	f9 01       	movw	r30, r18
    1618:	20 81       	ld	r18, Z
    161a:	20 64       	ori	r18, 0x40	; 64
    161c:	fc 01       	movw	r30, r24
    161e:	20 83       	st	Z, r18

	break;
    1620:	00 00       	nop
	}
}
    1622:	0f 90       	pop	r0
    1624:	df 91       	pop	r29
    1626:	cf 91       	pop	r28
    1628:	08 95       	ret

0000162a <SPI_Transceive>:
u8 SPI_Transceive(u8 data){
    162a:	cf 93       	push	r28
    162c:	df 93       	push	r29
    162e:	1f 92       	push	r1
    1630:	cd b7       	in	r28, 0x3d	; 61
    1632:	de b7       	in	r29, 0x3e	; 62
    1634:	89 83       	std	Y+1, r24	; 0x01
		SPDR = data;
    1636:	8f e2       	ldi	r24, 0x2F	; 47
    1638:	90 e0       	ldi	r25, 0x00	; 0
    163a:	29 81       	ldd	r18, Y+1	; 0x01
    163c:	fc 01       	movw	r30, r24
    163e:	20 83       	st	Z, r18
		while(!(SPSR & (1<<SPIF)));
    1640:	00 00       	nop
    1642:	8e e2       	ldi	r24, 0x2E	; 46
    1644:	90 e0       	ldi	r25, 0x00	; 0
    1646:	fc 01       	movw	r30, r24
    1648:	80 81       	ld	r24, Z
    164a:	88 23       	and	r24, r24
    164c:	d4 f7       	brge	.-12     	; 0x1642 <SPI_Transceive+0x18>
		return SPDR;
    164e:	8f e2       	ldi	r24, 0x2F	; 47
    1650:	90 e0       	ldi	r25, 0x00	; 0
    1652:	fc 01       	movw	r30, r24
    1654:	80 81       	ld	r24, Z
}
    1656:	0f 90       	pop	r0
    1658:	df 91       	pop	r29
    165a:	cf 91       	pop	r28
    165c:	08 95       	ret

0000165e <__subsf3>:
    165e:	50 58       	subi	r21, 0x80	; 128

00001660 <__addsf3>:
    1660:	bb 27       	eor	r27, r27
    1662:	aa 27       	eor	r26, r26
    1664:	0e 94 47 0b 	call	0x168e	; 0x168e <__addsf3x>
    1668:	0c 94 7d 0c 	jmp	0x18fa	; 0x18fa <__fp_round>
    166c:	0e 94 6f 0c 	call	0x18de	; 0x18de <__fp_pscA>
    1670:	38 f0       	brcs	.+14     	; 0x1680 <__addsf3+0x20>
    1672:	0e 94 76 0c 	call	0x18ec	; 0x18ec <__fp_pscB>
    1676:	20 f0       	brcs	.+8      	; 0x1680 <__addsf3+0x20>
    1678:	39 f4       	brne	.+14     	; 0x1688 <__addsf3+0x28>
    167a:	9f 3f       	cpi	r25, 0xFF	; 255
    167c:	19 f4       	brne	.+6      	; 0x1684 <__addsf3+0x24>
    167e:	26 f4       	brtc	.+8      	; 0x1688 <__addsf3+0x28>
    1680:	0c 94 6c 0c 	jmp	0x18d8	; 0x18d8 <__fp_nan>
    1684:	0e f4       	brtc	.+2      	; 0x1688 <__addsf3+0x28>
    1686:	e0 95       	com	r30
    1688:	e7 fb       	bst	r30, 7
    168a:	0c 94 66 0c 	jmp	0x18cc	; 0x18cc <__fp_inf>

0000168e <__addsf3x>:
    168e:	e9 2f       	mov	r30, r25
    1690:	0e 94 8e 0c 	call	0x191c	; 0x191c <__fp_split3>
    1694:	58 f3       	brcs	.-42     	; 0x166c <__addsf3+0xc>
    1696:	ba 17       	cp	r27, r26
    1698:	62 07       	cpc	r22, r18
    169a:	73 07       	cpc	r23, r19
    169c:	84 07       	cpc	r24, r20
    169e:	95 07       	cpc	r25, r21
    16a0:	20 f0       	brcs	.+8      	; 0x16aa <__addsf3x+0x1c>
    16a2:	79 f4       	brne	.+30     	; 0x16c2 <__addsf3x+0x34>
    16a4:	a6 f5       	brtc	.+104    	; 0x170e <__addsf3x+0x80>
    16a6:	0c 94 b0 0c 	jmp	0x1960	; 0x1960 <__fp_zero>
    16aa:	0e f4       	brtc	.+2      	; 0x16ae <__addsf3x+0x20>
    16ac:	e0 95       	com	r30
    16ae:	0b 2e       	mov	r0, r27
    16b0:	ba 2f       	mov	r27, r26
    16b2:	a0 2d       	mov	r26, r0
    16b4:	0b 01       	movw	r0, r22
    16b6:	b9 01       	movw	r22, r18
    16b8:	90 01       	movw	r18, r0
    16ba:	0c 01       	movw	r0, r24
    16bc:	ca 01       	movw	r24, r20
    16be:	a0 01       	movw	r20, r0
    16c0:	11 24       	eor	r1, r1
    16c2:	ff 27       	eor	r31, r31
    16c4:	59 1b       	sub	r21, r25
    16c6:	99 f0       	breq	.+38     	; 0x16ee <__addsf3x+0x60>
    16c8:	59 3f       	cpi	r21, 0xF9	; 249
    16ca:	50 f4       	brcc	.+20     	; 0x16e0 <__addsf3x+0x52>
    16cc:	50 3e       	cpi	r21, 0xE0	; 224
    16ce:	68 f1       	brcs	.+90     	; 0x172a <__addsf3x+0x9c>
    16d0:	1a 16       	cp	r1, r26
    16d2:	f0 40       	sbci	r31, 0x00	; 0
    16d4:	a2 2f       	mov	r26, r18
    16d6:	23 2f       	mov	r18, r19
    16d8:	34 2f       	mov	r19, r20
    16da:	44 27       	eor	r20, r20
    16dc:	58 5f       	subi	r21, 0xF8	; 248
    16de:	f3 cf       	rjmp	.-26     	; 0x16c6 <__addsf3x+0x38>
    16e0:	46 95       	lsr	r20
    16e2:	37 95       	ror	r19
    16e4:	27 95       	ror	r18
    16e6:	a7 95       	ror	r26
    16e8:	f0 40       	sbci	r31, 0x00	; 0
    16ea:	53 95       	inc	r21
    16ec:	c9 f7       	brne	.-14     	; 0x16e0 <__addsf3x+0x52>
    16ee:	7e f4       	brtc	.+30     	; 0x170e <__addsf3x+0x80>
    16f0:	1f 16       	cp	r1, r31
    16f2:	ba 0b       	sbc	r27, r26
    16f4:	62 0b       	sbc	r22, r18
    16f6:	73 0b       	sbc	r23, r19
    16f8:	84 0b       	sbc	r24, r20
    16fa:	ba f0       	brmi	.+46     	; 0x172a <__addsf3x+0x9c>
    16fc:	91 50       	subi	r25, 0x01	; 1
    16fe:	a1 f0       	breq	.+40     	; 0x1728 <__addsf3x+0x9a>
    1700:	ff 0f       	add	r31, r31
    1702:	bb 1f       	adc	r27, r27
    1704:	66 1f       	adc	r22, r22
    1706:	77 1f       	adc	r23, r23
    1708:	88 1f       	adc	r24, r24
    170a:	c2 f7       	brpl	.-16     	; 0x16fc <__addsf3x+0x6e>
    170c:	0e c0       	rjmp	.+28     	; 0x172a <__addsf3x+0x9c>
    170e:	ba 0f       	add	r27, r26
    1710:	62 1f       	adc	r22, r18
    1712:	73 1f       	adc	r23, r19
    1714:	84 1f       	adc	r24, r20
    1716:	48 f4       	brcc	.+18     	; 0x172a <__addsf3x+0x9c>
    1718:	87 95       	ror	r24
    171a:	77 95       	ror	r23
    171c:	67 95       	ror	r22
    171e:	b7 95       	ror	r27
    1720:	f7 95       	ror	r31
    1722:	9e 3f       	cpi	r25, 0xFE	; 254
    1724:	08 f0       	brcs	.+2      	; 0x1728 <__addsf3x+0x9a>
    1726:	b0 cf       	rjmp	.-160    	; 0x1688 <__addsf3+0x28>
    1728:	93 95       	inc	r25
    172a:	88 0f       	add	r24, r24
    172c:	08 f0       	brcs	.+2      	; 0x1730 <__addsf3x+0xa2>
    172e:	99 27       	eor	r25, r25
    1730:	ee 0f       	add	r30, r30
    1732:	97 95       	ror	r25
    1734:	87 95       	ror	r24
    1736:	08 95       	ret

00001738 <__cmpsf2>:
    1738:	0e 94 42 0c 	call	0x1884	; 0x1884 <__fp_cmp>
    173c:	08 f4       	brcc	.+2      	; 0x1740 <__cmpsf2+0x8>
    173e:	81 e0       	ldi	r24, 0x01	; 1
    1740:	08 95       	ret

00001742 <__divsf3>:
    1742:	0e 94 b5 0b 	call	0x176a	; 0x176a <__divsf3x>
    1746:	0c 94 7d 0c 	jmp	0x18fa	; 0x18fa <__fp_round>
    174a:	0e 94 76 0c 	call	0x18ec	; 0x18ec <__fp_pscB>
    174e:	58 f0       	brcs	.+22     	; 0x1766 <__divsf3+0x24>
    1750:	0e 94 6f 0c 	call	0x18de	; 0x18de <__fp_pscA>
    1754:	40 f0       	brcs	.+16     	; 0x1766 <__divsf3+0x24>
    1756:	29 f4       	brne	.+10     	; 0x1762 <__divsf3+0x20>
    1758:	5f 3f       	cpi	r21, 0xFF	; 255
    175a:	29 f0       	breq	.+10     	; 0x1766 <__divsf3+0x24>
    175c:	0c 94 66 0c 	jmp	0x18cc	; 0x18cc <__fp_inf>
    1760:	51 11       	cpse	r21, r1
    1762:	0c 94 b1 0c 	jmp	0x1962	; 0x1962 <__fp_szero>
    1766:	0c 94 6c 0c 	jmp	0x18d8	; 0x18d8 <__fp_nan>

0000176a <__divsf3x>:
    176a:	0e 94 8e 0c 	call	0x191c	; 0x191c <__fp_split3>
    176e:	68 f3       	brcs	.-38     	; 0x174a <__divsf3+0x8>

00001770 <__divsf3_pse>:
    1770:	99 23       	and	r25, r25
    1772:	b1 f3       	breq	.-20     	; 0x1760 <__divsf3+0x1e>
    1774:	55 23       	and	r21, r21
    1776:	91 f3       	breq	.-28     	; 0x175c <__divsf3+0x1a>
    1778:	95 1b       	sub	r25, r21
    177a:	55 0b       	sbc	r21, r21
    177c:	bb 27       	eor	r27, r27
    177e:	aa 27       	eor	r26, r26
    1780:	62 17       	cp	r22, r18
    1782:	73 07       	cpc	r23, r19
    1784:	84 07       	cpc	r24, r20
    1786:	38 f0       	brcs	.+14     	; 0x1796 <__divsf3_pse+0x26>
    1788:	9f 5f       	subi	r25, 0xFF	; 255
    178a:	5f 4f       	sbci	r21, 0xFF	; 255
    178c:	22 0f       	add	r18, r18
    178e:	33 1f       	adc	r19, r19
    1790:	44 1f       	adc	r20, r20
    1792:	aa 1f       	adc	r26, r26
    1794:	a9 f3       	breq	.-22     	; 0x1780 <__divsf3_pse+0x10>
    1796:	35 d0       	rcall	.+106    	; 0x1802 <__divsf3_pse+0x92>
    1798:	0e 2e       	mov	r0, r30
    179a:	3a f0       	brmi	.+14     	; 0x17aa <__divsf3_pse+0x3a>
    179c:	e0 e8       	ldi	r30, 0x80	; 128
    179e:	32 d0       	rcall	.+100    	; 0x1804 <__divsf3_pse+0x94>
    17a0:	91 50       	subi	r25, 0x01	; 1
    17a2:	50 40       	sbci	r21, 0x00	; 0
    17a4:	e6 95       	lsr	r30
    17a6:	00 1c       	adc	r0, r0
    17a8:	ca f7       	brpl	.-14     	; 0x179c <__divsf3_pse+0x2c>
    17aa:	2b d0       	rcall	.+86     	; 0x1802 <__divsf3_pse+0x92>
    17ac:	fe 2f       	mov	r31, r30
    17ae:	29 d0       	rcall	.+82     	; 0x1802 <__divsf3_pse+0x92>
    17b0:	66 0f       	add	r22, r22
    17b2:	77 1f       	adc	r23, r23
    17b4:	88 1f       	adc	r24, r24
    17b6:	bb 1f       	adc	r27, r27
    17b8:	26 17       	cp	r18, r22
    17ba:	37 07       	cpc	r19, r23
    17bc:	48 07       	cpc	r20, r24
    17be:	ab 07       	cpc	r26, r27
    17c0:	b0 e8       	ldi	r27, 0x80	; 128
    17c2:	09 f0       	breq	.+2      	; 0x17c6 <__divsf3_pse+0x56>
    17c4:	bb 0b       	sbc	r27, r27
    17c6:	80 2d       	mov	r24, r0
    17c8:	bf 01       	movw	r22, r30
    17ca:	ff 27       	eor	r31, r31
    17cc:	93 58       	subi	r25, 0x83	; 131
    17ce:	5f 4f       	sbci	r21, 0xFF	; 255
    17d0:	3a f0       	brmi	.+14     	; 0x17e0 <__divsf3_pse+0x70>
    17d2:	9e 3f       	cpi	r25, 0xFE	; 254
    17d4:	51 05       	cpc	r21, r1
    17d6:	78 f0       	brcs	.+30     	; 0x17f6 <__divsf3_pse+0x86>
    17d8:	0c 94 66 0c 	jmp	0x18cc	; 0x18cc <__fp_inf>
    17dc:	0c 94 b1 0c 	jmp	0x1962	; 0x1962 <__fp_szero>
    17e0:	5f 3f       	cpi	r21, 0xFF	; 255
    17e2:	e4 f3       	brlt	.-8      	; 0x17dc <__divsf3_pse+0x6c>
    17e4:	98 3e       	cpi	r25, 0xE8	; 232
    17e6:	d4 f3       	brlt	.-12     	; 0x17dc <__divsf3_pse+0x6c>
    17e8:	86 95       	lsr	r24
    17ea:	77 95       	ror	r23
    17ec:	67 95       	ror	r22
    17ee:	b7 95       	ror	r27
    17f0:	f7 95       	ror	r31
    17f2:	9f 5f       	subi	r25, 0xFF	; 255
    17f4:	c9 f7       	brne	.-14     	; 0x17e8 <__divsf3_pse+0x78>
    17f6:	88 0f       	add	r24, r24
    17f8:	91 1d       	adc	r25, r1
    17fa:	96 95       	lsr	r25
    17fc:	87 95       	ror	r24
    17fe:	97 f9       	bld	r25, 7
    1800:	08 95       	ret
    1802:	e1 e0       	ldi	r30, 0x01	; 1
    1804:	66 0f       	add	r22, r22
    1806:	77 1f       	adc	r23, r23
    1808:	88 1f       	adc	r24, r24
    180a:	bb 1f       	adc	r27, r27
    180c:	62 17       	cp	r22, r18
    180e:	73 07       	cpc	r23, r19
    1810:	84 07       	cpc	r24, r20
    1812:	ba 07       	cpc	r27, r26
    1814:	20 f0       	brcs	.+8      	; 0x181e <__divsf3_pse+0xae>
    1816:	62 1b       	sub	r22, r18
    1818:	73 0b       	sbc	r23, r19
    181a:	84 0b       	sbc	r24, r20
    181c:	ba 0b       	sbc	r27, r26
    181e:	ee 1f       	adc	r30, r30
    1820:	88 f7       	brcc	.-30     	; 0x1804 <__divsf3_pse+0x94>
    1822:	e0 95       	com	r30
    1824:	08 95       	ret

00001826 <__fixunssfsi>:
    1826:	0e 94 96 0c 	call	0x192c	; 0x192c <__fp_splitA>
    182a:	88 f0       	brcs	.+34     	; 0x184e <__fixunssfsi+0x28>
    182c:	9f 57       	subi	r25, 0x7F	; 127
    182e:	98 f0       	brcs	.+38     	; 0x1856 <__fixunssfsi+0x30>
    1830:	b9 2f       	mov	r27, r25
    1832:	99 27       	eor	r25, r25
    1834:	b7 51       	subi	r27, 0x17	; 23
    1836:	b0 f0       	brcs	.+44     	; 0x1864 <__fixunssfsi+0x3e>
    1838:	e1 f0       	breq	.+56     	; 0x1872 <__fixunssfsi+0x4c>
    183a:	66 0f       	add	r22, r22
    183c:	77 1f       	adc	r23, r23
    183e:	88 1f       	adc	r24, r24
    1840:	99 1f       	adc	r25, r25
    1842:	1a f0       	brmi	.+6      	; 0x184a <__fixunssfsi+0x24>
    1844:	ba 95       	dec	r27
    1846:	c9 f7       	brne	.-14     	; 0x183a <__fixunssfsi+0x14>
    1848:	14 c0       	rjmp	.+40     	; 0x1872 <__fixunssfsi+0x4c>
    184a:	b1 30       	cpi	r27, 0x01	; 1
    184c:	91 f0       	breq	.+36     	; 0x1872 <__fixunssfsi+0x4c>
    184e:	0e 94 b0 0c 	call	0x1960	; 0x1960 <__fp_zero>
    1852:	b1 e0       	ldi	r27, 0x01	; 1
    1854:	08 95       	ret
    1856:	0c 94 b0 0c 	jmp	0x1960	; 0x1960 <__fp_zero>
    185a:	67 2f       	mov	r22, r23
    185c:	78 2f       	mov	r23, r24
    185e:	88 27       	eor	r24, r24
    1860:	b8 5f       	subi	r27, 0xF8	; 248
    1862:	39 f0       	breq	.+14     	; 0x1872 <__fixunssfsi+0x4c>
    1864:	b9 3f       	cpi	r27, 0xF9	; 249
    1866:	cc f3       	brlt	.-14     	; 0x185a <__fixunssfsi+0x34>
    1868:	86 95       	lsr	r24
    186a:	77 95       	ror	r23
    186c:	67 95       	ror	r22
    186e:	b3 95       	inc	r27
    1870:	d9 f7       	brne	.-10     	; 0x1868 <__fixunssfsi+0x42>
    1872:	3e f4       	brtc	.+14     	; 0x1882 <__fixunssfsi+0x5c>
    1874:	90 95       	com	r25
    1876:	80 95       	com	r24
    1878:	70 95       	com	r23
    187a:	61 95       	neg	r22
    187c:	7f 4f       	sbci	r23, 0xFF	; 255
    187e:	8f 4f       	sbci	r24, 0xFF	; 255
    1880:	9f 4f       	sbci	r25, 0xFF	; 255
    1882:	08 95       	ret

00001884 <__fp_cmp>:
    1884:	99 0f       	add	r25, r25
    1886:	00 08       	sbc	r0, r0
    1888:	55 0f       	add	r21, r21
    188a:	aa 0b       	sbc	r26, r26
    188c:	e0 e8       	ldi	r30, 0x80	; 128
    188e:	fe ef       	ldi	r31, 0xFE	; 254
    1890:	16 16       	cp	r1, r22
    1892:	17 06       	cpc	r1, r23
    1894:	e8 07       	cpc	r30, r24
    1896:	f9 07       	cpc	r31, r25
    1898:	c0 f0       	brcs	.+48     	; 0x18ca <__fp_cmp+0x46>
    189a:	12 16       	cp	r1, r18
    189c:	13 06       	cpc	r1, r19
    189e:	e4 07       	cpc	r30, r20
    18a0:	f5 07       	cpc	r31, r21
    18a2:	98 f0       	brcs	.+38     	; 0x18ca <__fp_cmp+0x46>
    18a4:	62 1b       	sub	r22, r18
    18a6:	73 0b       	sbc	r23, r19
    18a8:	84 0b       	sbc	r24, r20
    18aa:	95 0b       	sbc	r25, r21
    18ac:	39 f4       	brne	.+14     	; 0x18bc <__fp_cmp+0x38>
    18ae:	0a 26       	eor	r0, r26
    18b0:	61 f0       	breq	.+24     	; 0x18ca <__fp_cmp+0x46>
    18b2:	23 2b       	or	r18, r19
    18b4:	24 2b       	or	r18, r20
    18b6:	25 2b       	or	r18, r21
    18b8:	21 f4       	brne	.+8      	; 0x18c2 <__fp_cmp+0x3e>
    18ba:	08 95       	ret
    18bc:	0a 26       	eor	r0, r26
    18be:	09 f4       	brne	.+2      	; 0x18c2 <__fp_cmp+0x3e>
    18c0:	a1 40       	sbci	r26, 0x01	; 1
    18c2:	a6 95       	lsr	r26
    18c4:	8f ef       	ldi	r24, 0xFF	; 255
    18c6:	81 1d       	adc	r24, r1
    18c8:	81 1d       	adc	r24, r1
    18ca:	08 95       	ret

000018cc <__fp_inf>:
    18cc:	97 f9       	bld	r25, 7
    18ce:	9f 67       	ori	r25, 0x7F	; 127
    18d0:	80 e8       	ldi	r24, 0x80	; 128
    18d2:	70 e0       	ldi	r23, 0x00	; 0
    18d4:	60 e0       	ldi	r22, 0x00	; 0
    18d6:	08 95       	ret

000018d8 <__fp_nan>:
    18d8:	9f ef       	ldi	r25, 0xFF	; 255
    18da:	80 ec       	ldi	r24, 0xC0	; 192
    18dc:	08 95       	ret

000018de <__fp_pscA>:
    18de:	00 24       	eor	r0, r0
    18e0:	0a 94       	dec	r0
    18e2:	16 16       	cp	r1, r22
    18e4:	17 06       	cpc	r1, r23
    18e6:	18 06       	cpc	r1, r24
    18e8:	09 06       	cpc	r0, r25
    18ea:	08 95       	ret

000018ec <__fp_pscB>:
    18ec:	00 24       	eor	r0, r0
    18ee:	0a 94       	dec	r0
    18f0:	12 16       	cp	r1, r18
    18f2:	13 06       	cpc	r1, r19
    18f4:	14 06       	cpc	r1, r20
    18f6:	05 06       	cpc	r0, r21
    18f8:	08 95       	ret

000018fa <__fp_round>:
    18fa:	09 2e       	mov	r0, r25
    18fc:	03 94       	inc	r0
    18fe:	00 0c       	add	r0, r0
    1900:	11 f4       	brne	.+4      	; 0x1906 <__fp_round+0xc>
    1902:	88 23       	and	r24, r24
    1904:	52 f0       	brmi	.+20     	; 0x191a <__fp_round+0x20>
    1906:	bb 0f       	add	r27, r27
    1908:	40 f4       	brcc	.+16     	; 0x191a <__fp_round+0x20>
    190a:	bf 2b       	or	r27, r31
    190c:	11 f4       	brne	.+4      	; 0x1912 <__fp_round+0x18>
    190e:	60 ff       	sbrs	r22, 0
    1910:	04 c0       	rjmp	.+8      	; 0x191a <__fp_round+0x20>
    1912:	6f 5f       	subi	r22, 0xFF	; 255
    1914:	7f 4f       	sbci	r23, 0xFF	; 255
    1916:	8f 4f       	sbci	r24, 0xFF	; 255
    1918:	9f 4f       	sbci	r25, 0xFF	; 255
    191a:	08 95       	ret

0000191c <__fp_split3>:
    191c:	57 fd       	sbrc	r21, 7
    191e:	90 58       	subi	r25, 0x80	; 128
    1920:	44 0f       	add	r20, r20
    1922:	55 1f       	adc	r21, r21
    1924:	59 f0       	breq	.+22     	; 0x193c <__fp_splitA+0x10>
    1926:	5f 3f       	cpi	r21, 0xFF	; 255
    1928:	71 f0       	breq	.+28     	; 0x1946 <__fp_splitA+0x1a>
    192a:	47 95       	ror	r20

0000192c <__fp_splitA>:
    192c:	88 0f       	add	r24, r24
    192e:	97 fb       	bst	r25, 7
    1930:	99 1f       	adc	r25, r25
    1932:	61 f0       	breq	.+24     	; 0x194c <__fp_splitA+0x20>
    1934:	9f 3f       	cpi	r25, 0xFF	; 255
    1936:	79 f0       	breq	.+30     	; 0x1956 <__fp_splitA+0x2a>
    1938:	87 95       	ror	r24
    193a:	08 95       	ret
    193c:	12 16       	cp	r1, r18
    193e:	13 06       	cpc	r1, r19
    1940:	14 06       	cpc	r1, r20
    1942:	55 1f       	adc	r21, r21
    1944:	f2 cf       	rjmp	.-28     	; 0x192a <__fp_split3+0xe>
    1946:	46 95       	lsr	r20
    1948:	f1 df       	rcall	.-30     	; 0x192c <__fp_splitA>
    194a:	08 c0       	rjmp	.+16     	; 0x195c <__fp_splitA+0x30>
    194c:	16 16       	cp	r1, r22
    194e:	17 06       	cpc	r1, r23
    1950:	18 06       	cpc	r1, r24
    1952:	99 1f       	adc	r25, r25
    1954:	f1 cf       	rjmp	.-30     	; 0x1938 <__fp_splitA+0xc>
    1956:	86 95       	lsr	r24
    1958:	71 05       	cpc	r23, r1
    195a:	61 05       	cpc	r22, r1
    195c:	08 94       	sec
    195e:	08 95       	ret

00001960 <__fp_zero>:
    1960:	e8 94       	clt

00001962 <__fp_szero>:
    1962:	bb 27       	eor	r27, r27
    1964:	66 27       	eor	r22, r22
    1966:	77 27       	eor	r23, r23
    1968:	cb 01       	movw	r24, r22
    196a:	97 f9       	bld	r25, 7
    196c:	08 95       	ret

0000196e <__gesf2>:
    196e:	0e 94 42 0c 	call	0x1884	; 0x1884 <__fp_cmp>
    1972:	08 f4       	brcc	.+2      	; 0x1976 <__gesf2+0x8>
    1974:	8f ef       	ldi	r24, 0xFF	; 255
    1976:	08 95       	ret

00001978 <__mulsf3>:
    1978:	0e 94 cf 0c 	call	0x199e	; 0x199e <__mulsf3x>
    197c:	0c 94 7d 0c 	jmp	0x18fa	; 0x18fa <__fp_round>
    1980:	0e 94 6f 0c 	call	0x18de	; 0x18de <__fp_pscA>
    1984:	38 f0       	brcs	.+14     	; 0x1994 <__mulsf3+0x1c>
    1986:	0e 94 76 0c 	call	0x18ec	; 0x18ec <__fp_pscB>
    198a:	20 f0       	brcs	.+8      	; 0x1994 <__mulsf3+0x1c>
    198c:	95 23       	and	r25, r21
    198e:	11 f0       	breq	.+4      	; 0x1994 <__mulsf3+0x1c>
    1990:	0c 94 66 0c 	jmp	0x18cc	; 0x18cc <__fp_inf>
    1994:	0c 94 6c 0c 	jmp	0x18d8	; 0x18d8 <__fp_nan>
    1998:	11 24       	eor	r1, r1
    199a:	0c 94 b1 0c 	jmp	0x1962	; 0x1962 <__fp_szero>

0000199e <__mulsf3x>:
    199e:	0e 94 8e 0c 	call	0x191c	; 0x191c <__fp_split3>
    19a2:	70 f3       	brcs	.-36     	; 0x1980 <__mulsf3+0x8>

000019a4 <__mulsf3_pse>:
    19a4:	95 9f       	mul	r25, r21
    19a6:	c1 f3       	breq	.-16     	; 0x1998 <__mulsf3+0x20>
    19a8:	95 0f       	add	r25, r21
    19aa:	50 e0       	ldi	r21, 0x00	; 0
    19ac:	55 1f       	adc	r21, r21
    19ae:	62 9f       	mul	r22, r18
    19b0:	f0 01       	movw	r30, r0
    19b2:	72 9f       	mul	r23, r18
    19b4:	bb 27       	eor	r27, r27
    19b6:	f0 0d       	add	r31, r0
    19b8:	b1 1d       	adc	r27, r1
    19ba:	63 9f       	mul	r22, r19
    19bc:	aa 27       	eor	r26, r26
    19be:	f0 0d       	add	r31, r0
    19c0:	b1 1d       	adc	r27, r1
    19c2:	aa 1f       	adc	r26, r26
    19c4:	64 9f       	mul	r22, r20
    19c6:	66 27       	eor	r22, r22
    19c8:	b0 0d       	add	r27, r0
    19ca:	a1 1d       	adc	r26, r1
    19cc:	66 1f       	adc	r22, r22
    19ce:	82 9f       	mul	r24, r18
    19d0:	22 27       	eor	r18, r18
    19d2:	b0 0d       	add	r27, r0
    19d4:	a1 1d       	adc	r26, r1
    19d6:	62 1f       	adc	r22, r18
    19d8:	73 9f       	mul	r23, r19
    19da:	b0 0d       	add	r27, r0
    19dc:	a1 1d       	adc	r26, r1
    19de:	62 1f       	adc	r22, r18
    19e0:	83 9f       	mul	r24, r19
    19e2:	a0 0d       	add	r26, r0
    19e4:	61 1d       	adc	r22, r1
    19e6:	22 1f       	adc	r18, r18
    19e8:	74 9f       	mul	r23, r20
    19ea:	33 27       	eor	r19, r19
    19ec:	a0 0d       	add	r26, r0
    19ee:	61 1d       	adc	r22, r1
    19f0:	23 1f       	adc	r18, r19
    19f2:	84 9f       	mul	r24, r20
    19f4:	60 0d       	add	r22, r0
    19f6:	21 1d       	adc	r18, r1
    19f8:	82 2f       	mov	r24, r18
    19fa:	76 2f       	mov	r23, r22
    19fc:	6a 2f       	mov	r22, r26
    19fe:	11 24       	eor	r1, r1
    1a00:	9f 57       	subi	r25, 0x7F	; 127
    1a02:	50 40       	sbci	r21, 0x00	; 0
    1a04:	9a f0       	brmi	.+38     	; 0x1a2c <__mulsf3_pse+0x88>
    1a06:	f1 f0       	breq	.+60     	; 0x1a44 <__mulsf3_pse+0xa0>
    1a08:	88 23       	and	r24, r24
    1a0a:	4a f0       	brmi	.+18     	; 0x1a1e <__mulsf3_pse+0x7a>
    1a0c:	ee 0f       	add	r30, r30
    1a0e:	ff 1f       	adc	r31, r31
    1a10:	bb 1f       	adc	r27, r27
    1a12:	66 1f       	adc	r22, r22
    1a14:	77 1f       	adc	r23, r23
    1a16:	88 1f       	adc	r24, r24
    1a18:	91 50       	subi	r25, 0x01	; 1
    1a1a:	50 40       	sbci	r21, 0x00	; 0
    1a1c:	a9 f7       	brne	.-22     	; 0x1a08 <__mulsf3_pse+0x64>
    1a1e:	9e 3f       	cpi	r25, 0xFE	; 254
    1a20:	51 05       	cpc	r21, r1
    1a22:	80 f0       	brcs	.+32     	; 0x1a44 <__mulsf3_pse+0xa0>
    1a24:	0c 94 66 0c 	jmp	0x18cc	; 0x18cc <__fp_inf>
    1a28:	0c 94 b1 0c 	jmp	0x1962	; 0x1962 <__fp_szero>
    1a2c:	5f 3f       	cpi	r21, 0xFF	; 255
    1a2e:	e4 f3       	brlt	.-8      	; 0x1a28 <__mulsf3_pse+0x84>
    1a30:	98 3e       	cpi	r25, 0xE8	; 232
    1a32:	d4 f3       	brlt	.-12     	; 0x1a28 <__mulsf3_pse+0x84>
    1a34:	86 95       	lsr	r24
    1a36:	77 95       	ror	r23
    1a38:	67 95       	ror	r22
    1a3a:	b7 95       	ror	r27
    1a3c:	f7 95       	ror	r31
    1a3e:	e7 95       	ror	r30
    1a40:	9f 5f       	subi	r25, 0xFF	; 255
    1a42:	c1 f7       	brne	.-16     	; 0x1a34 <__mulsf3_pse+0x90>
    1a44:	fe 2b       	or	r31, r30
    1a46:	88 0f       	add	r24, r24
    1a48:	91 1d       	adc	r25, r1
    1a4a:	96 95       	lsr	r25
    1a4c:	87 95       	ror	r24
    1a4e:	97 f9       	bld	r25, 7
    1a50:	08 95       	ret

00001a52 <_exit>:
    1a52:	f8 94       	cli

00001a54 <__stop_program>:
    1a54:	ff cf       	rjmp	.-2      	; 0x1a54 <__stop_program>
