
Atmega32 drivers.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002026  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001c  00800060  00002026  0000209a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      0000005c  00000000  00000000  000020b6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002114  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000168  00000000  00000000  00002150  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001b26  00000000  00000000  000022b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000096f  00000000  00000000  00003dde  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001033  00000000  00000000  0000474d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000460  00000000  00000000  00005780  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000065b  00000000  00000000  00005be0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000008c4  00000000  00000000  0000623b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000118  00000000  00000000  00006aff  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 41 02 	jmp	0x482	; 0x482 <__vector_1>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e6 e2       	ldi	r30, 0x26	; 38
      68:	f0 e2       	ldi	r31, 0x20	; 32
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	ac 37       	cpi	r26, 0x7C	; 124
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	20 e0       	ldi	r18, 0x00	; 0
      78:	ac e7       	ldi	r26, 0x7C	; 124
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	ac 37       	cpi	r26, 0x7C	; 124
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 69 02 	call	0x4d2	; 0x4d2 <main>
      8a:	0c 94 11 10 	jmp	0x2022	; 0x2022 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <counterAPP>:
 */ 
#include "APPS.h"


void counterAPP(void)
{
      92:	cf 92       	push	r12
      94:	df 92       	push	r13
      96:	ef 92       	push	r14
      98:	ff 92       	push	r15
      9a:	cf 93       	push	r28
      9c:	df 93       	push	r29
      9e:	cd b7       	in	r28, 0x3d	; 61
      a0:	de b7       	in	r29, 0x3e	; 62
      a2:	ac 97       	sbiw	r28, 0x2c	; 44
      a4:	0f b6       	in	r0, 0x3f	; 63
      a6:	f8 94       	cli
      a8:	de bf       	out	0x3e, r29	; 62
      aa:	0f be       	out	0x3f, r0	; 63
      ac:	cd bf       	out	0x3d, r28	; 61
	INT_init(INT_0,falling_edge);
      ae:	62 e0       	ldi	r22, 0x02	; 2
      b0:	86 e0       	ldi	r24, 0x06	; 6
      b2:	0e 94 49 08 	call	0x1092	; 0x1092 <INT_init>
	GLOBAL_INT_EN();
      b6:	0e 94 a9 08 	call	0x1152	; 0x1152 <GLOBAL_INT_EN>
	pinDirection(PC2,OUTPUT);
      ba:	61 e0       	ldi	r22, 0x01	; 1
      bc:	82 e1       	ldi	r24, 0x12	; 18
      be:	0e 94 ad 09 	call	0x135a	; 0x135a <pinDirection>
	
	LCD_init();
      c2:	0e 94 74 02 	call	0x4e8	; 0x4e8 <LCD_init>
	
	/* Replace with your application code */
	pinDirection(PB0,INPUT);
      c6:	60 e0       	ldi	r22, 0x00	; 0
      c8:	88 e0       	ldi	r24, 0x08	; 8
      ca:	0e 94 ad 09 	call	0x135a	; 0x135a <pinDirection>
	
	u32 count=0,i=0;
      ce:	19 82       	std	Y+1, r1	; 0x01
      d0:	1a 82       	std	Y+2, r1	; 0x02
      d2:	1b 82       	std	Y+3, r1	; 0x03
      d4:	1c 82       	std	Y+4, r1	; 0x04
      d6:	1d 82       	std	Y+5, r1	; 0x05
      d8:	1e 82       	std	Y+6, r1	; 0x06
      da:	1f 82       	std	Y+7, r1	; 0x07
      dc:	18 86       	std	Y+8, r1	; 0x08
	u32 delay =1000,row=1;
      de:	88 ee       	ldi	r24, 0xE8	; 232
      e0:	93 e0       	ldi	r25, 0x03	; 3
      e2:	a0 e0       	ldi	r26, 0x00	; 0
      e4:	b0 e0       	ldi	r27, 0x00	; 0
      e6:	89 87       	std	Y+9, r24	; 0x09
      e8:	9a 87       	std	Y+10, r25	; 0x0a
      ea:	ab 87       	std	Y+11, r26	; 0x0b
      ec:	bc 87       	std	Y+12, r27	; 0x0c
      ee:	81 e0       	ldi	r24, 0x01	; 1
      f0:	90 e0       	ldi	r25, 0x00	; 0
      f2:	a0 e0       	ldi	r26, 0x00	; 0
      f4:	b0 e0       	ldi	r27, 0x00	; 0
      f6:	8d 87       	std	Y+13, r24	; 0x0d
      f8:	9e 87       	std	Y+14, r25	; 0x0e
      fa:	af 87       	std	Y+15, r26	; 0x0f
      fc:	b8 8b       	std	Y+16, r27	; 0x10
	disp_strXY(1,1,(u8 *)"counter = ");
      fe:	40 e6       	ldi	r20, 0x60	; 96
     100:	50 e0       	ldi	r21, 0x00	; 0
     102:	61 e0       	ldi	r22, 0x01	; 1
     104:	81 e0       	ldi	r24, 0x01	; 1
     106:	0e 94 ce 07 	call	0xf9c	; 0xf9c <disp_strXY>
	//disp_intXY(2,3,2021);
	while (1)
	{
		delay =1000;
     10a:	88 ee       	ldi	r24, 0xE8	; 232
     10c:	93 e0       	ldi	r25, 0x03	; 3
     10e:	a0 e0       	ldi	r26, 0x00	; 0
     110:	b0 e0       	ldi	r27, 0x00	; 0
     112:	89 87       	std	Y+9, r24	; 0x09
     114:	9a 87       	std	Y+10, r25	; 0x0a
     116:	ab 87       	std	Y+11, r26	; 0x0b
     118:	bc 87       	std	Y+12, r27	; 0x0c
		if (readPin(PB0))
     11a:	88 e0       	ldi	r24, 0x08	; 8
     11c:	0e 94 a4 0a 	call	0x1548	; 0x1548 <readPin>
     120:	88 23       	and	r24, r24
     122:	09 f4       	brne	.+2      	; 0x126 <counterAPP+0x94>
     124:	f3 c0       	rjmp	.+486    	; 0x30c <counterAPP+0x27a>
		{
			row++;
     126:	8d 85       	ldd	r24, Y+13	; 0x0d
     128:	9e 85       	ldd	r25, Y+14	; 0x0e
     12a:	af 85       	ldd	r26, Y+15	; 0x0f
     12c:	b8 89       	ldd	r27, Y+16	; 0x10
     12e:	01 96       	adiw	r24, 0x01	; 1
     130:	a1 1d       	adc	r26, r1
     132:	b1 1d       	adc	r27, r1
     134:	8d 87       	std	Y+13, r24	; 0x0d
     136:	9e 87       	std	Y+14, r25	; 0x0e
     138:	af 87       	std	Y+15, r26	; 0x0f
     13a:	b8 8b       	std	Y+16, r27	; 0x10
			delay=delay/(row*0.5);
     13c:	69 85       	ldd	r22, Y+9	; 0x09
     13e:	7a 85       	ldd	r23, Y+10	; 0x0a
     140:	8b 85       	ldd	r24, Y+11	; 0x0b
     142:	9c 85       	ldd	r25, Y+12	; 0x0c
     144:	0e 94 15 0c 	call	0x182a	; 0x182a <__floatunsisf>
     148:	6b 01       	movw	r12, r22
     14a:	7c 01       	movw	r14, r24
     14c:	6d 85       	ldd	r22, Y+13	; 0x0d
     14e:	7e 85       	ldd	r23, Y+14	; 0x0e
     150:	8f 85       	ldd	r24, Y+15	; 0x0f
     152:	98 89       	ldd	r25, Y+16	; 0x10
     154:	0e 94 15 0c 	call	0x182a	; 0x182a <__floatunsisf>
     158:	dc 01       	movw	r26, r24
     15a:	cb 01       	movw	r24, r22
     15c:	20 e0       	ldi	r18, 0x00	; 0
     15e:	30 e0       	ldi	r19, 0x00	; 0
     160:	40 e0       	ldi	r20, 0x00	; 0
     162:	5f e3       	ldi	r21, 0x3F	; 63
     164:	bc 01       	movw	r22, r24
     166:	cd 01       	movw	r24, r26
     168:	0e 94 cc 0c 	call	0x1998	; 0x1998 <__mulsf3>
     16c:	dc 01       	movw	r26, r24
     16e:	cb 01       	movw	r24, r22
     170:	9c 01       	movw	r18, r24
     172:	ad 01       	movw	r20, r26
     174:	c7 01       	movw	r24, r14
     176:	b6 01       	movw	r22, r12
     178:	0e 94 74 0b 	call	0x16e8	; 0x16e8 <__divsf3>
     17c:	dc 01       	movw	r26, r24
     17e:	cb 01       	movw	r24, r22
     180:	bc 01       	movw	r22, r24
     182:	cd 01       	movw	r24, r26
     184:	0e 94 e6 0b 	call	0x17cc	; 0x17cc <__fixunssfsi>
     188:	dc 01       	movw	r26, r24
     18a:	cb 01       	movw	r24, r22
     18c:	89 87       	std	Y+9, r24	; 0x09
     18e:	9a 87       	std	Y+10, r25	; 0x0a
     190:	ab 87       	std	Y+11, r26	; 0x0b
     192:	bc 87       	std	Y+12, r27	; 0x0c
			if (delay<100)
     194:	89 85       	ldd	r24, Y+9	; 0x09
     196:	9a 85       	ldd	r25, Y+10	; 0x0a
     198:	ab 85       	ldd	r26, Y+11	; 0x0b
     19a:	bc 85       	ldd	r27, Y+12	; 0x0c
     19c:	84 36       	cpi	r24, 0x64	; 100
     19e:	91 05       	cpc	r25, r1
     1a0:	a1 05       	cpc	r26, r1
     1a2:	b1 05       	cpc	r27, r1
     1a4:	40 f4       	brcc	.+16     	; 0x1b6 <counterAPP+0x124>
			{
				delay=100;
     1a6:	84 e6       	ldi	r24, 0x64	; 100
     1a8:	90 e0       	ldi	r25, 0x00	; 0
     1aa:	a0 e0       	ldi	r26, 0x00	; 0
     1ac:	b0 e0       	ldi	r27, 0x00	; 0
     1ae:	89 87       	std	Y+9, r24	; 0x09
     1b0:	9a 87       	std	Y+10, r25	; 0x0a
     1b2:	ab 87       	std	Y+11, r26	; 0x0b
     1b4:	bc 87       	std	Y+12, r27	; 0x0c
			}
			disp_strXY(1,11,(u8 *)"    ");
     1b6:	4b e6       	ldi	r20, 0x6B	; 107
     1b8:	50 e0       	ldi	r21, 0x00	; 0
     1ba:	6b e0       	ldi	r22, 0x0B	; 11
     1bc:	81 e0       	ldi	r24, 0x01	; 1
     1be:	0e 94 ce 07 	call	0xf9c	; 0xf9c <disp_strXY>
			disp_intXY(1,11,count++);
     1c2:	89 81       	ldd	r24, Y+1	; 0x01
     1c4:	9a 81       	ldd	r25, Y+2	; 0x02
     1c6:	ab 81       	ldd	r26, Y+3	; 0x03
     1c8:	bc 81       	ldd	r27, Y+4	; 0x04
     1ca:	9c 01       	movw	r18, r24
     1cc:	ad 01       	movw	r20, r26
     1ce:	2f 5f       	subi	r18, 0xFF	; 255
     1d0:	3f 4f       	sbci	r19, 0xFF	; 255
     1d2:	4f 4f       	sbci	r20, 0xFF	; 255
     1d4:	5f 4f       	sbci	r21, 0xFF	; 255
     1d6:	29 83       	std	Y+1, r18	; 0x01
     1d8:	3a 83       	std	Y+2, r19	; 0x02
     1da:	4b 83       	std	Y+3, r20	; 0x03
     1dc:	5c 83       	std	Y+4, r21	; 0x04
     1de:	9c 01       	movw	r18, r24
     1e0:	ad 01       	movw	r20, r26
     1e2:	6b e0       	ldi	r22, 0x0B	; 11
     1e4:	81 e0       	ldi	r24, 0x01	; 1
     1e6:	0e 94 27 08 	call	0x104e	; 0x104e <disp_intXY>
			for (i=0;i<=delay;i++)
     1ea:	1d 82       	std	Y+5, r1	; 0x05
     1ec:	1e 82       	std	Y+6, r1	; 0x06
     1ee:	1f 82       	std	Y+7, r1	; 0x07
     1f0:	18 86       	std	Y+8, r1	; 0x08
     1f2:	7d c0       	rjmp	.+250    	; 0x2ee <counterAPP+0x25c>
     1f4:	80 e0       	ldi	r24, 0x00	; 0
     1f6:	90 e0       	ldi	r25, 0x00	; 0
     1f8:	a0 e8       	ldi	r26, 0x80	; 128
     1fa:	bf e3       	ldi	r27, 0x3F	; 63
     1fc:	89 8b       	std	Y+17, r24	; 0x11
     1fe:	9a 8b       	std	Y+18, r25	; 0x12
     200:	ab 8b       	std	Y+19, r26	; 0x13
     202:	bc 8b       	std	Y+20, r27	; 0x14

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     204:	20 e0       	ldi	r18, 0x00	; 0
     206:	30 e0       	ldi	r19, 0x00	; 0
     208:	4a e7       	ldi	r20, 0x7A	; 122
     20a:	55 e4       	ldi	r21, 0x45	; 69
     20c:	69 89       	ldd	r22, Y+17	; 0x11
     20e:	7a 89       	ldd	r23, Y+18	; 0x12
     210:	8b 89       	ldd	r24, Y+19	; 0x13
     212:	9c 89       	ldd	r25, Y+20	; 0x14
     214:	0e 94 cc 0c 	call	0x1998	; 0x1998 <__mulsf3>
     218:	dc 01       	movw	r26, r24
     21a:	cb 01       	movw	r24, r22
     21c:	8d 8b       	std	Y+21, r24	; 0x15
     21e:	9e 8b       	std	Y+22, r25	; 0x16
     220:	af 8b       	std	Y+23, r26	; 0x17
     222:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     224:	20 e0       	ldi	r18, 0x00	; 0
     226:	30 e0       	ldi	r19, 0x00	; 0
     228:	40 e8       	ldi	r20, 0x80	; 128
     22a:	5f e3       	ldi	r21, 0x3F	; 63
     22c:	6d 89       	ldd	r22, Y+21	; 0x15
     22e:	7e 89       	ldd	r23, Y+22	; 0x16
     230:	8f 89       	ldd	r24, Y+23	; 0x17
     232:	98 8d       	ldd	r25, Y+24	; 0x18
     234:	0e 94 6f 0b 	call	0x16de	; 0x16de <__cmpsf2>
     238:	88 23       	and	r24, r24
     23a:	2c f4       	brge	.+10     	; 0x246 <counterAPP+0x1b4>
		__ticks = 1;
     23c:	81 e0       	ldi	r24, 0x01	; 1
     23e:	90 e0       	ldi	r25, 0x00	; 0
     240:	9a 8f       	std	Y+26, r25	; 0x1a
     242:	89 8f       	std	Y+25, r24	; 0x19
     244:	3f c0       	rjmp	.+126    	; 0x2c4 <counterAPP+0x232>
	else if (__tmp > 65535)
     246:	20 e0       	ldi	r18, 0x00	; 0
     248:	3f ef       	ldi	r19, 0xFF	; 255
     24a:	4f e7       	ldi	r20, 0x7F	; 127
     24c:	57 e4       	ldi	r21, 0x47	; 71
     24e:	6d 89       	ldd	r22, Y+21	; 0x15
     250:	7e 89       	ldd	r23, Y+22	; 0x16
     252:	8f 89       	ldd	r24, Y+23	; 0x17
     254:	98 8d       	ldd	r25, Y+24	; 0x18
     256:	0e 94 c7 0c 	call	0x198e	; 0x198e <__gesf2>
     25a:	18 16       	cp	r1, r24
     25c:	4c f5       	brge	.+82     	; 0x2b0 <counterAPP+0x21e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     25e:	20 e0       	ldi	r18, 0x00	; 0
     260:	30 e0       	ldi	r19, 0x00	; 0
     262:	40 e2       	ldi	r20, 0x20	; 32
     264:	51 e4       	ldi	r21, 0x41	; 65
     266:	69 89       	ldd	r22, Y+17	; 0x11
     268:	7a 89       	ldd	r23, Y+18	; 0x12
     26a:	8b 89       	ldd	r24, Y+19	; 0x13
     26c:	9c 89       	ldd	r25, Y+20	; 0x14
     26e:	0e 94 cc 0c 	call	0x1998	; 0x1998 <__mulsf3>
     272:	dc 01       	movw	r26, r24
     274:	cb 01       	movw	r24, r22
     276:	bc 01       	movw	r22, r24
     278:	cd 01       	movw	r24, r26
     27a:	0e 94 e6 0b 	call	0x17cc	; 0x17cc <__fixunssfsi>
     27e:	dc 01       	movw	r26, r24
     280:	cb 01       	movw	r24, r22
     282:	9a 8f       	std	Y+26, r25	; 0x1a
     284:	89 8f       	std	Y+25, r24	; 0x19
     286:	0f c0       	rjmp	.+30     	; 0x2a6 <counterAPP+0x214>
     288:	80 e9       	ldi	r24, 0x90	; 144
     28a:	91 e0       	ldi	r25, 0x01	; 1
     28c:	9c 8f       	std	Y+28, r25	; 0x1c
     28e:	8b 8f       	std	Y+27, r24	; 0x1b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     290:	8b 8d       	ldd	r24, Y+27	; 0x1b
     292:	9c 8d       	ldd	r25, Y+28	; 0x1c
     294:	01 97       	sbiw	r24, 0x01	; 1
     296:	f1 f7       	brne	.-4      	; 0x294 <counterAPP+0x202>
     298:	9c 8f       	std	Y+28, r25	; 0x1c
     29a:	8b 8f       	std	Y+27, r24	; 0x1b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     29c:	89 8d       	ldd	r24, Y+25	; 0x19
     29e:	9a 8d       	ldd	r25, Y+26	; 0x1a
     2a0:	01 97       	sbiw	r24, 0x01	; 1
     2a2:	9a 8f       	std	Y+26, r25	; 0x1a
     2a4:	89 8f       	std	Y+25, r24	; 0x19
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     2a6:	89 8d       	ldd	r24, Y+25	; 0x19
     2a8:	9a 8d       	ldd	r25, Y+26	; 0x1a
     2aa:	89 2b       	or	r24, r25
     2ac:	69 f7       	brne	.-38     	; 0x288 <counterAPP+0x1f6>
     2ae:	14 c0       	rjmp	.+40     	; 0x2d8 <counterAPP+0x246>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     2b0:	6d 89       	ldd	r22, Y+21	; 0x15
     2b2:	7e 89       	ldd	r23, Y+22	; 0x16
     2b4:	8f 89       	ldd	r24, Y+23	; 0x17
     2b6:	98 8d       	ldd	r25, Y+24	; 0x18
     2b8:	0e 94 e6 0b 	call	0x17cc	; 0x17cc <__fixunssfsi>
     2bc:	dc 01       	movw	r26, r24
     2be:	cb 01       	movw	r24, r22
     2c0:	9a 8f       	std	Y+26, r25	; 0x1a
     2c2:	89 8f       	std	Y+25, r24	; 0x19
     2c4:	89 8d       	ldd	r24, Y+25	; 0x19
     2c6:	9a 8d       	ldd	r25, Y+26	; 0x1a
     2c8:	9e 8f       	std	Y+30, r25	; 0x1e
     2ca:	8d 8f       	std	Y+29, r24	; 0x1d
     2cc:	8d 8d       	ldd	r24, Y+29	; 0x1d
     2ce:	9e 8d       	ldd	r25, Y+30	; 0x1e
     2d0:	01 97       	sbiw	r24, 0x01	; 1
     2d2:	f1 f7       	brne	.-4      	; 0x2d0 <counterAPP+0x23e>
     2d4:	9e 8f       	std	Y+30, r25	; 0x1e
     2d6:	8d 8f       	std	Y+29, r24	; 0x1d
     2d8:	8d 81       	ldd	r24, Y+5	; 0x05
     2da:	9e 81       	ldd	r25, Y+6	; 0x06
     2dc:	af 81       	ldd	r26, Y+7	; 0x07
     2de:	b8 85       	ldd	r27, Y+8	; 0x08
     2e0:	01 96       	adiw	r24, 0x01	; 1
     2e2:	a1 1d       	adc	r26, r1
     2e4:	b1 1d       	adc	r27, r1
     2e6:	8d 83       	std	Y+5, r24	; 0x05
     2e8:	9e 83       	std	Y+6, r25	; 0x06
     2ea:	af 83       	std	Y+7, r26	; 0x07
     2ec:	b8 87       	std	Y+8, r27	; 0x08
     2ee:	2d 81       	ldd	r18, Y+5	; 0x05
     2f0:	3e 81       	ldd	r19, Y+6	; 0x06
     2f2:	4f 81       	ldd	r20, Y+7	; 0x07
     2f4:	58 85       	ldd	r21, Y+8	; 0x08
     2f6:	89 85       	ldd	r24, Y+9	; 0x09
     2f8:	9a 85       	ldd	r25, Y+10	; 0x0a
     2fa:	ab 85       	ldd	r26, Y+11	; 0x0b
     2fc:	bc 85       	ldd	r27, Y+12	; 0x0c
     2fe:	82 17       	cp	r24, r18
     300:	93 07       	cpc	r25, r19
     302:	a4 07       	cpc	r26, r20
     304:	b5 07       	cpc	r27, r21
     306:	08 f0       	brcs	.+2      	; 0x30a <counterAPP+0x278>
     308:	75 cf       	rjmp	.-278    	; 0x1f4 <counterAPP+0x162>
     30a:	ba c0       	rjmp	.+372    	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
			}
			
		}
		else
		{
			row=1;
     30c:	81 e0       	ldi	r24, 0x01	; 1
     30e:	90 e0       	ldi	r25, 0x00	; 0
     310:	a0 e0       	ldi	r26, 0x00	; 0
     312:	b0 e0       	ldi	r27, 0x00	; 0
     314:	8d 87       	std	Y+13, r24	; 0x0d
     316:	9e 87       	std	Y+14, r25	; 0x0e
     318:	af 87       	std	Y+15, r26	; 0x0f
     31a:	b8 8b       	std	Y+16, r27	; 0x10
			delay =1000;
     31c:	88 ee       	ldi	r24, 0xE8	; 232
     31e:	93 e0       	ldi	r25, 0x03	; 3
     320:	a0 e0       	ldi	r26, 0x00	; 0
     322:	b0 e0       	ldi	r27, 0x00	; 0
     324:	89 87       	std	Y+9, r24	; 0x09
     326:	9a 87       	std	Y+10, r25	; 0x0a
     328:	ab 87       	std	Y+11, r26	; 0x0b
     32a:	bc 87       	std	Y+12, r27	; 0x0c
			disp_strXY(1,11,(u8 *)"    ");
     32c:	4b e6       	ldi	r20, 0x6B	; 107
     32e:	50 e0       	ldi	r21, 0x00	; 0
     330:	6b e0       	ldi	r22, 0x0B	; 11
     332:	81 e0       	ldi	r24, 0x01	; 1
     334:	0e 94 ce 07 	call	0xf9c	; 0xf9c <disp_strXY>
			disp_intXY(1,11,count++);
     338:	89 81       	ldd	r24, Y+1	; 0x01
     33a:	9a 81       	ldd	r25, Y+2	; 0x02
     33c:	ab 81       	ldd	r26, Y+3	; 0x03
     33e:	bc 81       	ldd	r27, Y+4	; 0x04
     340:	9c 01       	movw	r18, r24
     342:	ad 01       	movw	r20, r26
     344:	2f 5f       	subi	r18, 0xFF	; 255
     346:	3f 4f       	sbci	r19, 0xFF	; 255
     348:	4f 4f       	sbci	r20, 0xFF	; 255
     34a:	5f 4f       	sbci	r21, 0xFF	; 255
     34c:	29 83       	std	Y+1, r18	; 0x01
     34e:	3a 83       	std	Y+2, r19	; 0x02
     350:	4b 83       	std	Y+3, r20	; 0x03
     352:	5c 83       	std	Y+4, r21	; 0x04
     354:	9c 01       	movw	r18, r24
     356:	ad 01       	movw	r20, r26
     358:	6b e0       	ldi	r22, 0x0B	; 11
     35a:	81 e0       	ldi	r24, 0x01	; 1
     35c:	0e 94 27 08 	call	0x104e	; 0x104e <disp_intXY>
			for (i=0;i<=delay;i++)
     360:	1d 82       	std	Y+5, r1	; 0x05
     362:	1e 82       	std	Y+6, r1	; 0x06
     364:	1f 82       	std	Y+7, r1	; 0x07
     366:	18 86       	std	Y+8, r1	; 0x08
     368:	7d c0       	rjmp	.+250    	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
     36a:	80 e0       	ldi	r24, 0x00	; 0
     36c:	90 e0       	ldi	r25, 0x00	; 0
     36e:	a0 e8       	ldi	r26, 0x80	; 128
     370:	bf e3       	ldi	r27, 0x3F	; 63
     372:	8f 8f       	std	Y+31, r24	; 0x1f
     374:	98 a3       	std	Y+32, r25	; 0x20
     376:	a9 a3       	std	Y+33, r26	; 0x21
     378:	ba a3       	std	Y+34, r27	; 0x22

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     37a:	20 e0       	ldi	r18, 0x00	; 0
     37c:	30 e0       	ldi	r19, 0x00	; 0
     37e:	4a e7       	ldi	r20, 0x7A	; 122
     380:	55 e4       	ldi	r21, 0x45	; 69
     382:	6f 8d       	ldd	r22, Y+31	; 0x1f
     384:	78 a1       	ldd	r23, Y+32	; 0x20
     386:	89 a1       	ldd	r24, Y+33	; 0x21
     388:	9a a1       	ldd	r25, Y+34	; 0x22
     38a:	0e 94 cc 0c 	call	0x1998	; 0x1998 <__mulsf3>
     38e:	dc 01       	movw	r26, r24
     390:	cb 01       	movw	r24, r22
     392:	8b a3       	std	Y+35, r24	; 0x23
     394:	9c a3       	std	Y+36, r25	; 0x24
     396:	ad a3       	std	Y+37, r26	; 0x25
     398:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     39a:	20 e0       	ldi	r18, 0x00	; 0
     39c:	30 e0       	ldi	r19, 0x00	; 0
     39e:	40 e8       	ldi	r20, 0x80	; 128
     3a0:	5f e3       	ldi	r21, 0x3F	; 63
     3a2:	6b a1       	ldd	r22, Y+35	; 0x23
     3a4:	7c a1       	ldd	r23, Y+36	; 0x24
     3a6:	8d a1       	ldd	r24, Y+37	; 0x25
     3a8:	9e a1       	ldd	r25, Y+38	; 0x26
     3aa:	0e 94 6f 0b 	call	0x16de	; 0x16de <__cmpsf2>
     3ae:	88 23       	and	r24, r24
     3b0:	2c f4       	brge	.+10     	; 0x3bc <counterAPP+0x32a>
		__ticks = 1;
     3b2:	81 e0       	ldi	r24, 0x01	; 1
     3b4:	90 e0       	ldi	r25, 0x00	; 0
     3b6:	98 a7       	std	Y+40, r25	; 0x28
     3b8:	8f a3       	std	Y+39, r24	; 0x27
     3ba:	3f c0       	rjmp	.+126    	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
	else if (__tmp > 65535)
     3bc:	20 e0       	ldi	r18, 0x00	; 0
     3be:	3f ef       	ldi	r19, 0xFF	; 255
     3c0:	4f e7       	ldi	r20, 0x7F	; 127
     3c2:	57 e4       	ldi	r21, 0x47	; 71
     3c4:	6b a1       	ldd	r22, Y+35	; 0x23
     3c6:	7c a1       	ldd	r23, Y+36	; 0x24
     3c8:	8d a1       	ldd	r24, Y+37	; 0x25
     3ca:	9e a1       	ldd	r25, Y+38	; 0x26
     3cc:	0e 94 c7 0c 	call	0x198e	; 0x198e <__gesf2>
     3d0:	18 16       	cp	r1, r24
     3d2:	4c f5       	brge	.+82     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     3d4:	20 e0       	ldi	r18, 0x00	; 0
     3d6:	30 e0       	ldi	r19, 0x00	; 0
     3d8:	40 e2       	ldi	r20, 0x20	; 32
     3da:	51 e4       	ldi	r21, 0x41	; 65
     3dc:	6f 8d       	ldd	r22, Y+31	; 0x1f
     3de:	78 a1       	ldd	r23, Y+32	; 0x20
     3e0:	89 a1       	ldd	r24, Y+33	; 0x21
     3e2:	9a a1       	ldd	r25, Y+34	; 0x22
     3e4:	0e 94 cc 0c 	call	0x1998	; 0x1998 <__mulsf3>
     3e8:	dc 01       	movw	r26, r24
     3ea:	cb 01       	movw	r24, r22
     3ec:	bc 01       	movw	r22, r24
     3ee:	cd 01       	movw	r24, r26
     3f0:	0e 94 e6 0b 	call	0x17cc	; 0x17cc <__fixunssfsi>
     3f4:	dc 01       	movw	r26, r24
     3f6:	cb 01       	movw	r24, r22
     3f8:	98 a7       	std	Y+40, r25	; 0x28
     3fa:	8f a3       	std	Y+39, r24	; 0x27
     3fc:	0f c0       	rjmp	.+30     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
     3fe:	80 e9       	ldi	r24, 0x90	; 144
     400:	91 e0       	ldi	r25, 0x01	; 1
     402:	9a a7       	std	Y+42, r25	; 0x2a
     404:	89 a7       	std	Y+41, r24	; 0x29
     406:	89 a5       	ldd	r24, Y+41	; 0x29
     408:	9a a5       	ldd	r25, Y+42	; 0x2a
     40a:	01 97       	sbiw	r24, 0x01	; 1
     40c:	f1 f7       	brne	.-4      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
     40e:	9a a7       	std	Y+42, r25	; 0x2a
     410:	89 a7       	std	Y+41, r24	; 0x29
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     412:	8f a1       	ldd	r24, Y+39	; 0x27
     414:	98 a5       	ldd	r25, Y+40	; 0x28
     416:	01 97       	sbiw	r24, 0x01	; 1
     418:	98 a7       	std	Y+40, r25	; 0x28
     41a:	8f a3       	std	Y+39, r24	; 0x27
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     41c:	8f a1       	ldd	r24, Y+39	; 0x27
     41e:	98 a5       	ldd	r25, Y+40	; 0x28
     420:	89 2b       	or	r24, r25
     422:	69 f7       	brne	.-38     	; 0x3fe <counterAPP+0x36c>
     424:	14 c0       	rjmp	.+40     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     426:	6b a1       	ldd	r22, Y+35	; 0x23
     428:	7c a1       	ldd	r23, Y+36	; 0x24
     42a:	8d a1       	ldd	r24, Y+37	; 0x25
     42c:	9e a1       	ldd	r25, Y+38	; 0x26
     42e:	0e 94 e6 0b 	call	0x17cc	; 0x17cc <__fixunssfsi>
     432:	dc 01       	movw	r26, r24
     434:	cb 01       	movw	r24, r22
     436:	98 a7       	std	Y+40, r25	; 0x28
     438:	8f a3       	std	Y+39, r24	; 0x27
     43a:	8f a1       	ldd	r24, Y+39	; 0x27
     43c:	98 a5       	ldd	r25, Y+40	; 0x28
     43e:	9c a7       	std	Y+44, r25	; 0x2c
     440:	8b a7       	std	Y+43, r24	; 0x2b
     442:	8b a5       	ldd	r24, Y+43	; 0x2b
     444:	9c a5       	ldd	r25, Y+44	; 0x2c
     446:	01 97       	sbiw	r24, 0x01	; 1
     448:	f1 f7       	brne	.-4      	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
     44a:	9c a7       	std	Y+44, r25	; 0x2c
     44c:	8b a7       	std	Y+43, r24	; 0x2b
     44e:	8d 81       	ldd	r24, Y+5	; 0x05
     450:	9e 81       	ldd	r25, Y+6	; 0x06
     452:	af 81       	ldd	r26, Y+7	; 0x07
     454:	b8 85       	ldd	r27, Y+8	; 0x08
     456:	01 96       	adiw	r24, 0x01	; 1
     458:	a1 1d       	adc	r26, r1
     45a:	b1 1d       	adc	r27, r1
     45c:	8d 83       	std	Y+5, r24	; 0x05
     45e:	9e 83       	std	Y+6, r25	; 0x06
     460:	af 83       	std	Y+7, r26	; 0x07
     462:	b8 87       	std	Y+8, r27	; 0x08
     464:	2d 81       	ldd	r18, Y+5	; 0x05
     466:	3e 81       	ldd	r19, Y+6	; 0x06
     468:	4f 81       	ldd	r20, Y+7	; 0x07
     46a:	58 85       	ldd	r21, Y+8	; 0x08
     46c:	89 85       	ldd	r24, Y+9	; 0x09
     46e:	9a 85       	ldd	r25, Y+10	; 0x0a
     470:	ab 85       	ldd	r26, Y+11	; 0x0b
     472:	bc 85       	ldd	r27, Y+12	; 0x0c
     474:	82 17       	cp	r24, r18
     476:	93 07       	cpc	r25, r19
     478:	a4 07       	cpc	r26, r20
     47a:	b5 07       	cpc	r27, r21
     47c:	08 f0       	brcs	.+2      	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
     47e:	75 cf       	rjmp	.-278    	; 0x36a <counterAPP+0x2d8>
				_delay_ms(1);
			}
			
		}
	
	}
     480:	44 ce       	rjmp	.-888    	; 0x10a <counterAPP+0x78>

00000482 <__vector_1>:
#ifndef INCLUDES_H_
#error define includes.h file
#endif

ISR(INT0_vect)
{
     482:	1f 92       	push	r1
     484:	0f 92       	push	r0
     486:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     48a:	0f 92       	push	r0
     48c:	11 24       	eor	r1, r1
     48e:	2f 93       	push	r18
     490:	3f 93       	push	r19
     492:	8f 93       	push	r24
     494:	9f 93       	push	r25
     496:	ef 93       	push	r30
     498:	ff 93       	push	r31
     49a:	cf 93       	push	r28
     49c:	df 93       	push	r29
     49e:	cd b7       	in	r28, 0x3d	; 61
     4a0:	de b7       	in	r29, 0x3e	; 62
	TGLBit(PORTC,2);
     4a2:	85 e3       	ldi	r24, 0x35	; 53
     4a4:	90 e0       	ldi	r25, 0x00	; 0
     4a6:	25 e3       	ldi	r18, 0x35	; 53
     4a8:	30 e0       	ldi	r19, 0x00	; 0
     4aa:	f9 01       	movw	r30, r18
     4ac:	30 81       	ld	r19, Z
     4ae:	24 e0       	ldi	r18, 0x04	; 4
     4b0:	23 27       	eor	r18, r19
     4b2:	fc 01       	movw	r30, r24
     4b4:	20 83       	st	Z, r18
}
     4b6:	df 91       	pop	r29
     4b8:	cf 91       	pop	r28
     4ba:	ff 91       	pop	r31
     4bc:	ef 91       	pop	r30
     4be:	9f 91       	pop	r25
     4c0:	8f 91       	pop	r24
     4c2:	3f 91       	pop	r19
     4c4:	2f 91       	pop	r18
     4c6:	0f 90       	pop	r0
     4c8:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     4cc:	0f 90       	pop	r0
     4ce:	1f 90       	pop	r1
     4d0:	18 95       	reti

000004d2 <main>:



int main(void)
{
     4d2:	cf 93       	push	r28
     4d4:	df 93       	push	r29
     4d6:	cd b7       	in	r28, 0x3d	; 61
     4d8:	de b7       	in	r29, 0x3e	; 62
	 //CLockAPP();
	 //KeyPadAPP();
	 //ADCAPP();
	 counterAPP();
     4da:	0e 94 49 00 	call	0x92	; 0x92 <counterAPP>
     4de:	80 e0       	ldi	r24, 0x00	; 0
     4e0:	90 e0       	ldi	r25, 0x00	; 0
	 
	
}
     4e2:	df 91       	pop	r29
     4e4:	cf 91       	pop	r28
     4e6:	08 95       	ret

000004e8 <LCD_init>:

void disp_charXY(u8 row,u8 col,u8 letter)
{
	LCD_GOTXY(row,col);
	disp_char(letter);	
}
     4e8:	cf 93       	push	r28
     4ea:	df 93       	push	r29
     4ec:	cd b7       	in	r28, 0x3d	; 61
     4ee:	de b7       	in	r29, 0x3e	; 62
     4f0:	2e 97       	sbiw	r28, 0x0e	; 14
     4f2:	0f b6       	in	r0, 0x3f	; 63
     4f4:	f8 94       	cli
     4f6:	de bf       	out	0x3e, r29	; 62
     4f8:	0f be       	out	0x3f, r0	; 63
     4fa:	cd bf       	out	0x3d, r28	; 61
     4fc:	41 e0       	ldi	r20, 0x01	; 1
     4fe:	60 ef       	ldi	r22, 0xF0	; 240
     500:	8a e3       	ldi	r24, 0x3A	; 58
     502:	90 e0       	ldi	r25, 0x00	; 0
     504:	0e 94 3f 0b 	call	0x167e	; 0x167e <pinsDirection>
     508:	41 e0       	ldi	r20, 0x01	; 1
     50a:	6e e0       	ldi	r22, 0x0E	; 14
     50c:	87 e3       	ldi	r24, 0x37	; 55
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	0e 94 3f 0b 	call	0x167e	; 0x167e <pinsDirection>
     514:	60 e0       	ldi	r22, 0x00	; 0
     516:	8a e0       	ldi	r24, 0x0A	; 10
     518:	0e 94 b6 08 	call	0x116c	; 0x116c <writePin>
     51c:	80 e0       	ldi	r24, 0x00	; 0
     51e:	90 e0       	ldi	r25, 0x00	; 0
     520:	a0 e2       	ldi	r26, 0x20	; 32
     522:	b2 e4       	ldi	r27, 0x42	; 66
     524:	89 83       	std	Y+1, r24	; 0x01
     526:	9a 83       	std	Y+2, r25	; 0x02
     528:	ab 83       	std	Y+3, r26	; 0x03
     52a:	bc 83       	std	Y+4, r27	; 0x04
     52c:	20 e0       	ldi	r18, 0x00	; 0
     52e:	30 e0       	ldi	r19, 0x00	; 0
     530:	4a e7       	ldi	r20, 0x7A	; 122
     532:	55 e4       	ldi	r21, 0x45	; 69
     534:	69 81       	ldd	r22, Y+1	; 0x01
     536:	7a 81       	ldd	r23, Y+2	; 0x02
     538:	8b 81       	ldd	r24, Y+3	; 0x03
     53a:	9c 81       	ldd	r25, Y+4	; 0x04
     53c:	0e 94 cc 0c 	call	0x1998	; 0x1998 <__mulsf3>
     540:	dc 01       	movw	r26, r24
     542:	cb 01       	movw	r24, r22
     544:	8d 83       	std	Y+5, r24	; 0x05
     546:	9e 83       	std	Y+6, r25	; 0x06
     548:	af 83       	std	Y+7, r26	; 0x07
     54a:	b8 87       	std	Y+8, r27	; 0x08
     54c:	20 e0       	ldi	r18, 0x00	; 0
     54e:	30 e0       	ldi	r19, 0x00	; 0
     550:	40 e8       	ldi	r20, 0x80	; 128
     552:	5f e3       	ldi	r21, 0x3F	; 63
     554:	6d 81       	ldd	r22, Y+5	; 0x05
     556:	7e 81       	ldd	r23, Y+6	; 0x06
     558:	8f 81       	ldd	r24, Y+7	; 0x07
     55a:	98 85       	ldd	r25, Y+8	; 0x08
     55c:	0e 94 6f 0b 	call	0x16de	; 0x16de <__cmpsf2>
     560:	88 23       	and	r24, r24
     562:	2c f4       	brge	.+10     	; 0x56e <LCD_init+0x86>
     564:	81 e0       	ldi	r24, 0x01	; 1
     566:	90 e0       	ldi	r25, 0x00	; 0
     568:	9a 87       	std	Y+10, r25	; 0x0a
     56a:	89 87       	std	Y+9, r24	; 0x09
     56c:	3f c0       	rjmp	.+126    	; 0x5ec <LCD_init+0x104>
     56e:	20 e0       	ldi	r18, 0x00	; 0
     570:	3f ef       	ldi	r19, 0xFF	; 255
     572:	4f e7       	ldi	r20, 0x7F	; 127
     574:	57 e4       	ldi	r21, 0x47	; 71
     576:	6d 81       	ldd	r22, Y+5	; 0x05
     578:	7e 81       	ldd	r23, Y+6	; 0x06
     57a:	8f 81       	ldd	r24, Y+7	; 0x07
     57c:	98 85       	ldd	r25, Y+8	; 0x08
     57e:	0e 94 c7 0c 	call	0x198e	; 0x198e <__gesf2>
     582:	18 16       	cp	r1, r24
     584:	4c f5       	brge	.+82     	; 0x5d8 <LCD_init+0xf0>
     586:	20 e0       	ldi	r18, 0x00	; 0
     588:	30 e0       	ldi	r19, 0x00	; 0
     58a:	40 e2       	ldi	r20, 0x20	; 32
     58c:	51 e4       	ldi	r21, 0x41	; 65
     58e:	69 81       	ldd	r22, Y+1	; 0x01
     590:	7a 81       	ldd	r23, Y+2	; 0x02
     592:	8b 81       	ldd	r24, Y+3	; 0x03
     594:	9c 81       	ldd	r25, Y+4	; 0x04
     596:	0e 94 cc 0c 	call	0x1998	; 0x1998 <__mulsf3>
     59a:	dc 01       	movw	r26, r24
     59c:	cb 01       	movw	r24, r22
     59e:	bc 01       	movw	r22, r24
     5a0:	cd 01       	movw	r24, r26
     5a2:	0e 94 e6 0b 	call	0x17cc	; 0x17cc <__fixunssfsi>
     5a6:	dc 01       	movw	r26, r24
     5a8:	cb 01       	movw	r24, r22
     5aa:	9a 87       	std	Y+10, r25	; 0x0a
     5ac:	89 87       	std	Y+9, r24	; 0x09
     5ae:	0f c0       	rjmp	.+30     	; 0x5ce <LCD_init+0xe6>
     5b0:	80 e9       	ldi	r24, 0x90	; 144
     5b2:	91 e0       	ldi	r25, 0x01	; 1
     5b4:	9c 87       	std	Y+12, r25	; 0x0c
     5b6:	8b 87       	std	Y+11, r24	; 0x0b
     5b8:	8b 85       	ldd	r24, Y+11	; 0x0b
     5ba:	9c 85       	ldd	r25, Y+12	; 0x0c
     5bc:	01 97       	sbiw	r24, 0x01	; 1
     5be:	f1 f7       	brne	.-4      	; 0x5bc <LCD_init+0xd4>
     5c0:	9c 87       	std	Y+12, r25	; 0x0c
     5c2:	8b 87       	std	Y+11, r24	; 0x0b
     5c4:	89 85       	ldd	r24, Y+9	; 0x09
     5c6:	9a 85       	ldd	r25, Y+10	; 0x0a
     5c8:	01 97       	sbiw	r24, 0x01	; 1
     5ca:	9a 87       	std	Y+10, r25	; 0x0a
     5cc:	89 87       	std	Y+9, r24	; 0x09
     5ce:	89 85       	ldd	r24, Y+9	; 0x09
     5d0:	9a 85       	ldd	r25, Y+10	; 0x0a
     5d2:	89 2b       	or	r24, r25
     5d4:	69 f7       	brne	.-38     	; 0x5b0 <LCD_init+0xc8>
     5d6:	14 c0       	rjmp	.+40     	; 0x600 <LCD_init+0x118>
     5d8:	6d 81       	ldd	r22, Y+5	; 0x05
     5da:	7e 81       	ldd	r23, Y+6	; 0x06
     5dc:	8f 81       	ldd	r24, Y+7	; 0x07
     5de:	98 85       	ldd	r25, Y+8	; 0x08
     5e0:	0e 94 e6 0b 	call	0x17cc	; 0x17cc <__fixunssfsi>
     5e4:	dc 01       	movw	r26, r24
     5e6:	cb 01       	movw	r24, r22
     5e8:	9a 87       	std	Y+10, r25	; 0x0a
     5ea:	89 87       	std	Y+9, r24	; 0x09
     5ec:	89 85       	ldd	r24, Y+9	; 0x09
     5ee:	9a 85       	ldd	r25, Y+10	; 0x0a
     5f0:	9e 87       	std	Y+14, r25	; 0x0e
     5f2:	8d 87       	std	Y+13, r24	; 0x0d
     5f4:	8d 85       	ldd	r24, Y+13	; 0x0d
     5f6:	9e 85       	ldd	r25, Y+14	; 0x0e
     5f8:	01 97       	sbiw	r24, 0x01	; 1
     5fa:	f1 f7       	brne	.-4      	; 0x5f8 <LCD_init+0x110>
     5fc:	9e 87       	std	Y+14, r25	; 0x0e
     5fe:	8d 87       	std	Y+13, r24	; 0x0d
     600:	0e 94 a1 03 	call	0x742	; 0x742 <LCD_ret_Home>
     604:	86 e0       	ldi	r24, 0x06	; 6
     606:	0e 94 53 05 	call	0xaa6	; 0xaa6 <LCD_send_cmd>
     60a:	8f e0       	ldi	r24, 0x0F	; 15
     60c:	0e 94 53 05 	call	0xaa6	; 0xaa6 <LCD_send_cmd>
     610:	80 e1       	ldi	r24, 0x10	; 16
     612:	0e 94 53 05 	call	0xaa6	; 0xaa6 <LCD_send_cmd>
     616:	88 e2       	ldi	r24, 0x28	; 40
     618:	0e 94 53 05 	call	0xaa6	; 0xaa6 <LCD_send_cmd>
     61c:	0e 94 19 03 	call	0x632	; 0x632 <LCD_CLEAR>
     620:	2e 96       	adiw	r28, 0x0e	; 14
     622:	0f b6       	in	r0, 0x3f	; 63
     624:	f8 94       	cli
     626:	de bf       	out	0x3e, r29	; 62
     628:	0f be       	out	0x3f, r0	; 63
     62a:	cd bf       	out	0x3d, r28	; 61
     62c:	df 91       	pop	r29
     62e:	cf 91       	pop	r28
     630:	08 95       	ret

00000632 <LCD_CLEAR>:
     632:	cf 93       	push	r28
     634:	df 93       	push	r29
     636:	cd b7       	in	r28, 0x3d	; 61
     638:	de b7       	in	r29, 0x3e	; 62
     63a:	2e 97       	sbiw	r28, 0x0e	; 14
     63c:	0f b6       	in	r0, 0x3f	; 63
     63e:	f8 94       	cli
     640:	de bf       	out	0x3e, r29	; 62
     642:	0f be       	out	0x3f, r0	; 63
     644:	cd bf       	out	0x3d, r28	; 61
     646:	81 e0       	ldi	r24, 0x01	; 1
     648:	0e 94 53 05 	call	0xaa6	; 0xaa6 <LCD_send_cmd>
     64c:	80 e0       	ldi	r24, 0x00	; 0
     64e:	90 e0       	ldi	r25, 0x00	; 0
     650:	a0 e0       	ldi	r26, 0x00	; 0
     652:	b0 e4       	ldi	r27, 0x40	; 64
     654:	89 83       	std	Y+1, r24	; 0x01
     656:	9a 83       	std	Y+2, r25	; 0x02
     658:	ab 83       	std	Y+3, r26	; 0x03
     65a:	bc 83       	std	Y+4, r27	; 0x04
     65c:	20 e0       	ldi	r18, 0x00	; 0
     65e:	30 e0       	ldi	r19, 0x00	; 0
     660:	4a e7       	ldi	r20, 0x7A	; 122
     662:	55 e4       	ldi	r21, 0x45	; 69
     664:	69 81       	ldd	r22, Y+1	; 0x01
     666:	7a 81       	ldd	r23, Y+2	; 0x02
     668:	8b 81       	ldd	r24, Y+3	; 0x03
     66a:	9c 81       	ldd	r25, Y+4	; 0x04
     66c:	0e 94 cc 0c 	call	0x1998	; 0x1998 <__mulsf3>
     670:	dc 01       	movw	r26, r24
     672:	cb 01       	movw	r24, r22
     674:	8d 83       	std	Y+5, r24	; 0x05
     676:	9e 83       	std	Y+6, r25	; 0x06
     678:	af 83       	std	Y+7, r26	; 0x07
     67a:	b8 87       	std	Y+8, r27	; 0x08
     67c:	20 e0       	ldi	r18, 0x00	; 0
     67e:	30 e0       	ldi	r19, 0x00	; 0
     680:	40 e8       	ldi	r20, 0x80	; 128
     682:	5f e3       	ldi	r21, 0x3F	; 63
     684:	6d 81       	ldd	r22, Y+5	; 0x05
     686:	7e 81       	ldd	r23, Y+6	; 0x06
     688:	8f 81       	ldd	r24, Y+7	; 0x07
     68a:	98 85       	ldd	r25, Y+8	; 0x08
     68c:	0e 94 6f 0b 	call	0x16de	; 0x16de <__cmpsf2>
     690:	88 23       	and	r24, r24
     692:	2c f4       	brge	.+10     	; 0x69e <LCD_CLEAR+0x6c>
     694:	81 e0       	ldi	r24, 0x01	; 1
     696:	90 e0       	ldi	r25, 0x00	; 0
     698:	9a 87       	std	Y+10, r25	; 0x0a
     69a:	89 87       	std	Y+9, r24	; 0x09
     69c:	3f c0       	rjmp	.+126    	; 0x71c <LCD_CLEAR+0xea>
     69e:	20 e0       	ldi	r18, 0x00	; 0
     6a0:	3f ef       	ldi	r19, 0xFF	; 255
     6a2:	4f e7       	ldi	r20, 0x7F	; 127
     6a4:	57 e4       	ldi	r21, 0x47	; 71
     6a6:	6d 81       	ldd	r22, Y+5	; 0x05
     6a8:	7e 81       	ldd	r23, Y+6	; 0x06
     6aa:	8f 81       	ldd	r24, Y+7	; 0x07
     6ac:	98 85       	ldd	r25, Y+8	; 0x08
     6ae:	0e 94 c7 0c 	call	0x198e	; 0x198e <__gesf2>
     6b2:	18 16       	cp	r1, r24
     6b4:	4c f5       	brge	.+82     	; 0x708 <LCD_CLEAR+0xd6>
     6b6:	20 e0       	ldi	r18, 0x00	; 0
     6b8:	30 e0       	ldi	r19, 0x00	; 0
     6ba:	40 e2       	ldi	r20, 0x20	; 32
     6bc:	51 e4       	ldi	r21, 0x41	; 65
     6be:	69 81       	ldd	r22, Y+1	; 0x01
     6c0:	7a 81       	ldd	r23, Y+2	; 0x02
     6c2:	8b 81       	ldd	r24, Y+3	; 0x03
     6c4:	9c 81       	ldd	r25, Y+4	; 0x04
     6c6:	0e 94 cc 0c 	call	0x1998	; 0x1998 <__mulsf3>
     6ca:	dc 01       	movw	r26, r24
     6cc:	cb 01       	movw	r24, r22
     6ce:	bc 01       	movw	r22, r24
     6d0:	cd 01       	movw	r24, r26
     6d2:	0e 94 e6 0b 	call	0x17cc	; 0x17cc <__fixunssfsi>
     6d6:	dc 01       	movw	r26, r24
     6d8:	cb 01       	movw	r24, r22
     6da:	9a 87       	std	Y+10, r25	; 0x0a
     6dc:	89 87       	std	Y+9, r24	; 0x09
     6de:	0f c0       	rjmp	.+30     	; 0x6fe <LCD_CLEAR+0xcc>
     6e0:	80 e9       	ldi	r24, 0x90	; 144
     6e2:	91 e0       	ldi	r25, 0x01	; 1
     6e4:	9c 87       	std	Y+12, r25	; 0x0c
     6e6:	8b 87       	std	Y+11, r24	; 0x0b
     6e8:	8b 85       	ldd	r24, Y+11	; 0x0b
     6ea:	9c 85       	ldd	r25, Y+12	; 0x0c
     6ec:	01 97       	sbiw	r24, 0x01	; 1
     6ee:	f1 f7       	brne	.-4      	; 0x6ec <LCD_CLEAR+0xba>
     6f0:	9c 87       	std	Y+12, r25	; 0x0c
     6f2:	8b 87       	std	Y+11, r24	; 0x0b
     6f4:	89 85       	ldd	r24, Y+9	; 0x09
     6f6:	9a 85       	ldd	r25, Y+10	; 0x0a
     6f8:	01 97       	sbiw	r24, 0x01	; 1
     6fa:	9a 87       	std	Y+10, r25	; 0x0a
     6fc:	89 87       	std	Y+9, r24	; 0x09
     6fe:	89 85       	ldd	r24, Y+9	; 0x09
     700:	9a 85       	ldd	r25, Y+10	; 0x0a
     702:	89 2b       	or	r24, r25
     704:	69 f7       	brne	.-38     	; 0x6e0 <LCD_CLEAR+0xae>
     706:	14 c0       	rjmp	.+40     	; 0x730 <LCD_CLEAR+0xfe>
     708:	6d 81       	ldd	r22, Y+5	; 0x05
     70a:	7e 81       	ldd	r23, Y+6	; 0x06
     70c:	8f 81       	ldd	r24, Y+7	; 0x07
     70e:	98 85       	ldd	r25, Y+8	; 0x08
     710:	0e 94 e6 0b 	call	0x17cc	; 0x17cc <__fixunssfsi>
     714:	dc 01       	movw	r26, r24
     716:	cb 01       	movw	r24, r22
     718:	9a 87       	std	Y+10, r25	; 0x0a
     71a:	89 87       	std	Y+9, r24	; 0x09
     71c:	89 85       	ldd	r24, Y+9	; 0x09
     71e:	9a 85       	ldd	r25, Y+10	; 0x0a
     720:	9e 87       	std	Y+14, r25	; 0x0e
     722:	8d 87       	std	Y+13, r24	; 0x0d
     724:	8d 85       	ldd	r24, Y+13	; 0x0d
     726:	9e 85       	ldd	r25, Y+14	; 0x0e
     728:	01 97       	sbiw	r24, 0x01	; 1
     72a:	f1 f7       	brne	.-4      	; 0x728 <LCD_CLEAR+0xf6>
     72c:	9e 87       	std	Y+14, r25	; 0x0e
     72e:	8d 87       	std	Y+13, r24	; 0x0d
     730:	2e 96       	adiw	r28, 0x0e	; 14
     732:	0f b6       	in	r0, 0x3f	; 63
     734:	f8 94       	cli
     736:	de bf       	out	0x3e, r29	; 62
     738:	0f be       	out	0x3f, r0	; 63
     73a:	cd bf       	out	0x3d, r28	; 61
     73c:	df 91       	pop	r29
     73e:	cf 91       	pop	r28
     740:	08 95       	ret

00000742 <LCD_ret_Home>:
     742:	cf 93       	push	r28
     744:	df 93       	push	r29
     746:	cd b7       	in	r28, 0x3d	; 61
     748:	de b7       	in	r29, 0x3e	; 62
     74a:	2e 97       	sbiw	r28, 0x0e	; 14
     74c:	0f b6       	in	r0, 0x3f	; 63
     74e:	f8 94       	cli
     750:	de bf       	out	0x3e, r29	; 62
     752:	0f be       	out	0x3f, r0	; 63
     754:	cd bf       	out	0x3d, r28	; 61
     756:	82 e0       	ldi	r24, 0x02	; 2
     758:	0e 94 53 05 	call	0xaa6	; 0xaa6 <LCD_send_cmd>
     75c:	80 e0       	ldi	r24, 0x00	; 0
     75e:	90 e0       	ldi	r25, 0x00	; 0
     760:	a0 e0       	ldi	r26, 0x00	; 0
     762:	b0 e4       	ldi	r27, 0x40	; 64
     764:	89 83       	std	Y+1, r24	; 0x01
     766:	9a 83       	std	Y+2, r25	; 0x02
     768:	ab 83       	std	Y+3, r26	; 0x03
     76a:	bc 83       	std	Y+4, r27	; 0x04
     76c:	20 e0       	ldi	r18, 0x00	; 0
     76e:	30 e0       	ldi	r19, 0x00	; 0
     770:	4a e7       	ldi	r20, 0x7A	; 122
     772:	55 e4       	ldi	r21, 0x45	; 69
     774:	69 81       	ldd	r22, Y+1	; 0x01
     776:	7a 81       	ldd	r23, Y+2	; 0x02
     778:	8b 81       	ldd	r24, Y+3	; 0x03
     77a:	9c 81       	ldd	r25, Y+4	; 0x04
     77c:	0e 94 cc 0c 	call	0x1998	; 0x1998 <__mulsf3>
     780:	dc 01       	movw	r26, r24
     782:	cb 01       	movw	r24, r22
     784:	8d 83       	std	Y+5, r24	; 0x05
     786:	9e 83       	std	Y+6, r25	; 0x06
     788:	af 83       	std	Y+7, r26	; 0x07
     78a:	b8 87       	std	Y+8, r27	; 0x08
     78c:	20 e0       	ldi	r18, 0x00	; 0
     78e:	30 e0       	ldi	r19, 0x00	; 0
     790:	40 e8       	ldi	r20, 0x80	; 128
     792:	5f e3       	ldi	r21, 0x3F	; 63
     794:	6d 81       	ldd	r22, Y+5	; 0x05
     796:	7e 81       	ldd	r23, Y+6	; 0x06
     798:	8f 81       	ldd	r24, Y+7	; 0x07
     79a:	98 85       	ldd	r25, Y+8	; 0x08
     79c:	0e 94 6f 0b 	call	0x16de	; 0x16de <__cmpsf2>
     7a0:	88 23       	and	r24, r24
     7a2:	2c f4       	brge	.+10     	; 0x7ae <LCD_ret_Home+0x6c>
     7a4:	81 e0       	ldi	r24, 0x01	; 1
     7a6:	90 e0       	ldi	r25, 0x00	; 0
     7a8:	9a 87       	std	Y+10, r25	; 0x0a
     7aa:	89 87       	std	Y+9, r24	; 0x09
     7ac:	3f c0       	rjmp	.+126    	; 0x82c <LCD_ret_Home+0xea>
     7ae:	20 e0       	ldi	r18, 0x00	; 0
     7b0:	3f ef       	ldi	r19, 0xFF	; 255
     7b2:	4f e7       	ldi	r20, 0x7F	; 127
     7b4:	57 e4       	ldi	r21, 0x47	; 71
     7b6:	6d 81       	ldd	r22, Y+5	; 0x05
     7b8:	7e 81       	ldd	r23, Y+6	; 0x06
     7ba:	8f 81       	ldd	r24, Y+7	; 0x07
     7bc:	98 85       	ldd	r25, Y+8	; 0x08
     7be:	0e 94 c7 0c 	call	0x198e	; 0x198e <__gesf2>
     7c2:	18 16       	cp	r1, r24
     7c4:	4c f5       	brge	.+82     	; 0x818 <LCD_ret_Home+0xd6>
     7c6:	20 e0       	ldi	r18, 0x00	; 0
     7c8:	30 e0       	ldi	r19, 0x00	; 0
     7ca:	40 e2       	ldi	r20, 0x20	; 32
     7cc:	51 e4       	ldi	r21, 0x41	; 65
     7ce:	69 81       	ldd	r22, Y+1	; 0x01
     7d0:	7a 81       	ldd	r23, Y+2	; 0x02
     7d2:	8b 81       	ldd	r24, Y+3	; 0x03
     7d4:	9c 81       	ldd	r25, Y+4	; 0x04
     7d6:	0e 94 cc 0c 	call	0x1998	; 0x1998 <__mulsf3>
     7da:	dc 01       	movw	r26, r24
     7dc:	cb 01       	movw	r24, r22
     7de:	bc 01       	movw	r22, r24
     7e0:	cd 01       	movw	r24, r26
     7e2:	0e 94 e6 0b 	call	0x17cc	; 0x17cc <__fixunssfsi>
     7e6:	dc 01       	movw	r26, r24
     7e8:	cb 01       	movw	r24, r22
     7ea:	9a 87       	std	Y+10, r25	; 0x0a
     7ec:	89 87       	std	Y+9, r24	; 0x09
     7ee:	0f c0       	rjmp	.+30     	; 0x80e <LCD_ret_Home+0xcc>
     7f0:	80 e9       	ldi	r24, 0x90	; 144
     7f2:	91 e0       	ldi	r25, 0x01	; 1
     7f4:	9c 87       	std	Y+12, r25	; 0x0c
     7f6:	8b 87       	std	Y+11, r24	; 0x0b
     7f8:	8b 85       	ldd	r24, Y+11	; 0x0b
     7fa:	9c 85       	ldd	r25, Y+12	; 0x0c
     7fc:	01 97       	sbiw	r24, 0x01	; 1
     7fe:	f1 f7       	brne	.-4      	; 0x7fc <LCD_ret_Home+0xba>
     800:	9c 87       	std	Y+12, r25	; 0x0c
     802:	8b 87       	std	Y+11, r24	; 0x0b
     804:	89 85       	ldd	r24, Y+9	; 0x09
     806:	9a 85       	ldd	r25, Y+10	; 0x0a
     808:	01 97       	sbiw	r24, 0x01	; 1
     80a:	9a 87       	std	Y+10, r25	; 0x0a
     80c:	89 87       	std	Y+9, r24	; 0x09
     80e:	89 85       	ldd	r24, Y+9	; 0x09
     810:	9a 85       	ldd	r25, Y+10	; 0x0a
     812:	89 2b       	or	r24, r25
     814:	69 f7       	brne	.-38     	; 0x7f0 <LCD_ret_Home+0xae>
     816:	14 c0       	rjmp	.+40     	; 0x840 <LCD_ret_Home+0xfe>
     818:	6d 81       	ldd	r22, Y+5	; 0x05
     81a:	7e 81       	ldd	r23, Y+6	; 0x06
     81c:	8f 81       	ldd	r24, Y+7	; 0x07
     81e:	98 85       	ldd	r25, Y+8	; 0x08
     820:	0e 94 e6 0b 	call	0x17cc	; 0x17cc <__fixunssfsi>
     824:	dc 01       	movw	r26, r24
     826:	cb 01       	movw	r24, r22
     828:	9a 87       	std	Y+10, r25	; 0x0a
     82a:	89 87       	std	Y+9, r24	; 0x09
     82c:	89 85       	ldd	r24, Y+9	; 0x09
     82e:	9a 85       	ldd	r25, Y+10	; 0x0a
     830:	9e 87       	std	Y+14, r25	; 0x0e
     832:	8d 87       	std	Y+13, r24	; 0x0d
     834:	8d 85       	ldd	r24, Y+13	; 0x0d
     836:	9e 85       	ldd	r25, Y+14	; 0x0e
     838:	01 97       	sbiw	r24, 0x01	; 1
     83a:	f1 f7       	brne	.-4      	; 0x838 <LCD_ret_Home+0xf6>
     83c:	9e 87       	std	Y+14, r25	; 0x0e
     83e:	8d 87       	std	Y+13, r24	; 0x0d
     840:	2e 96       	adiw	r28, 0x0e	; 14
     842:	0f b6       	in	r0, 0x3f	; 63
     844:	f8 94       	cli
     846:	de bf       	out	0x3e, r29	; 62
     848:	0f be       	out	0x3f, r0	; 63
     84a:	cd bf       	out	0x3d, r28	; 61
     84c:	df 91       	pop	r29
     84e:	cf 91       	pop	r28
     850:	08 95       	ret

00000852 <SendToLCD>:
     852:	cf 93       	push	r28
     854:	df 93       	push	r29
     856:	cd b7       	in	r28, 0x3d	; 61
     858:	de b7       	in	r29, 0x3e	; 62
     85a:	a1 97       	sbiw	r28, 0x21	; 33
     85c:	0f b6       	in	r0, 0x3f	; 63
     85e:	f8 94       	cli
     860:	de bf       	out	0x3e, r29	; 62
     862:	0f be       	out	0x3f, r0	; 63
     864:	cd bf       	out	0x3d, r28	; 61
     866:	89 a3       	std	Y+33, r24	; 0x21
     868:	40 e0       	ldi	r20, 0x00	; 0
     86a:	60 ef       	ldi	r22, 0xF0	; 240
     86c:	8b e3       	ldi	r24, 0x3B	; 59
     86e:	90 e0       	ldi	r25, 0x00	; 0
     870:	0e 94 0f 0b 	call	0x161e	; 0x161e <writePins>
     874:	89 a1       	ldd	r24, Y+33	; 0x21
     876:	80 7f       	andi	r24, 0xF0	; 240
     878:	41 e0       	ldi	r20, 0x01	; 1
     87a:	68 2f       	mov	r22, r24
     87c:	8b e3       	ldi	r24, 0x3B	; 59
     87e:	90 e0       	ldi	r25, 0x00	; 0
     880:	0e 94 0f 0b 	call	0x161e	; 0x161e <writePins>
     884:	0e 94 75 05 	call	0xaea	; 0xaea <LCD_latch>
     888:	40 e0       	ldi	r20, 0x00	; 0
     88a:	60 ef       	ldi	r22, 0xF0	; 240
     88c:	8b e3       	ldi	r24, 0x3B	; 59
     88e:	90 e0       	ldi	r25, 0x00	; 0
     890:	0e 94 0f 0b 	call	0x161e	; 0x161e <writePins>
     894:	89 a1       	ldd	r24, Y+33	; 0x21
     896:	88 2f       	mov	r24, r24
     898:	90 e0       	ldi	r25, 0x00	; 0
     89a:	82 95       	swap	r24
     89c:	92 95       	swap	r25
     89e:	90 7f       	andi	r25, 0xF0	; 240
     8a0:	98 27       	eor	r25, r24
     8a2:	80 7f       	andi	r24, 0xF0	; 240
     8a4:	98 27       	eor	r25, r24
     8a6:	41 e0       	ldi	r20, 0x01	; 1
     8a8:	68 2f       	mov	r22, r24
     8aa:	8b e3       	ldi	r24, 0x3B	; 59
     8ac:	90 e0       	ldi	r25, 0x00	; 0
     8ae:	0e 94 0f 0b 	call	0x161e	; 0x161e <writePins>
     8b2:	0e 94 75 05 	call	0xaea	; 0xaea <LCD_latch>
     8b6:	80 e0       	ldi	r24, 0x00	; 0
     8b8:	90 e0       	ldi	r25, 0x00	; 0
     8ba:	a0 e2       	ldi	r26, 0x20	; 32
     8bc:	b2 e4       	ldi	r27, 0x42	; 66
     8be:	89 83       	std	Y+1, r24	; 0x01
     8c0:	9a 83       	std	Y+2, r25	; 0x02
     8c2:	ab 83       	std	Y+3, r26	; 0x03
     8c4:	bc 83       	std	Y+4, r27	; 0x04
     8c6:	2b ea       	ldi	r18, 0xAB	; 171
     8c8:	3a ea       	ldi	r19, 0xAA	; 170
     8ca:	4a ea       	ldi	r20, 0xAA	; 170
     8cc:	50 e4       	ldi	r21, 0x40	; 64
     8ce:	69 81       	ldd	r22, Y+1	; 0x01
     8d0:	7a 81       	ldd	r23, Y+2	; 0x02
     8d2:	8b 81       	ldd	r24, Y+3	; 0x03
     8d4:	9c 81       	ldd	r25, Y+4	; 0x04
     8d6:	0e 94 cc 0c 	call	0x1998	; 0x1998 <__mulsf3>
     8da:	dc 01       	movw	r26, r24
     8dc:	cb 01       	movw	r24, r22
     8de:	8d 83       	std	Y+5, r24	; 0x05
     8e0:	9e 83       	std	Y+6, r25	; 0x06
     8e2:	af 83       	std	Y+7, r26	; 0x07
     8e4:	b8 87       	std	Y+8, r27	; 0x08
     8e6:	20 e0       	ldi	r18, 0x00	; 0
     8e8:	30 e0       	ldi	r19, 0x00	; 0
     8ea:	40 e8       	ldi	r20, 0x80	; 128
     8ec:	50 e4       	ldi	r21, 0x40	; 64
     8ee:	69 81       	ldd	r22, Y+1	; 0x01
     8f0:	7a 81       	ldd	r23, Y+2	; 0x02
     8f2:	8b 81       	ldd	r24, Y+3	; 0x03
     8f4:	9c 81       	ldd	r25, Y+4	; 0x04
     8f6:	0e 94 cc 0c 	call	0x1998	; 0x1998 <__mulsf3>
     8fa:	dc 01       	movw	r26, r24
     8fc:	cb 01       	movw	r24, r22
     8fe:	89 87       	std	Y+9, r24	; 0x09
     900:	9a 87       	std	Y+10, r25	; 0x0a
     902:	ab 87       	std	Y+11, r26	; 0x0b
     904:	bc 87       	std	Y+12, r27	; 0x0c
     906:	20 e0       	ldi	r18, 0x00	; 0
     908:	30 e0       	ldi	r19, 0x00	; 0
     90a:	40 e8       	ldi	r20, 0x80	; 128
     90c:	5f e3       	ldi	r21, 0x3F	; 63
     90e:	6d 81       	ldd	r22, Y+5	; 0x05
     910:	7e 81       	ldd	r23, Y+6	; 0x06
     912:	8f 81       	ldd	r24, Y+7	; 0x07
     914:	98 85       	ldd	r25, Y+8	; 0x08
     916:	0e 94 6f 0b 	call	0x16de	; 0x16de <__cmpsf2>
     91a:	88 23       	and	r24, r24
     91c:	1c f4       	brge	.+6      	; 0x924 <__stack+0xc5>
     91e:	81 e0       	ldi	r24, 0x01	; 1
     920:	8d 87       	std	Y+13, r24	; 0x0d
     922:	b2 c0       	rjmp	.+356    	; 0xa88 <__stack+0x229>
     924:	20 e0       	ldi	r18, 0x00	; 0
     926:	3f ef       	ldi	r19, 0xFF	; 255
     928:	4f e7       	ldi	r20, 0x7F	; 127
     92a:	57 e4       	ldi	r21, 0x47	; 71
     92c:	69 85       	ldd	r22, Y+9	; 0x09
     92e:	7a 85       	ldd	r23, Y+10	; 0x0a
     930:	8b 85       	ldd	r24, Y+11	; 0x0b
     932:	9c 85       	ldd	r25, Y+12	; 0x0c
     934:	0e 94 c7 0c 	call	0x198e	; 0x198e <__gesf2>
     938:	18 16       	cp	r1, r24
     93a:	0c f0       	brlt	.+2      	; 0x93e <__stack+0xdf>
     93c:	7b c0       	rjmp	.+246    	; 0xa34 <__stack+0x1d5>
     93e:	20 e0       	ldi	r18, 0x00	; 0
     940:	30 e0       	ldi	r19, 0x00	; 0
     942:	4a e7       	ldi	r20, 0x7A	; 122
     944:	54 e4       	ldi	r21, 0x44	; 68
     946:	69 81       	ldd	r22, Y+1	; 0x01
     948:	7a 81       	ldd	r23, Y+2	; 0x02
     94a:	8b 81       	ldd	r24, Y+3	; 0x03
     94c:	9c 81       	ldd	r25, Y+4	; 0x04
     94e:	0e 94 74 0b 	call	0x16e8	; 0x16e8 <__divsf3>
     952:	dc 01       	movw	r26, r24
     954:	cb 01       	movw	r24, r22
     956:	8e 87       	std	Y+14, r24	; 0x0e
     958:	9f 87       	std	Y+15, r25	; 0x0f
     95a:	a8 8b       	std	Y+16, r26	; 0x10
     95c:	b9 8b       	std	Y+17, r27	; 0x11
     95e:	20 e0       	ldi	r18, 0x00	; 0
     960:	30 e0       	ldi	r19, 0x00	; 0
     962:	4a e7       	ldi	r20, 0x7A	; 122
     964:	55 e4       	ldi	r21, 0x45	; 69
     966:	6e 85       	ldd	r22, Y+14	; 0x0e
     968:	7f 85       	ldd	r23, Y+15	; 0x0f
     96a:	88 89       	ldd	r24, Y+16	; 0x10
     96c:	99 89       	ldd	r25, Y+17	; 0x11
     96e:	0e 94 cc 0c 	call	0x1998	; 0x1998 <__mulsf3>
     972:	dc 01       	movw	r26, r24
     974:	cb 01       	movw	r24, r22
     976:	8a 8b       	std	Y+18, r24	; 0x12
     978:	9b 8b       	std	Y+19, r25	; 0x13
     97a:	ac 8b       	std	Y+20, r26	; 0x14
     97c:	bd 8b       	std	Y+21, r27	; 0x15
     97e:	20 e0       	ldi	r18, 0x00	; 0
     980:	30 e0       	ldi	r19, 0x00	; 0
     982:	40 e8       	ldi	r20, 0x80	; 128
     984:	5f e3       	ldi	r21, 0x3F	; 63
     986:	6a 89       	ldd	r22, Y+18	; 0x12
     988:	7b 89       	ldd	r23, Y+19	; 0x13
     98a:	8c 89       	ldd	r24, Y+20	; 0x14
     98c:	9d 89       	ldd	r25, Y+21	; 0x15
     98e:	0e 94 6f 0b 	call	0x16de	; 0x16de <__cmpsf2>
     992:	88 23       	and	r24, r24
     994:	2c f4       	brge	.+10     	; 0x9a0 <__stack+0x141>
     996:	81 e0       	ldi	r24, 0x01	; 1
     998:	90 e0       	ldi	r25, 0x00	; 0
     99a:	9f 8b       	std	Y+23, r25	; 0x17
     99c:	8e 8b       	std	Y+22, r24	; 0x16
     99e:	3f c0       	rjmp	.+126    	; 0xa1e <__stack+0x1bf>
     9a0:	20 e0       	ldi	r18, 0x00	; 0
     9a2:	3f ef       	ldi	r19, 0xFF	; 255
     9a4:	4f e7       	ldi	r20, 0x7F	; 127
     9a6:	57 e4       	ldi	r21, 0x47	; 71
     9a8:	6a 89       	ldd	r22, Y+18	; 0x12
     9aa:	7b 89       	ldd	r23, Y+19	; 0x13
     9ac:	8c 89       	ldd	r24, Y+20	; 0x14
     9ae:	9d 89       	ldd	r25, Y+21	; 0x15
     9b0:	0e 94 c7 0c 	call	0x198e	; 0x198e <__gesf2>
     9b4:	18 16       	cp	r1, r24
     9b6:	4c f5       	brge	.+82     	; 0xa0a <__stack+0x1ab>
     9b8:	20 e0       	ldi	r18, 0x00	; 0
     9ba:	30 e0       	ldi	r19, 0x00	; 0
     9bc:	40 e2       	ldi	r20, 0x20	; 32
     9be:	51 e4       	ldi	r21, 0x41	; 65
     9c0:	6e 85       	ldd	r22, Y+14	; 0x0e
     9c2:	7f 85       	ldd	r23, Y+15	; 0x0f
     9c4:	88 89       	ldd	r24, Y+16	; 0x10
     9c6:	99 89       	ldd	r25, Y+17	; 0x11
     9c8:	0e 94 cc 0c 	call	0x1998	; 0x1998 <__mulsf3>
     9cc:	dc 01       	movw	r26, r24
     9ce:	cb 01       	movw	r24, r22
     9d0:	bc 01       	movw	r22, r24
     9d2:	cd 01       	movw	r24, r26
     9d4:	0e 94 e6 0b 	call	0x17cc	; 0x17cc <__fixunssfsi>
     9d8:	dc 01       	movw	r26, r24
     9da:	cb 01       	movw	r24, r22
     9dc:	9f 8b       	std	Y+23, r25	; 0x17
     9de:	8e 8b       	std	Y+22, r24	; 0x16
     9e0:	0f c0       	rjmp	.+30     	; 0xa00 <__stack+0x1a1>
     9e2:	80 e9       	ldi	r24, 0x90	; 144
     9e4:	91 e0       	ldi	r25, 0x01	; 1
     9e6:	99 8f       	std	Y+25, r25	; 0x19
     9e8:	88 8f       	std	Y+24, r24	; 0x18
     9ea:	88 8d       	ldd	r24, Y+24	; 0x18
     9ec:	99 8d       	ldd	r25, Y+25	; 0x19
     9ee:	01 97       	sbiw	r24, 0x01	; 1
     9f0:	f1 f7       	brne	.-4      	; 0x9ee <__stack+0x18f>
     9f2:	99 8f       	std	Y+25, r25	; 0x19
     9f4:	88 8f       	std	Y+24, r24	; 0x18
     9f6:	8e 89       	ldd	r24, Y+22	; 0x16
     9f8:	9f 89       	ldd	r25, Y+23	; 0x17
     9fa:	01 97       	sbiw	r24, 0x01	; 1
     9fc:	9f 8b       	std	Y+23, r25	; 0x17
     9fe:	8e 8b       	std	Y+22, r24	; 0x16
     a00:	8e 89       	ldd	r24, Y+22	; 0x16
     a02:	9f 89       	ldd	r25, Y+23	; 0x17
     a04:	89 2b       	or	r24, r25
     a06:	69 f7       	brne	.-38     	; 0x9e2 <__stack+0x183>
     a08:	3f c0       	rjmp	.+126    	; 0xa88 <__stack+0x229>
     a0a:	6a 89       	ldd	r22, Y+18	; 0x12
     a0c:	7b 89       	ldd	r23, Y+19	; 0x13
     a0e:	8c 89       	ldd	r24, Y+20	; 0x14
     a10:	9d 89       	ldd	r25, Y+21	; 0x15
     a12:	0e 94 e6 0b 	call	0x17cc	; 0x17cc <__fixunssfsi>
     a16:	dc 01       	movw	r26, r24
     a18:	cb 01       	movw	r24, r22
     a1a:	9f 8b       	std	Y+23, r25	; 0x17
     a1c:	8e 8b       	std	Y+22, r24	; 0x16
     a1e:	8e 89       	ldd	r24, Y+22	; 0x16
     a20:	9f 89       	ldd	r25, Y+23	; 0x17
     a22:	9b 8f       	std	Y+27, r25	; 0x1b
     a24:	8a 8f       	std	Y+26, r24	; 0x1a
     a26:	8a 8d       	ldd	r24, Y+26	; 0x1a
     a28:	9b 8d       	ldd	r25, Y+27	; 0x1b
     a2a:	01 97       	sbiw	r24, 0x01	; 1
     a2c:	f1 f7       	brne	.-4      	; 0xa2a <__stack+0x1cb>
     a2e:	9b 8f       	std	Y+27, r25	; 0x1b
     a30:	8a 8f       	std	Y+26, r24	; 0x1a
     a32:	2a c0       	rjmp	.+84     	; 0xa88 <__stack+0x229>
     a34:	20 e0       	ldi	r18, 0x00	; 0
     a36:	30 e0       	ldi	r19, 0x00	; 0
     a38:	4f e7       	ldi	r20, 0x7F	; 127
     a3a:	53 e4       	ldi	r21, 0x43	; 67
     a3c:	6d 81       	ldd	r22, Y+5	; 0x05
     a3e:	7e 81       	ldd	r23, Y+6	; 0x06
     a40:	8f 81       	ldd	r24, Y+7	; 0x07
     a42:	98 85       	ldd	r25, Y+8	; 0x08
     a44:	0e 94 c7 0c 	call	0x198e	; 0x198e <__gesf2>
     a48:	18 16       	cp	r1, r24
     a4a:	ac f4       	brge	.+42     	; 0xa76 <__stack+0x217>
     a4c:	69 85       	ldd	r22, Y+9	; 0x09
     a4e:	7a 85       	ldd	r23, Y+10	; 0x0a
     a50:	8b 85       	ldd	r24, Y+11	; 0x0b
     a52:	9c 85       	ldd	r25, Y+12	; 0x0c
     a54:	0e 94 e6 0b 	call	0x17cc	; 0x17cc <__fixunssfsi>
     a58:	dc 01       	movw	r26, r24
     a5a:	cb 01       	movw	r24, r22
     a5c:	9d 8f       	std	Y+29, r25	; 0x1d
     a5e:	8c 8f       	std	Y+28, r24	; 0x1c
     a60:	8c 8d       	ldd	r24, Y+28	; 0x1c
     a62:	9d 8d       	ldd	r25, Y+29	; 0x1d
     a64:	9f 8f       	std	Y+31, r25	; 0x1f
     a66:	8e 8f       	std	Y+30, r24	; 0x1e
     a68:	8e 8d       	ldd	r24, Y+30	; 0x1e
     a6a:	9f 8d       	ldd	r25, Y+31	; 0x1f
     a6c:	01 97       	sbiw	r24, 0x01	; 1
     a6e:	f1 f7       	brne	.-4      	; 0xa6c <__stack+0x20d>
     a70:	9f 8f       	std	Y+31, r25	; 0x1f
     a72:	8e 8f       	std	Y+30, r24	; 0x1e
     a74:	0f c0       	rjmp	.+30     	; 0xa94 <__stack+0x235>
     a76:	6d 81       	ldd	r22, Y+5	; 0x05
     a78:	7e 81       	ldd	r23, Y+6	; 0x06
     a7a:	8f 81       	ldd	r24, Y+7	; 0x07
     a7c:	98 85       	ldd	r25, Y+8	; 0x08
     a7e:	0e 94 e6 0b 	call	0x17cc	; 0x17cc <__fixunssfsi>
     a82:	dc 01       	movw	r26, r24
     a84:	cb 01       	movw	r24, r22
     a86:	8d 87       	std	Y+13, r24	; 0x0d
     a88:	8d 85       	ldd	r24, Y+13	; 0x0d
     a8a:	88 a3       	std	Y+32, r24	; 0x20
     a8c:	88 a1       	ldd	r24, Y+32	; 0x20
     a8e:	8a 95       	dec	r24
     a90:	f1 f7       	brne	.-4      	; 0xa8e <__stack+0x22f>
     a92:	88 a3       	std	Y+32, r24	; 0x20
     a94:	a1 96       	adiw	r28, 0x21	; 33
     a96:	0f b6       	in	r0, 0x3f	; 63
     a98:	f8 94       	cli
     a9a:	de bf       	out	0x3e, r29	; 62
     a9c:	0f be       	out	0x3f, r0	; 63
     a9e:	cd bf       	out	0x3d, r28	; 61
     aa0:	df 91       	pop	r29
     aa2:	cf 91       	pop	r28
     aa4:	08 95       	ret

00000aa6 <LCD_send_cmd>:
     aa6:	cf 93       	push	r28
     aa8:	df 93       	push	r29
     aaa:	1f 92       	push	r1
     aac:	cd b7       	in	r28, 0x3d	; 61
     aae:	de b7       	in	r29, 0x3e	; 62
     ab0:	89 83       	std	Y+1, r24	; 0x01
     ab2:	60 e0       	ldi	r22, 0x00	; 0
     ab4:	89 e0       	ldi	r24, 0x09	; 9
     ab6:	0e 94 b6 08 	call	0x116c	; 0x116c <writePin>
     aba:	89 81       	ldd	r24, Y+1	; 0x01
     abc:	0e 94 29 04 	call	0x852	; 0x852 <SendToLCD>
     ac0:	0f 90       	pop	r0
     ac2:	df 91       	pop	r29
     ac4:	cf 91       	pop	r28
     ac6:	08 95       	ret

00000ac8 <LCD_send_data>:
     ac8:	cf 93       	push	r28
     aca:	df 93       	push	r29
     acc:	1f 92       	push	r1
     ace:	cd b7       	in	r28, 0x3d	; 61
     ad0:	de b7       	in	r29, 0x3e	; 62
     ad2:	89 83       	std	Y+1, r24	; 0x01
     ad4:	61 e0       	ldi	r22, 0x01	; 1
     ad6:	89 e0       	ldi	r24, 0x09	; 9
     ad8:	0e 94 b6 08 	call	0x116c	; 0x116c <writePin>
     adc:	89 81       	ldd	r24, Y+1	; 0x01
     ade:	0e 94 29 04 	call	0x852	; 0x852 <SendToLCD>
     ae2:	0f 90       	pop	r0
     ae4:	df 91       	pop	r29
     ae6:	cf 91       	pop	r28
     ae8:	08 95       	ret

00000aea <LCD_latch>:
     aea:	cf 93       	push	r28
     aec:	df 93       	push	r29
     aee:	cd b7       	in	r28, 0x3d	; 61
     af0:	de b7       	in	r29, 0x3e	; 62
     af2:	c0 54       	subi	r28, 0x40	; 64
     af4:	d1 09       	sbc	r29, r1
     af6:	0f b6       	in	r0, 0x3f	; 63
     af8:	f8 94       	cli
     afa:	de bf       	out	0x3e, r29	; 62
     afc:	0f be       	out	0x3f, r0	; 63
     afe:	cd bf       	out	0x3d, r28	; 61
     b00:	61 e0       	ldi	r22, 0x01	; 1
     b02:	8b e0       	ldi	r24, 0x0B	; 11
     b04:	0e 94 b6 08 	call	0x116c	; 0x116c <writePin>
     b08:	80 e0       	ldi	r24, 0x00	; 0
     b0a:	90 e0       	ldi	r25, 0x00	; 0
     b0c:	a0 e2       	ldi	r26, 0x20	; 32
     b0e:	b2 e4       	ldi	r27, 0x42	; 66
     b10:	89 83       	std	Y+1, r24	; 0x01
     b12:	9a 83       	std	Y+2, r25	; 0x02
     b14:	ab 83       	std	Y+3, r26	; 0x03
     b16:	bc 83       	std	Y+4, r27	; 0x04
     b18:	2b ea       	ldi	r18, 0xAB	; 171
     b1a:	3a ea       	ldi	r19, 0xAA	; 170
     b1c:	4a ea       	ldi	r20, 0xAA	; 170
     b1e:	50 e4       	ldi	r21, 0x40	; 64
     b20:	69 81       	ldd	r22, Y+1	; 0x01
     b22:	7a 81       	ldd	r23, Y+2	; 0x02
     b24:	8b 81       	ldd	r24, Y+3	; 0x03
     b26:	9c 81       	ldd	r25, Y+4	; 0x04
     b28:	0e 94 cc 0c 	call	0x1998	; 0x1998 <__mulsf3>
     b2c:	dc 01       	movw	r26, r24
     b2e:	cb 01       	movw	r24, r22
     b30:	8d 83       	std	Y+5, r24	; 0x05
     b32:	9e 83       	std	Y+6, r25	; 0x06
     b34:	af 83       	std	Y+7, r26	; 0x07
     b36:	b8 87       	std	Y+8, r27	; 0x08
     b38:	20 e0       	ldi	r18, 0x00	; 0
     b3a:	30 e0       	ldi	r19, 0x00	; 0
     b3c:	40 e8       	ldi	r20, 0x80	; 128
     b3e:	50 e4       	ldi	r21, 0x40	; 64
     b40:	69 81       	ldd	r22, Y+1	; 0x01
     b42:	7a 81       	ldd	r23, Y+2	; 0x02
     b44:	8b 81       	ldd	r24, Y+3	; 0x03
     b46:	9c 81       	ldd	r25, Y+4	; 0x04
     b48:	0e 94 cc 0c 	call	0x1998	; 0x1998 <__mulsf3>
     b4c:	dc 01       	movw	r26, r24
     b4e:	cb 01       	movw	r24, r22
     b50:	89 87       	std	Y+9, r24	; 0x09
     b52:	9a 87       	std	Y+10, r25	; 0x0a
     b54:	ab 87       	std	Y+11, r26	; 0x0b
     b56:	bc 87       	std	Y+12, r27	; 0x0c
     b58:	20 e0       	ldi	r18, 0x00	; 0
     b5a:	30 e0       	ldi	r19, 0x00	; 0
     b5c:	40 e8       	ldi	r20, 0x80	; 128
     b5e:	5f e3       	ldi	r21, 0x3F	; 63
     b60:	6d 81       	ldd	r22, Y+5	; 0x05
     b62:	7e 81       	ldd	r23, Y+6	; 0x06
     b64:	8f 81       	ldd	r24, Y+7	; 0x07
     b66:	98 85       	ldd	r25, Y+8	; 0x08
     b68:	0e 94 6f 0b 	call	0x16de	; 0x16de <__cmpsf2>
     b6c:	88 23       	and	r24, r24
     b6e:	1c f4       	brge	.+6      	; 0xb76 <LCD_latch+0x8c>
     b70:	81 e0       	ldi	r24, 0x01	; 1
     b72:	8d 87       	std	Y+13, r24	; 0x0d
     b74:	b2 c0       	rjmp	.+356    	; 0xcda <LCD_latch+0x1f0>
     b76:	20 e0       	ldi	r18, 0x00	; 0
     b78:	3f ef       	ldi	r19, 0xFF	; 255
     b7a:	4f e7       	ldi	r20, 0x7F	; 127
     b7c:	57 e4       	ldi	r21, 0x47	; 71
     b7e:	69 85       	ldd	r22, Y+9	; 0x09
     b80:	7a 85       	ldd	r23, Y+10	; 0x0a
     b82:	8b 85       	ldd	r24, Y+11	; 0x0b
     b84:	9c 85       	ldd	r25, Y+12	; 0x0c
     b86:	0e 94 c7 0c 	call	0x198e	; 0x198e <__gesf2>
     b8a:	18 16       	cp	r1, r24
     b8c:	0c f0       	brlt	.+2      	; 0xb90 <LCD_latch+0xa6>
     b8e:	7b c0       	rjmp	.+246    	; 0xc86 <LCD_latch+0x19c>
     b90:	20 e0       	ldi	r18, 0x00	; 0
     b92:	30 e0       	ldi	r19, 0x00	; 0
     b94:	4a e7       	ldi	r20, 0x7A	; 122
     b96:	54 e4       	ldi	r21, 0x44	; 68
     b98:	69 81       	ldd	r22, Y+1	; 0x01
     b9a:	7a 81       	ldd	r23, Y+2	; 0x02
     b9c:	8b 81       	ldd	r24, Y+3	; 0x03
     b9e:	9c 81       	ldd	r25, Y+4	; 0x04
     ba0:	0e 94 74 0b 	call	0x16e8	; 0x16e8 <__divsf3>
     ba4:	dc 01       	movw	r26, r24
     ba6:	cb 01       	movw	r24, r22
     ba8:	8e 87       	std	Y+14, r24	; 0x0e
     baa:	9f 87       	std	Y+15, r25	; 0x0f
     bac:	a8 8b       	std	Y+16, r26	; 0x10
     bae:	b9 8b       	std	Y+17, r27	; 0x11
     bb0:	20 e0       	ldi	r18, 0x00	; 0
     bb2:	30 e0       	ldi	r19, 0x00	; 0
     bb4:	4a e7       	ldi	r20, 0x7A	; 122
     bb6:	55 e4       	ldi	r21, 0x45	; 69
     bb8:	6e 85       	ldd	r22, Y+14	; 0x0e
     bba:	7f 85       	ldd	r23, Y+15	; 0x0f
     bbc:	88 89       	ldd	r24, Y+16	; 0x10
     bbe:	99 89       	ldd	r25, Y+17	; 0x11
     bc0:	0e 94 cc 0c 	call	0x1998	; 0x1998 <__mulsf3>
     bc4:	dc 01       	movw	r26, r24
     bc6:	cb 01       	movw	r24, r22
     bc8:	8a 8b       	std	Y+18, r24	; 0x12
     bca:	9b 8b       	std	Y+19, r25	; 0x13
     bcc:	ac 8b       	std	Y+20, r26	; 0x14
     bce:	bd 8b       	std	Y+21, r27	; 0x15
     bd0:	20 e0       	ldi	r18, 0x00	; 0
     bd2:	30 e0       	ldi	r19, 0x00	; 0
     bd4:	40 e8       	ldi	r20, 0x80	; 128
     bd6:	5f e3       	ldi	r21, 0x3F	; 63
     bd8:	6a 89       	ldd	r22, Y+18	; 0x12
     bda:	7b 89       	ldd	r23, Y+19	; 0x13
     bdc:	8c 89       	ldd	r24, Y+20	; 0x14
     bde:	9d 89       	ldd	r25, Y+21	; 0x15
     be0:	0e 94 6f 0b 	call	0x16de	; 0x16de <__cmpsf2>
     be4:	88 23       	and	r24, r24
     be6:	2c f4       	brge	.+10     	; 0xbf2 <LCD_latch+0x108>
     be8:	81 e0       	ldi	r24, 0x01	; 1
     bea:	90 e0       	ldi	r25, 0x00	; 0
     bec:	9f 8b       	std	Y+23, r25	; 0x17
     bee:	8e 8b       	std	Y+22, r24	; 0x16
     bf0:	3f c0       	rjmp	.+126    	; 0xc70 <LCD_latch+0x186>
     bf2:	20 e0       	ldi	r18, 0x00	; 0
     bf4:	3f ef       	ldi	r19, 0xFF	; 255
     bf6:	4f e7       	ldi	r20, 0x7F	; 127
     bf8:	57 e4       	ldi	r21, 0x47	; 71
     bfa:	6a 89       	ldd	r22, Y+18	; 0x12
     bfc:	7b 89       	ldd	r23, Y+19	; 0x13
     bfe:	8c 89       	ldd	r24, Y+20	; 0x14
     c00:	9d 89       	ldd	r25, Y+21	; 0x15
     c02:	0e 94 c7 0c 	call	0x198e	; 0x198e <__gesf2>
     c06:	18 16       	cp	r1, r24
     c08:	4c f5       	brge	.+82     	; 0xc5c <LCD_latch+0x172>
     c0a:	20 e0       	ldi	r18, 0x00	; 0
     c0c:	30 e0       	ldi	r19, 0x00	; 0
     c0e:	40 e2       	ldi	r20, 0x20	; 32
     c10:	51 e4       	ldi	r21, 0x41	; 65
     c12:	6e 85       	ldd	r22, Y+14	; 0x0e
     c14:	7f 85       	ldd	r23, Y+15	; 0x0f
     c16:	88 89       	ldd	r24, Y+16	; 0x10
     c18:	99 89       	ldd	r25, Y+17	; 0x11
     c1a:	0e 94 cc 0c 	call	0x1998	; 0x1998 <__mulsf3>
     c1e:	dc 01       	movw	r26, r24
     c20:	cb 01       	movw	r24, r22
     c22:	bc 01       	movw	r22, r24
     c24:	cd 01       	movw	r24, r26
     c26:	0e 94 e6 0b 	call	0x17cc	; 0x17cc <__fixunssfsi>
     c2a:	dc 01       	movw	r26, r24
     c2c:	cb 01       	movw	r24, r22
     c2e:	9f 8b       	std	Y+23, r25	; 0x17
     c30:	8e 8b       	std	Y+22, r24	; 0x16
     c32:	0f c0       	rjmp	.+30     	; 0xc52 <LCD_latch+0x168>
     c34:	80 e9       	ldi	r24, 0x90	; 144
     c36:	91 e0       	ldi	r25, 0x01	; 1
     c38:	99 8f       	std	Y+25, r25	; 0x19
     c3a:	88 8f       	std	Y+24, r24	; 0x18
     c3c:	88 8d       	ldd	r24, Y+24	; 0x18
     c3e:	99 8d       	ldd	r25, Y+25	; 0x19
     c40:	01 97       	sbiw	r24, 0x01	; 1
     c42:	f1 f7       	brne	.-4      	; 0xc40 <LCD_latch+0x156>
     c44:	99 8f       	std	Y+25, r25	; 0x19
     c46:	88 8f       	std	Y+24, r24	; 0x18
     c48:	8e 89       	ldd	r24, Y+22	; 0x16
     c4a:	9f 89       	ldd	r25, Y+23	; 0x17
     c4c:	01 97       	sbiw	r24, 0x01	; 1
     c4e:	9f 8b       	std	Y+23, r25	; 0x17
     c50:	8e 8b       	std	Y+22, r24	; 0x16
     c52:	8e 89       	ldd	r24, Y+22	; 0x16
     c54:	9f 89       	ldd	r25, Y+23	; 0x17
     c56:	89 2b       	or	r24, r25
     c58:	69 f7       	brne	.-38     	; 0xc34 <LCD_latch+0x14a>
     c5a:	3f c0       	rjmp	.+126    	; 0xcda <LCD_latch+0x1f0>
     c5c:	6a 89       	ldd	r22, Y+18	; 0x12
     c5e:	7b 89       	ldd	r23, Y+19	; 0x13
     c60:	8c 89       	ldd	r24, Y+20	; 0x14
     c62:	9d 89       	ldd	r25, Y+21	; 0x15
     c64:	0e 94 e6 0b 	call	0x17cc	; 0x17cc <__fixunssfsi>
     c68:	dc 01       	movw	r26, r24
     c6a:	cb 01       	movw	r24, r22
     c6c:	9f 8b       	std	Y+23, r25	; 0x17
     c6e:	8e 8b       	std	Y+22, r24	; 0x16
     c70:	8e 89       	ldd	r24, Y+22	; 0x16
     c72:	9f 89       	ldd	r25, Y+23	; 0x17
     c74:	9b 8f       	std	Y+27, r25	; 0x1b
     c76:	8a 8f       	std	Y+26, r24	; 0x1a
     c78:	8a 8d       	ldd	r24, Y+26	; 0x1a
     c7a:	9b 8d       	ldd	r25, Y+27	; 0x1b
     c7c:	01 97       	sbiw	r24, 0x01	; 1
     c7e:	f1 f7       	brne	.-4      	; 0xc7c <LCD_latch+0x192>
     c80:	9b 8f       	std	Y+27, r25	; 0x1b
     c82:	8a 8f       	std	Y+26, r24	; 0x1a
     c84:	2a c0       	rjmp	.+84     	; 0xcda <LCD_latch+0x1f0>
     c86:	20 e0       	ldi	r18, 0x00	; 0
     c88:	30 e0       	ldi	r19, 0x00	; 0
     c8a:	4f e7       	ldi	r20, 0x7F	; 127
     c8c:	53 e4       	ldi	r21, 0x43	; 67
     c8e:	6d 81       	ldd	r22, Y+5	; 0x05
     c90:	7e 81       	ldd	r23, Y+6	; 0x06
     c92:	8f 81       	ldd	r24, Y+7	; 0x07
     c94:	98 85       	ldd	r25, Y+8	; 0x08
     c96:	0e 94 c7 0c 	call	0x198e	; 0x198e <__gesf2>
     c9a:	18 16       	cp	r1, r24
     c9c:	ac f4       	brge	.+42     	; 0xcc8 <LCD_latch+0x1de>
     c9e:	69 85       	ldd	r22, Y+9	; 0x09
     ca0:	7a 85       	ldd	r23, Y+10	; 0x0a
     ca2:	8b 85       	ldd	r24, Y+11	; 0x0b
     ca4:	9c 85       	ldd	r25, Y+12	; 0x0c
     ca6:	0e 94 e6 0b 	call	0x17cc	; 0x17cc <__fixunssfsi>
     caa:	dc 01       	movw	r26, r24
     cac:	cb 01       	movw	r24, r22
     cae:	9d 8f       	std	Y+29, r25	; 0x1d
     cb0:	8c 8f       	std	Y+28, r24	; 0x1c
     cb2:	8c 8d       	ldd	r24, Y+28	; 0x1c
     cb4:	9d 8d       	ldd	r25, Y+29	; 0x1d
     cb6:	9f 8f       	std	Y+31, r25	; 0x1f
     cb8:	8e 8f       	std	Y+30, r24	; 0x1e
     cba:	8e 8d       	ldd	r24, Y+30	; 0x1e
     cbc:	9f 8d       	ldd	r25, Y+31	; 0x1f
     cbe:	01 97       	sbiw	r24, 0x01	; 1
     cc0:	f1 f7       	brne	.-4      	; 0xcbe <LCD_latch+0x1d4>
     cc2:	9f 8f       	std	Y+31, r25	; 0x1f
     cc4:	8e 8f       	std	Y+30, r24	; 0x1e
     cc6:	0f c0       	rjmp	.+30     	; 0xce6 <LCD_latch+0x1fc>
     cc8:	6d 81       	ldd	r22, Y+5	; 0x05
     cca:	7e 81       	ldd	r23, Y+6	; 0x06
     ccc:	8f 81       	ldd	r24, Y+7	; 0x07
     cce:	98 85       	ldd	r25, Y+8	; 0x08
     cd0:	0e 94 e6 0b 	call	0x17cc	; 0x17cc <__fixunssfsi>
     cd4:	dc 01       	movw	r26, r24
     cd6:	cb 01       	movw	r24, r22
     cd8:	8d 87       	std	Y+13, r24	; 0x0d
     cda:	8d 85       	ldd	r24, Y+13	; 0x0d
     cdc:	88 a3       	std	Y+32, r24	; 0x20
     cde:	88 a1       	ldd	r24, Y+32	; 0x20
     ce0:	8a 95       	dec	r24
     ce2:	f1 f7       	brne	.-4      	; 0xce0 <LCD_latch+0x1f6>
     ce4:	88 a3       	std	Y+32, r24	; 0x20
     ce6:	60 e0       	ldi	r22, 0x00	; 0
     ce8:	8b e0       	ldi	r24, 0x0B	; 11
     cea:	0e 94 b6 08 	call	0x116c	; 0x116c <writePin>
     cee:	80 e0       	ldi	r24, 0x00	; 0
     cf0:	90 e0       	ldi	r25, 0x00	; 0
     cf2:	a0 e2       	ldi	r26, 0x20	; 32
     cf4:	b2 e4       	ldi	r27, 0x42	; 66
     cf6:	89 a3       	std	Y+33, r24	; 0x21
     cf8:	9a a3       	std	Y+34, r25	; 0x22
     cfa:	ab a3       	std	Y+35, r26	; 0x23
     cfc:	bc a3       	std	Y+36, r27	; 0x24
     cfe:	2b ea       	ldi	r18, 0xAB	; 171
     d00:	3a ea       	ldi	r19, 0xAA	; 170
     d02:	4a ea       	ldi	r20, 0xAA	; 170
     d04:	50 e4       	ldi	r21, 0x40	; 64
     d06:	69 a1       	ldd	r22, Y+33	; 0x21
     d08:	7a a1       	ldd	r23, Y+34	; 0x22
     d0a:	8b a1       	ldd	r24, Y+35	; 0x23
     d0c:	9c a1       	ldd	r25, Y+36	; 0x24
     d0e:	0e 94 cc 0c 	call	0x1998	; 0x1998 <__mulsf3>
     d12:	dc 01       	movw	r26, r24
     d14:	cb 01       	movw	r24, r22
     d16:	8d a3       	std	Y+37, r24	; 0x25
     d18:	9e a3       	std	Y+38, r25	; 0x26
     d1a:	af a3       	std	Y+39, r26	; 0x27
     d1c:	b8 a7       	std	Y+40, r27	; 0x28
     d1e:	20 e0       	ldi	r18, 0x00	; 0
     d20:	30 e0       	ldi	r19, 0x00	; 0
     d22:	40 e8       	ldi	r20, 0x80	; 128
     d24:	50 e4       	ldi	r21, 0x40	; 64
     d26:	69 a1       	ldd	r22, Y+33	; 0x21
     d28:	7a a1       	ldd	r23, Y+34	; 0x22
     d2a:	8b a1       	ldd	r24, Y+35	; 0x23
     d2c:	9c a1       	ldd	r25, Y+36	; 0x24
     d2e:	0e 94 cc 0c 	call	0x1998	; 0x1998 <__mulsf3>
     d32:	dc 01       	movw	r26, r24
     d34:	cb 01       	movw	r24, r22
     d36:	89 a7       	std	Y+41, r24	; 0x29
     d38:	9a a7       	std	Y+42, r25	; 0x2a
     d3a:	ab a7       	std	Y+43, r26	; 0x2b
     d3c:	bc a7       	std	Y+44, r27	; 0x2c
     d3e:	20 e0       	ldi	r18, 0x00	; 0
     d40:	30 e0       	ldi	r19, 0x00	; 0
     d42:	40 e8       	ldi	r20, 0x80	; 128
     d44:	5f e3       	ldi	r21, 0x3F	; 63
     d46:	6d a1       	ldd	r22, Y+37	; 0x25
     d48:	7e a1       	ldd	r23, Y+38	; 0x26
     d4a:	8f a1       	ldd	r24, Y+39	; 0x27
     d4c:	98 a5       	ldd	r25, Y+40	; 0x28
     d4e:	0e 94 6f 0b 	call	0x16de	; 0x16de <__cmpsf2>
     d52:	88 23       	and	r24, r24
     d54:	1c f4       	brge	.+6      	; 0xd5c <LCD_latch+0x272>
     d56:	81 e0       	ldi	r24, 0x01	; 1
     d58:	8d a7       	std	Y+45, r24	; 0x2d
     d5a:	b2 c0       	rjmp	.+356    	; 0xec0 <LCD_latch+0x3d6>
     d5c:	20 e0       	ldi	r18, 0x00	; 0
     d5e:	3f ef       	ldi	r19, 0xFF	; 255
     d60:	4f e7       	ldi	r20, 0x7F	; 127
     d62:	57 e4       	ldi	r21, 0x47	; 71
     d64:	69 a5       	ldd	r22, Y+41	; 0x29
     d66:	7a a5       	ldd	r23, Y+42	; 0x2a
     d68:	8b a5       	ldd	r24, Y+43	; 0x2b
     d6a:	9c a5       	ldd	r25, Y+44	; 0x2c
     d6c:	0e 94 c7 0c 	call	0x198e	; 0x198e <__gesf2>
     d70:	18 16       	cp	r1, r24
     d72:	0c f0       	brlt	.+2      	; 0xd76 <LCD_latch+0x28c>
     d74:	7b c0       	rjmp	.+246    	; 0xe6c <LCD_latch+0x382>
     d76:	20 e0       	ldi	r18, 0x00	; 0
     d78:	30 e0       	ldi	r19, 0x00	; 0
     d7a:	4a e7       	ldi	r20, 0x7A	; 122
     d7c:	54 e4       	ldi	r21, 0x44	; 68
     d7e:	69 a1       	ldd	r22, Y+33	; 0x21
     d80:	7a a1       	ldd	r23, Y+34	; 0x22
     d82:	8b a1       	ldd	r24, Y+35	; 0x23
     d84:	9c a1       	ldd	r25, Y+36	; 0x24
     d86:	0e 94 74 0b 	call	0x16e8	; 0x16e8 <__divsf3>
     d8a:	dc 01       	movw	r26, r24
     d8c:	cb 01       	movw	r24, r22
     d8e:	8e a7       	std	Y+46, r24	; 0x2e
     d90:	9f a7       	std	Y+47, r25	; 0x2f
     d92:	a8 ab       	std	Y+48, r26	; 0x30
     d94:	b9 ab       	std	Y+49, r27	; 0x31
     d96:	20 e0       	ldi	r18, 0x00	; 0
     d98:	30 e0       	ldi	r19, 0x00	; 0
     d9a:	4a e7       	ldi	r20, 0x7A	; 122
     d9c:	55 e4       	ldi	r21, 0x45	; 69
     d9e:	6e a5       	ldd	r22, Y+46	; 0x2e
     da0:	7f a5       	ldd	r23, Y+47	; 0x2f
     da2:	88 a9       	ldd	r24, Y+48	; 0x30
     da4:	99 a9       	ldd	r25, Y+49	; 0x31
     da6:	0e 94 cc 0c 	call	0x1998	; 0x1998 <__mulsf3>
     daa:	dc 01       	movw	r26, r24
     dac:	cb 01       	movw	r24, r22
     dae:	8a ab       	std	Y+50, r24	; 0x32
     db0:	9b ab       	std	Y+51, r25	; 0x33
     db2:	ac ab       	std	Y+52, r26	; 0x34
     db4:	bd ab       	std	Y+53, r27	; 0x35
     db6:	20 e0       	ldi	r18, 0x00	; 0
     db8:	30 e0       	ldi	r19, 0x00	; 0
     dba:	40 e8       	ldi	r20, 0x80	; 128
     dbc:	5f e3       	ldi	r21, 0x3F	; 63
     dbe:	6a a9       	ldd	r22, Y+50	; 0x32
     dc0:	7b a9       	ldd	r23, Y+51	; 0x33
     dc2:	8c a9       	ldd	r24, Y+52	; 0x34
     dc4:	9d a9       	ldd	r25, Y+53	; 0x35
     dc6:	0e 94 6f 0b 	call	0x16de	; 0x16de <__cmpsf2>
     dca:	88 23       	and	r24, r24
     dcc:	2c f4       	brge	.+10     	; 0xdd8 <LCD_latch+0x2ee>
     dce:	81 e0       	ldi	r24, 0x01	; 1
     dd0:	90 e0       	ldi	r25, 0x00	; 0
     dd2:	9f ab       	std	Y+55, r25	; 0x37
     dd4:	8e ab       	std	Y+54, r24	; 0x36
     dd6:	3f c0       	rjmp	.+126    	; 0xe56 <LCD_latch+0x36c>
     dd8:	20 e0       	ldi	r18, 0x00	; 0
     dda:	3f ef       	ldi	r19, 0xFF	; 255
     ddc:	4f e7       	ldi	r20, 0x7F	; 127
     dde:	57 e4       	ldi	r21, 0x47	; 71
     de0:	6a a9       	ldd	r22, Y+50	; 0x32
     de2:	7b a9       	ldd	r23, Y+51	; 0x33
     de4:	8c a9       	ldd	r24, Y+52	; 0x34
     de6:	9d a9       	ldd	r25, Y+53	; 0x35
     de8:	0e 94 c7 0c 	call	0x198e	; 0x198e <__gesf2>
     dec:	18 16       	cp	r1, r24
     dee:	4c f5       	brge	.+82     	; 0xe42 <LCD_latch+0x358>
     df0:	20 e0       	ldi	r18, 0x00	; 0
     df2:	30 e0       	ldi	r19, 0x00	; 0
     df4:	40 e2       	ldi	r20, 0x20	; 32
     df6:	51 e4       	ldi	r21, 0x41	; 65
     df8:	6e a5       	ldd	r22, Y+46	; 0x2e
     dfa:	7f a5       	ldd	r23, Y+47	; 0x2f
     dfc:	88 a9       	ldd	r24, Y+48	; 0x30
     dfe:	99 a9       	ldd	r25, Y+49	; 0x31
     e00:	0e 94 cc 0c 	call	0x1998	; 0x1998 <__mulsf3>
     e04:	dc 01       	movw	r26, r24
     e06:	cb 01       	movw	r24, r22
     e08:	bc 01       	movw	r22, r24
     e0a:	cd 01       	movw	r24, r26
     e0c:	0e 94 e6 0b 	call	0x17cc	; 0x17cc <__fixunssfsi>
     e10:	dc 01       	movw	r26, r24
     e12:	cb 01       	movw	r24, r22
     e14:	9f ab       	std	Y+55, r25	; 0x37
     e16:	8e ab       	std	Y+54, r24	; 0x36
     e18:	0f c0       	rjmp	.+30     	; 0xe38 <LCD_latch+0x34e>
     e1a:	80 e9       	ldi	r24, 0x90	; 144
     e1c:	91 e0       	ldi	r25, 0x01	; 1
     e1e:	99 af       	std	Y+57, r25	; 0x39
     e20:	88 af       	std	Y+56, r24	; 0x38
     e22:	88 ad       	ldd	r24, Y+56	; 0x38
     e24:	99 ad       	ldd	r25, Y+57	; 0x39
     e26:	01 97       	sbiw	r24, 0x01	; 1
     e28:	f1 f7       	brne	.-4      	; 0xe26 <LCD_latch+0x33c>
     e2a:	99 af       	std	Y+57, r25	; 0x39
     e2c:	88 af       	std	Y+56, r24	; 0x38
     e2e:	8e a9       	ldd	r24, Y+54	; 0x36
     e30:	9f a9       	ldd	r25, Y+55	; 0x37
     e32:	01 97       	sbiw	r24, 0x01	; 1
     e34:	9f ab       	std	Y+55, r25	; 0x37
     e36:	8e ab       	std	Y+54, r24	; 0x36
     e38:	8e a9       	ldd	r24, Y+54	; 0x36
     e3a:	9f a9       	ldd	r25, Y+55	; 0x37
     e3c:	89 2b       	or	r24, r25
     e3e:	69 f7       	brne	.-38     	; 0xe1a <LCD_latch+0x330>
     e40:	3f c0       	rjmp	.+126    	; 0xec0 <LCD_latch+0x3d6>
     e42:	6a a9       	ldd	r22, Y+50	; 0x32
     e44:	7b a9       	ldd	r23, Y+51	; 0x33
     e46:	8c a9       	ldd	r24, Y+52	; 0x34
     e48:	9d a9       	ldd	r25, Y+53	; 0x35
     e4a:	0e 94 e6 0b 	call	0x17cc	; 0x17cc <__fixunssfsi>
     e4e:	dc 01       	movw	r26, r24
     e50:	cb 01       	movw	r24, r22
     e52:	9f ab       	std	Y+55, r25	; 0x37
     e54:	8e ab       	std	Y+54, r24	; 0x36
     e56:	8e a9       	ldd	r24, Y+54	; 0x36
     e58:	9f a9       	ldd	r25, Y+55	; 0x37
     e5a:	9b af       	std	Y+59, r25	; 0x3b
     e5c:	8a af       	std	Y+58, r24	; 0x3a
     e5e:	8a ad       	ldd	r24, Y+58	; 0x3a
     e60:	9b ad       	ldd	r25, Y+59	; 0x3b
     e62:	01 97       	sbiw	r24, 0x01	; 1
     e64:	f1 f7       	brne	.-4      	; 0xe62 <LCD_latch+0x378>
     e66:	9b af       	std	Y+59, r25	; 0x3b
     e68:	8a af       	std	Y+58, r24	; 0x3a
     e6a:	2a c0       	rjmp	.+84     	; 0xec0 <LCD_latch+0x3d6>
     e6c:	20 e0       	ldi	r18, 0x00	; 0
     e6e:	30 e0       	ldi	r19, 0x00	; 0
     e70:	4f e7       	ldi	r20, 0x7F	; 127
     e72:	53 e4       	ldi	r21, 0x43	; 67
     e74:	6d a1       	ldd	r22, Y+37	; 0x25
     e76:	7e a1       	ldd	r23, Y+38	; 0x26
     e78:	8f a1       	ldd	r24, Y+39	; 0x27
     e7a:	98 a5       	ldd	r25, Y+40	; 0x28
     e7c:	0e 94 c7 0c 	call	0x198e	; 0x198e <__gesf2>
     e80:	18 16       	cp	r1, r24
     e82:	ac f4       	brge	.+42     	; 0xeae <LCD_latch+0x3c4>
     e84:	69 a5       	ldd	r22, Y+41	; 0x29
     e86:	7a a5       	ldd	r23, Y+42	; 0x2a
     e88:	8b a5       	ldd	r24, Y+43	; 0x2b
     e8a:	9c a5       	ldd	r25, Y+44	; 0x2c
     e8c:	0e 94 e6 0b 	call	0x17cc	; 0x17cc <__fixunssfsi>
     e90:	dc 01       	movw	r26, r24
     e92:	cb 01       	movw	r24, r22
     e94:	9d af       	std	Y+61, r25	; 0x3d
     e96:	8c af       	std	Y+60, r24	; 0x3c
     e98:	8c ad       	ldd	r24, Y+60	; 0x3c
     e9a:	9d ad       	ldd	r25, Y+61	; 0x3d
     e9c:	9f af       	std	Y+63, r25	; 0x3f
     e9e:	8e af       	std	Y+62, r24	; 0x3e
     ea0:	8e ad       	ldd	r24, Y+62	; 0x3e
     ea2:	9f ad       	ldd	r25, Y+63	; 0x3f
     ea4:	01 97       	sbiw	r24, 0x01	; 1
     ea6:	f1 f7       	brne	.-4      	; 0xea4 <LCD_latch+0x3ba>
     ea8:	9f af       	std	Y+63, r25	; 0x3f
     eaa:	8e af       	std	Y+62, r24	; 0x3e
     eac:	1c c0       	rjmp	.+56     	; 0xee6 <LCD_latch+0x3fc>
     eae:	6d a1       	ldd	r22, Y+37	; 0x25
     eb0:	7e a1       	ldd	r23, Y+38	; 0x26
     eb2:	8f a1       	ldd	r24, Y+39	; 0x27
     eb4:	98 a5       	ldd	r25, Y+40	; 0x28
     eb6:	0e 94 e6 0b 	call	0x17cc	; 0x17cc <__fixunssfsi>
     eba:	dc 01       	movw	r26, r24
     ebc:	cb 01       	movw	r24, r22
     ebe:	8d a7       	std	Y+45, r24	; 0x2d
     ec0:	2d a5       	ldd	r18, Y+45	; 0x2d
     ec2:	ce 01       	movw	r24, r28
     ec4:	80 5c       	subi	r24, 0xC0	; 192
     ec6:	9f 4f       	sbci	r25, 0xFF	; 255
     ec8:	fc 01       	movw	r30, r24
     eca:	20 83       	st	Z, r18
     ecc:	ce 01       	movw	r24, r28
     ece:	80 5c       	subi	r24, 0xC0	; 192
     ed0:	9f 4f       	sbci	r25, 0xFF	; 255
     ed2:	fc 01       	movw	r30, r24
     ed4:	80 81       	ld	r24, Z
     ed6:	28 2f       	mov	r18, r24
     ed8:	2a 95       	dec	r18
     eda:	f1 f7       	brne	.-4      	; 0xed8 <LCD_latch+0x3ee>
     edc:	ce 01       	movw	r24, r28
     ede:	80 5c       	subi	r24, 0xC0	; 192
     ee0:	9f 4f       	sbci	r25, 0xFF	; 255
     ee2:	fc 01       	movw	r30, r24
     ee4:	20 83       	st	Z, r18
     ee6:	c0 5c       	subi	r28, 0xC0	; 192
     ee8:	df 4f       	sbci	r29, 0xFF	; 255
     eea:	0f b6       	in	r0, 0x3f	; 63
     eec:	f8 94       	cli
     eee:	de bf       	out	0x3e, r29	; 62
     ef0:	0f be       	out	0x3f, r0	; 63
     ef2:	cd bf       	out	0x3d, r28	; 61
     ef4:	df 91       	pop	r29
     ef6:	cf 91       	pop	r28
     ef8:	08 95       	ret

00000efa <disp_char>:
     efa:	cf 93       	push	r28
     efc:	df 93       	push	r29
     efe:	1f 92       	push	r1
     f00:	cd b7       	in	r28, 0x3d	; 61
     f02:	de b7       	in	r29, 0x3e	; 62
     f04:	89 83       	std	Y+1, r24	; 0x01
     f06:	89 81       	ldd	r24, Y+1	; 0x01
     f08:	0e 94 64 05 	call	0xac8	; 0xac8 <LCD_send_data>
     f0c:	0f 90       	pop	r0
     f0e:	df 91       	pop	r29
     f10:	cf 91       	pop	r28
     f12:	08 95       	ret

00000f14 <disp_str>:
void disp_str(u8* str)
{
     f14:	cf 93       	push	r28
     f16:	df 93       	push	r29
     f18:	00 d0       	rcall	.+0      	; 0xf1a <disp_str+0x6>
     f1a:	1f 92       	push	r1
     f1c:	cd b7       	in	r28, 0x3d	; 61
     f1e:	de b7       	in	r29, 0x3e	; 62
     f20:	9b 83       	std	Y+3, r25	; 0x03
     f22:	8a 83       	std	Y+2, r24	; 0x02
	u8 indx=0;
     f24:	19 82       	std	Y+1, r1	; 0x01
	while(str[indx]!='\0')
     f26:	0e c0       	rjmp	.+28     	; 0xf44 <disp_str+0x30>
	{
		disp_char(indx[str]);
     f28:	89 81       	ldd	r24, Y+1	; 0x01
     f2a:	88 2f       	mov	r24, r24
     f2c:	90 e0       	ldi	r25, 0x00	; 0
     f2e:	2a 81       	ldd	r18, Y+2	; 0x02
     f30:	3b 81       	ldd	r19, Y+3	; 0x03
     f32:	82 0f       	add	r24, r18
     f34:	93 1f       	adc	r25, r19
     f36:	fc 01       	movw	r30, r24
     f38:	80 81       	ld	r24, Z
     f3a:	0e 94 7d 07 	call	0xefa	; 0xefa <disp_char>
		indx++;
     f3e:	89 81       	ldd	r24, Y+1	; 0x01
     f40:	8f 5f       	subi	r24, 0xFF	; 255
     f42:	89 83       	std	Y+1, r24	; 0x01
	disp_char(letter);	
}
void disp_str(u8* str)
{
	u8 indx=0;
	while(str[indx]!='\0')
     f44:	89 81       	ldd	r24, Y+1	; 0x01
     f46:	88 2f       	mov	r24, r24
     f48:	90 e0       	ldi	r25, 0x00	; 0
     f4a:	2a 81       	ldd	r18, Y+2	; 0x02
     f4c:	3b 81       	ldd	r19, Y+3	; 0x03
     f4e:	82 0f       	add	r24, r18
     f50:	93 1f       	adc	r25, r19
     f52:	fc 01       	movw	r30, r24
     f54:	80 81       	ld	r24, Z
     f56:	88 23       	and	r24, r24
     f58:	39 f7       	brne	.-50     	; 0xf28 <disp_str+0x14>
	{
		disp_char(indx[str]);
		indx++;
	}
}
     f5a:	0f 90       	pop	r0
     f5c:	0f 90       	pop	r0
     f5e:	0f 90       	pop	r0
     f60:	df 91       	pop	r29
     f62:	cf 91       	pop	r28
     f64:	08 95       	ret

00000f66 <LCD_GOTXY>:
void LCD_GOTXY(u8 row,u8 col)
{
     f66:	cf 93       	push	r28
     f68:	df 93       	push	r29
     f6a:	00 d0       	rcall	.+0      	; 0xf6c <LCD_GOTXY+0x6>
     f6c:	cd b7       	in	r28, 0x3d	; 61
     f6e:	de b7       	in	r29, 0x3e	; 62
     f70:	89 83       	std	Y+1, r24	; 0x01
     f72:	6a 83       	std	Y+2, r22	; 0x02
	if (row==1)
     f74:	89 81       	ldd	r24, Y+1	; 0x01
     f76:	81 30       	cpi	r24, 0x01	; 1
     f78:	29 f4       	brne	.+10     	; 0xf84 <LCD_GOTXY+0x1e>
	{
		LCD_send_cmd(DDRAM_ADD+0x00+col-1);
     f7a:	8a 81       	ldd	r24, Y+2	; 0x02
     f7c:	81 58       	subi	r24, 0x81	; 129
     f7e:	0e 94 53 05 	call	0xaa6	; 0xaa6 <LCD_send_cmd>
     f82:	07 c0       	rjmp	.+14     	; 0xf92 <LCD_GOTXY+0x2c>
	}
	else if(row==2)
     f84:	89 81       	ldd	r24, Y+1	; 0x01
     f86:	82 30       	cpi	r24, 0x02	; 2
     f88:	21 f4       	brne	.+8      	; 0xf92 <LCD_GOTXY+0x2c>
	{
		LCD_send_cmd(DDRAM_ADD+0x40+col-1);	
     f8a:	8a 81       	ldd	r24, Y+2	; 0x02
     f8c:	81 54       	subi	r24, 0x41	; 65
     f8e:	0e 94 53 05 	call	0xaa6	; 0xaa6 <LCD_send_cmd>
	}
	else{}
	
}
     f92:	0f 90       	pop	r0
     f94:	0f 90       	pop	r0
     f96:	df 91       	pop	r29
     f98:	cf 91       	pop	r28
     f9a:	08 95       	ret

00000f9c <disp_strXY>:

void disp_strXY(u8 row,u8 col,u8* str)
{
     f9c:	cf 93       	push	r28
     f9e:	df 93       	push	r29
     fa0:	00 d0       	rcall	.+0      	; 0xfa2 <disp_strXY+0x6>
     fa2:	00 d0       	rcall	.+0      	; 0xfa4 <disp_strXY+0x8>
     fa4:	cd b7       	in	r28, 0x3d	; 61
     fa6:	de b7       	in	r29, 0x3e	; 62
     fa8:	89 83       	std	Y+1, r24	; 0x01
     faa:	6a 83       	std	Y+2, r22	; 0x02
     fac:	5c 83       	std	Y+4, r21	; 0x04
     fae:	4b 83       	std	Y+3, r20	; 0x03
	LCD_GOTXY(row,col);
     fb0:	6a 81       	ldd	r22, Y+2	; 0x02
     fb2:	89 81       	ldd	r24, Y+1	; 0x01
     fb4:	0e 94 b3 07 	call	0xf66	; 0xf66 <LCD_GOTXY>
	disp_str(str);
     fb8:	8b 81       	ldd	r24, Y+3	; 0x03
     fba:	9c 81       	ldd	r25, Y+4	; 0x04
     fbc:	0e 94 8a 07 	call	0xf14	; 0xf14 <disp_str>
}
     fc0:	0f 90       	pop	r0
     fc2:	0f 90       	pop	r0
     fc4:	0f 90       	pop	r0
     fc6:	0f 90       	pop	r0
     fc8:	df 91       	pop	r29
     fca:	cf 91       	pop	r28
     fcc:	08 95       	ret

00000fce <disp_int>:


void disp_int(u32 intvalue)
{
     fce:	cf 93       	push	r28
     fd0:	df 93       	push	r29
     fd2:	cd b7       	in	r28, 0x3d	; 61
     fd4:	de b7       	in	r29, 0x3e	; 62
     fd6:	2f 97       	sbiw	r28, 0x0f	; 15
     fd8:	0f b6       	in	r0, 0x3f	; 63
     fda:	f8 94       	cli
     fdc:	de bf       	out	0x3e, r29	; 62
     fde:	0f be       	out	0x3f, r0	; 63
     fe0:	cd bf       	out	0x3d, r28	; 61
     fe2:	6c 87       	std	Y+12, r22	; 0x0c
     fe4:	7d 87       	std	Y+13, r23	; 0x0d
     fe6:	8e 87       	std	Y+14, r24	; 0x0e
     fe8:	9f 87       	std	Y+15, r25	; 0x0f
	u8 string[11]={0};
     fea:	2b e0       	ldi	r18, 0x0B	; 11
     fec:	ce 01       	movw	r24, r28
     fee:	01 96       	adiw	r24, 0x01	; 1
     ff0:	fc 01       	movw	r30, r24
     ff2:	32 2f       	mov	r19, r18
     ff4:	11 92       	st	Z+, r1
     ff6:	3a 95       	dec	r19
     ff8:	e9 f7       	brne	.-6      	; 0xff4 <disp_int+0x26>
		sprintf(string,"%u",intvalue);
     ffa:	8f 85       	ldd	r24, Y+15	; 0x0f
     ffc:	8f 93       	push	r24
     ffe:	8e 85       	ldd	r24, Y+14	; 0x0e
    1000:	8f 93       	push	r24
    1002:	8d 85       	ldd	r24, Y+13	; 0x0d
    1004:	8f 93       	push	r24
    1006:	8c 85       	ldd	r24, Y+12	; 0x0c
    1008:	8f 93       	push	r24
    100a:	89 e7       	ldi	r24, 0x79	; 121
    100c:	90 e0       	ldi	r25, 0x00	; 0
    100e:	89 2f       	mov	r24, r25
    1010:	8f 93       	push	r24
    1012:	89 e7       	ldi	r24, 0x79	; 121
    1014:	90 e0       	ldi	r25, 0x00	; 0
    1016:	8f 93       	push	r24
    1018:	ce 01       	movw	r24, r28
    101a:	01 96       	adiw	r24, 0x01	; 1
    101c:	9f 93       	push	r25
    101e:	8f 93       	push	r24
    1020:	0e 94 39 0d 	call	0x1a72	; 0x1a72 <sprintf>
    1024:	8d b7       	in	r24, 0x3d	; 61
    1026:	9e b7       	in	r25, 0x3e	; 62
    1028:	08 96       	adiw	r24, 0x08	; 8
    102a:	0f b6       	in	r0, 0x3f	; 63
    102c:	f8 94       	cli
    102e:	de bf       	out	0x3e, r29	; 62
    1030:	0f be       	out	0x3f, r0	; 63
    1032:	cd bf       	out	0x3d, r28	; 61
		disp_str(string);
    1034:	ce 01       	movw	r24, r28
    1036:	01 96       	adiw	r24, 0x01	; 1
    1038:	0e 94 8a 07 	call	0xf14	; 0xf14 <disp_str>
}
    103c:	2f 96       	adiw	r28, 0x0f	; 15
    103e:	0f b6       	in	r0, 0x3f	; 63
    1040:	f8 94       	cli
    1042:	de bf       	out	0x3e, r29	; 62
    1044:	0f be       	out	0x3f, r0	; 63
    1046:	cd bf       	out	0x3d, r28	; 61
    1048:	df 91       	pop	r29
    104a:	cf 91       	pop	r28
    104c:	08 95       	ret

0000104e <disp_intXY>:
void disp_intXY(u8 row,u8 col,u32 intvalue)
{
    104e:	cf 93       	push	r28
    1050:	df 93       	push	r29
    1052:	00 d0       	rcall	.+0      	; 0x1054 <disp_intXY+0x6>
    1054:	00 d0       	rcall	.+0      	; 0x1056 <disp_intXY+0x8>
    1056:	00 d0       	rcall	.+0      	; 0x1058 <disp_intXY+0xa>
    1058:	cd b7       	in	r28, 0x3d	; 61
    105a:	de b7       	in	r29, 0x3e	; 62
    105c:	89 83       	std	Y+1, r24	; 0x01
    105e:	6a 83       	std	Y+2, r22	; 0x02
    1060:	2b 83       	std	Y+3, r18	; 0x03
    1062:	3c 83       	std	Y+4, r19	; 0x04
    1064:	4d 83       	std	Y+5, r20	; 0x05
    1066:	5e 83       	std	Y+6, r21	; 0x06
	LCD_GOTXY(row,col);
    1068:	6a 81       	ldd	r22, Y+2	; 0x02
    106a:	89 81       	ldd	r24, Y+1	; 0x01
    106c:	0e 94 b3 07 	call	0xf66	; 0xf66 <LCD_GOTXY>
	disp_int(intvalue);
    1070:	8b 81       	ldd	r24, Y+3	; 0x03
    1072:	9c 81       	ldd	r25, Y+4	; 0x04
    1074:	ad 81       	ldd	r26, Y+5	; 0x05
    1076:	be 81       	ldd	r27, Y+6	; 0x06
    1078:	bc 01       	movw	r22, r24
    107a:	cd 01       	movw	r24, r26
    107c:	0e 94 e7 07 	call	0xfce	; 0xfce <disp_int>
}
    1080:	26 96       	adiw	r28, 0x06	; 6
    1082:	0f b6       	in	r0, 0x3f	; 63
    1084:	f8 94       	cli
    1086:	de bf       	out	0x3e, r29	; 62
    1088:	0f be       	out	0x3f, r0	; 63
    108a:	cd bf       	out	0x3d, r28	; 61
    108c:	df 91       	pop	r29
    108e:	cf 91       	pop	r28
    1090:	08 95       	ret

00001092 <INT_init>:
 *  Author: ehab2_phjirwi
 */ 
#include "EXT_INT.h"

void INT_init(u8 int_num , u8 sense_control)
{
    1092:	cf 93       	push	r28
    1094:	df 93       	push	r29
    1096:	00 d0       	rcall	.+0      	; 0x1098 <INT_init+0x6>
    1098:	cd b7       	in	r28, 0x3d	; 61
    109a:	de b7       	in	r29, 0x3e	; 62
    109c:	89 83       	std	Y+1, r24	; 0x01
    109e:	6a 83       	std	Y+2, r22	; 0x02
	GICR|=(1<<int_num);
    10a0:	8b e5       	ldi	r24, 0x5B	; 91
    10a2:	90 e0       	ldi	r25, 0x00	; 0
    10a4:	2b e5       	ldi	r18, 0x5B	; 91
    10a6:	30 e0       	ldi	r19, 0x00	; 0
    10a8:	f9 01       	movw	r30, r18
    10aa:	20 81       	ld	r18, Z
    10ac:	62 2f       	mov	r22, r18
    10ae:	29 81       	ldd	r18, Y+1	; 0x01
    10b0:	42 2f       	mov	r20, r18
    10b2:	50 e0       	ldi	r21, 0x00	; 0
    10b4:	21 e0       	ldi	r18, 0x01	; 1
    10b6:	30 e0       	ldi	r19, 0x00	; 0
    10b8:	02 c0       	rjmp	.+4      	; 0x10be <INT_init+0x2c>
    10ba:	22 0f       	add	r18, r18
    10bc:	33 1f       	adc	r19, r19
    10be:	4a 95       	dec	r20
    10c0:	e2 f7       	brpl	.-8      	; 0x10ba <INT_init+0x28>
    10c2:	26 2b       	or	r18, r22
    10c4:	fc 01       	movw	r30, r24
    10c6:	20 83       	st	Z, r18
	switch(int_num)
    10c8:	89 81       	ldd	r24, Y+1	; 0x01
    10ca:	88 2f       	mov	r24, r24
    10cc:	90 e0       	ldi	r25, 0x00	; 0
    10ce:	86 30       	cpi	r24, 0x06	; 6
    10d0:	91 05       	cpc	r25, r1
    10d2:	f1 f0       	breq	.+60     	; 0x1110 <INT_init+0x7e>
    10d4:	87 30       	cpi	r24, 0x07	; 7
    10d6:	91 05       	cpc	r25, r1
    10d8:	31 f1       	breq	.+76     	; 0x1126 <INT_init+0x94>
    10da:	05 97       	sbiw	r24, 0x05	; 5
    10dc:	a9 f5       	brne	.+106    	; 0x1148 <INT_init+0xb6>
	{
		case INT_2:
		MCUCSR|=((sense_control & 0x01)<<6);
    10de:	84 e5       	ldi	r24, 0x54	; 84
    10e0:	90 e0       	ldi	r25, 0x00	; 0
    10e2:	24 e5       	ldi	r18, 0x54	; 84
    10e4:	30 e0       	ldi	r19, 0x00	; 0
    10e6:	f9 01       	movw	r30, r18
    10e8:	20 81       	ld	r18, Z
    10ea:	42 2f       	mov	r20, r18
    10ec:	2a 81       	ldd	r18, Y+2	; 0x02
    10ee:	22 2f       	mov	r18, r18
    10f0:	30 e0       	ldi	r19, 0x00	; 0
    10f2:	21 70       	andi	r18, 0x01	; 1
    10f4:	33 27       	eor	r19, r19
    10f6:	00 24       	eor	r0, r0
    10f8:	36 95       	lsr	r19
    10fa:	27 95       	ror	r18
    10fc:	07 94       	ror	r0
    10fe:	36 95       	lsr	r19
    1100:	27 95       	ror	r18
    1102:	07 94       	ror	r0
    1104:	32 2f       	mov	r19, r18
    1106:	20 2d       	mov	r18, r0
    1108:	24 2b       	or	r18, r20
    110a:	fc 01       	movw	r30, r24
    110c:	20 83       	st	Z, r18
		break;
    110e:	1c c0       	rjmp	.+56     	; 0x1148 <INT_init+0xb6>
		
		case INT_0:
		MCUCR|=sense_control;
    1110:	85 e5       	ldi	r24, 0x55	; 85
    1112:	90 e0       	ldi	r25, 0x00	; 0
    1114:	25 e5       	ldi	r18, 0x55	; 85
    1116:	30 e0       	ldi	r19, 0x00	; 0
    1118:	f9 01       	movw	r30, r18
    111a:	30 81       	ld	r19, Z
    111c:	2a 81       	ldd	r18, Y+2	; 0x02
    111e:	23 2b       	or	r18, r19
    1120:	fc 01       	movw	r30, r24
    1122:	20 83       	st	Z, r18
		break;
    1124:	11 c0       	rjmp	.+34     	; 0x1148 <INT_init+0xb6>
		case INT_1:
		MCUCR|=(sense_control<<2);
    1126:	85 e5       	ldi	r24, 0x55	; 85
    1128:	90 e0       	ldi	r25, 0x00	; 0
    112a:	25 e5       	ldi	r18, 0x55	; 85
    112c:	30 e0       	ldi	r19, 0x00	; 0
    112e:	f9 01       	movw	r30, r18
    1130:	20 81       	ld	r18, Z
    1132:	42 2f       	mov	r20, r18
    1134:	2a 81       	ldd	r18, Y+2	; 0x02
    1136:	22 2f       	mov	r18, r18
    1138:	30 e0       	ldi	r19, 0x00	; 0
    113a:	22 0f       	add	r18, r18
    113c:	33 1f       	adc	r19, r19
    113e:	22 0f       	add	r18, r18
    1140:	33 1f       	adc	r19, r19
    1142:	24 2b       	or	r18, r20
    1144:	fc 01       	movw	r30, r24
    1146:	20 83       	st	Z, r18
	}
}
    1148:	0f 90       	pop	r0
    114a:	0f 90       	pop	r0
    114c:	df 91       	pop	r29
    114e:	cf 91       	pop	r28
    1150:	08 95       	ret

00001152 <GLOBAL_INT_EN>:

void GLOBAL_INT_EN(void)
{
    1152:	cf 93       	push	r28
    1154:	df 93       	push	r29
    1156:	cd b7       	in	r28, 0x3d	; 61
    1158:	de b7       	in	r29, 0x3e	; 62
	writePins( &SREG,0x80,HIGH );
    115a:	41 e0       	ldi	r20, 0x01	; 1
    115c:	60 e8       	ldi	r22, 0x80	; 128
    115e:	8f e5       	ldi	r24, 0x5F	; 95
    1160:	90 e0       	ldi	r25, 0x00	; 0
    1162:	0e 94 0f 0b 	call	0x161e	; 0x161e <writePins>
}
    1166:	df 91       	pop	r29
    1168:	cf 91       	pop	r28
    116a:	08 95       	ret

0000116c <writePin>:
 *  Author: Mohamed
 */ 
#include "includes.h"

/*for single bit*/
void writePin(u8 pinNo,u8 logic){
    116c:	cf 93       	push	r28
    116e:	df 93       	push	r29
    1170:	00 d0       	rcall	.+0      	; 0x1172 <writePin+0x6>
    1172:	cd b7       	in	r28, 0x3d	; 61
    1174:	de b7       	in	r29, 0x3e	; 62
    1176:	89 83       	std	Y+1, r24	; 0x01
    1178:	6a 83       	std	Y+2, r22	; 0x02
	if((pinNo>=PA0)&&(pinNo<=PA7)){
    117a:	89 81       	ldd	r24, Y+1	; 0x01
    117c:	88 30       	cpi	r24, 0x08	; 8
    117e:	90 f5       	brcc	.+100    	; 0x11e4 <writePin+0x78>
		if(logic==HIGH)
    1180:	8a 81       	ldd	r24, Y+2	; 0x02
    1182:	81 30       	cpi	r24, 0x01	; 1
    1184:	a9 f4       	brne	.+42     	; 0x11b0 <writePin+0x44>
			SETBit(PORTA,(pinNo-PORTA_OFFSET));
    1186:	8b e3       	ldi	r24, 0x3B	; 59
    1188:	90 e0       	ldi	r25, 0x00	; 0
    118a:	2b e3       	ldi	r18, 0x3B	; 59
    118c:	30 e0       	ldi	r19, 0x00	; 0
    118e:	f9 01       	movw	r30, r18
    1190:	20 81       	ld	r18, Z
    1192:	62 2f       	mov	r22, r18
    1194:	29 81       	ldd	r18, Y+1	; 0x01
    1196:	42 2f       	mov	r20, r18
    1198:	50 e0       	ldi	r21, 0x00	; 0
    119a:	21 e0       	ldi	r18, 0x01	; 1
    119c:	30 e0       	ldi	r19, 0x00	; 0
    119e:	02 c0       	rjmp	.+4      	; 0x11a4 <writePin+0x38>
    11a0:	22 0f       	add	r18, r18
    11a2:	33 1f       	adc	r19, r19
    11a4:	4a 95       	dec	r20
    11a6:	e2 f7       	brpl	.-8      	; 0x11a0 <writePin+0x34>
    11a8:	26 2b       	or	r18, r22
    11aa:	fc 01       	movw	r30, r24
    11ac:	20 83       	st	Z, r18
    11ae:	d0 c0       	rjmp	.+416    	; 0x1350 <writePin+0x1e4>
		else if(logic==LOW)
    11b0:	8a 81       	ldd	r24, Y+2	; 0x02
    11b2:	88 23       	and	r24, r24
    11b4:	09 f0       	breq	.+2      	; 0x11b8 <writePin+0x4c>
    11b6:	cc c0       	rjmp	.+408    	; 0x1350 <writePin+0x1e4>
			CLRBit(PORTA,(pinNo-PORTA_OFFSET));
    11b8:	8b e3       	ldi	r24, 0x3B	; 59
    11ba:	90 e0       	ldi	r25, 0x00	; 0
    11bc:	2b e3       	ldi	r18, 0x3B	; 59
    11be:	30 e0       	ldi	r19, 0x00	; 0
    11c0:	f9 01       	movw	r30, r18
    11c2:	20 81       	ld	r18, Z
    11c4:	62 2f       	mov	r22, r18
    11c6:	29 81       	ldd	r18, Y+1	; 0x01
    11c8:	42 2f       	mov	r20, r18
    11ca:	50 e0       	ldi	r21, 0x00	; 0
    11cc:	21 e0       	ldi	r18, 0x01	; 1
    11ce:	30 e0       	ldi	r19, 0x00	; 0
    11d0:	02 c0       	rjmp	.+4      	; 0x11d6 <writePin+0x6a>
    11d2:	22 0f       	add	r18, r18
    11d4:	33 1f       	adc	r19, r19
    11d6:	4a 95       	dec	r20
    11d8:	e2 f7       	brpl	.-8      	; 0x11d2 <writePin+0x66>
    11da:	20 95       	com	r18
    11dc:	26 23       	and	r18, r22
    11de:	fc 01       	movw	r30, r24
    11e0:	20 83       	st	Z, r18
    11e2:	b6 c0       	rjmp	.+364    	; 0x1350 <writePin+0x1e4>
		else{}
}

	else if((pinNo>=PB0)&&(pinNo<=PB7)){
    11e4:	89 81       	ldd	r24, Y+1	; 0x01
    11e6:	88 30       	cpi	r24, 0x08	; 8
    11e8:	d0 f1       	brcs	.+116    	; 0x125e <writePin+0xf2>
    11ea:	89 81       	ldd	r24, Y+1	; 0x01
    11ec:	80 31       	cpi	r24, 0x10	; 16
    11ee:	b8 f5       	brcc	.+110    	; 0x125e <writePin+0xf2>
		if(logic==HIGH)
    11f0:	8a 81       	ldd	r24, Y+2	; 0x02
    11f2:	81 30       	cpi	r24, 0x01	; 1
    11f4:	c1 f4       	brne	.+48     	; 0x1226 <writePin+0xba>
			SETBit(PORTB,(pinNo-PORTB_OFFSET));
    11f6:	88 e3       	ldi	r24, 0x38	; 56
    11f8:	90 e0       	ldi	r25, 0x00	; 0
    11fa:	28 e3       	ldi	r18, 0x38	; 56
    11fc:	30 e0       	ldi	r19, 0x00	; 0
    11fe:	f9 01       	movw	r30, r18
    1200:	20 81       	ld	r18, Z
    1202:	62 2f       	mov	r22, r18
    1204:	29 81       	ldd	r18, Y+1	; 0x01
    1206:	22 2f       	mov	r18, r18
    1208:	30 e0       	ldi	r19, 0x00	; 0
    120a:	a9 01       	movw	r20, r18
    120c:	48 50       	subi	r20, 0x08	; 8
    120e:	51 09       	sbc	r21, r1
    1210:	21 e0       	ldi	r18, 0x01	; 1
    1212:	30 e0       	ldi	r19, 0x00	; 0
    1214:	02 c0       	rjmp	.+4      	; 0x121a <writePin+0xae>
    1216:	22 0f       	add	r18, r18
    1218:	33 1f       	adc	r19, r19
    121a:	4a 95       	dec	r20
    121c:	e2 f7       	brpl	.-8      	; 0x1216 <writePin+0xaa>
    121e:	26 2b       	or	r18, r22
    1220:	fc 01       	movw	r30, r24
    1222:	20 83       	st	Z, r18
    1224:	1b c0       	rjmp	.+54     	; 0x125c <writePin+0xf0>
		else if(logic==LOW)
    1226:	8a 81       	ldd	r24, Y+2	; 0x02
    1228:	88 23       	and	r24, r24
    122a:	c1 f4       	brne	.+48     	; 0x125c <writePin+0xf0>
			CLRBit(PORTB,(pinNo-PORTB_OFFSET));
    122c:	88 e3       	ldi	r24, 0x38	; 56
    122e:	90 e0       	ldi	r25, 0x00	; 0
    1230:	28 e3       	ldi	r18, 0x38	; 56
    1232:	30 e0       	ldi	r19, 0x00	; 0
    1234:	f9 01       	movw	r30, r18
    1236:	20 81       	ld	r18, Z
    1238:	62 2f       	mov	r22, r18
    123a:	29 81       	ldd	r18, Y+1	; 0x01
    123c:	22 2f       	mov	r18, r18
    123e:	30 e0       	ldi	r19, 0x00	; 0
    1240:	a9 01       	movw	r20, r18
    1242:	48 50       	subi	r20, 0x08	; 8
    1244:	51 09       	sbc	r21, r1
    1246:	21 e0       	ldi	r18, 0x01	; 1
    1248:	30 e0       	ldi	r19, 0x00	; 0
    124a:	02 c0       	rjmp	.+4      	; 0x1250 <writePin+0xe4>
    124c:	22 0f       	add	r18, r18
    124e:	33 1f       	adc	r19, r19
    1250:	4a 95       	dec	r20
    1252:	e2 f7       	brpl	.-8      	; 0x124c <writePin+0xe0>
    1254:	20 95       	com	r18
    1256:	26 23       	and	r18, r22
    1258:	fc 01       	movw	r30, r24
    125a:	20 83       	st	Z, r18
			CLRBit(PORTA,(pinNo-PORTA_OFFSET));
		else{}
}

	else if((pinNo>=PB0)&&(pinNo<=PB7)){
		if(logic==HIGH)
    125c:	79 c0       	rjmp	.+242    	; 0x1350 <writePin+0x1e4>
		else if(logic==LOW)
			CLRBit(PORTB,(pinNo-PORTB_OFFSET));
		else{}
	}
	
	else if((pinNo>=PC0)&&(pinNo<=PC7)){
    125e:	89 81       	ldd	r24, Y+1	; 0x01
    1260:	80 31       	cpi	r24, 0x10	; 16
    1262:	d0 f1       	brcs	.+116    	; 0x12d8 <writePin+0x16c>
    1264:	89 81       	ldd	r24, Y+1	; 0x01
    1266:	88 31       	cpi	r24, 0x18	; 24
    1268:	b8 f5       	brcc	.+110    	; 0x12d8 <writePin+0x16c>
		if(logic==HIGH)
    126a:	8a 81       	ldd	r24, Y+2	; 0x02
    126c:	81 30       	cpi	r24, 0x01	; 1
    126e:	c1 f4       	brne	.+48     	; 0x12a0 <writePin+0x134>
			SETBit(PORTC,(pinNo-PORTC_OFFSET));
    1270:	85 e3       	ldi	r24, 0x35	; 53
    1272:	90 e0       	ldi	r25, 0x00	; 0
    1274:	25 e3       	ldi	r18, 0x35	; 53
    1276:	30 e0       	ldi	r19, 0x00	; 0
    1278:	f9 01       	movw	r30, r18
    127a:	20 81       	ld	r18, Z
    127c:	62 2f       	mov	r22, r18
    127e:	29 81       	ldd	r18, Y+1	; 0x01
    1280:	22 2f       	mov	r18, r18
    1282:	30 e0       	ldi	r19, 0x00	; 0
    1284:	a9 01       	movw	r20, r18
    1286:	40 51       	subi	r20, 0x10	; 16
    1288:	51 09       	sbc	r21, r1
    128a:	21 e0       	ldi	r18, 0x01	; 1
    128c:	30 e0       	ldi	r19, 0x00	; 0
    128e:	02 c0       	rjmp	.+4      	; 0x1294 <writePin+0x128>
    1290:	22 0f       	add	r18, r18
    1292:	33 1f       	adc	r19, r19
    1294:	4a 95       	dec	r20
    1296:	e2 f7       	brpl	.-8      	; 0x1290 <writePin+0x124>
    1298:	26 2b       	or	r18, r22
    129a:	fc 01       	movw	r30, r24
    129c:	20 83       	st	Z, r18
    129e:	1b c0       	rjmp	.+54     	; 0x12d6 <writePin+0x16a>
		else if(logic==LOW)
    12a0:	8a 81       	ldd	r24, Y+2	; 0x02
    12a2:	88 23       	and	r24, r24
    12a4:	c1 f4       	brne	.+48     	; 0x12d6 <writePin+0x16a>
			CLRBit(PORTC,(pinNo-PORTC_OFFSET));
    12a6:	85 e3       	ldi	r24, 0x35	; 53
    12a8:	90 e0       	ldi	r25, 0x00	; 0
    12aa:	25 e3       	ldi	r18, 0x35	; 53
    12ac:	30 e0       	ldi	r19, 0x00	; 0
    12ae:	f9 01       	movw	r30, r18
    12b0:	20 81       	ld	r18, Z
    12b2:	62 2f       	mov	r22, r18
    12b4:	29 81       	ldd	r18, Y+1	; 0x01
    12b6:	22 2f       	mov	r18, r18
    12b8:	30 e0       	ldi	r19, 0x00	; 0
    12ba:	a9 01       	movw	r20, r18
    12bc:	40 51       	subi	r20, 0x10	; 16
    12be:	51 09       	sbc	r21, r1
    12c0:	21 e0       	ldi	r18, 0x01	; 1
    12c2:	30 e0       	ldi	r19, 0x00	; 0
    12c4:	02 c0       	rjmp	.+4      	; 0x12ca <writePin+0x15e>
    12c6:	22 0f       	add	r18, r18
    12c8:	33 1f       	adc	r19, r19
    12ca:	4a 95       	dec	r20
    12cc:	e2 f7       	brpl	.-8      	; 0x12c6 <writePin+0x15a>
    12ce:	20 95       	com	r18
    12d0:	26 23       	and	r18, r22
    12d2:	fc 01       	movw	r30, r24
    12d4:	20 83       	st	Z, r18
			CLRBit(PORTB,(pinNo-PORTB_OFFSET));
		else{}
	}
	
	else if((pinNo>=PC0)&&(pinNo<=PC7)){
		if(logic==HIGH)
    12d6:	3c c0       	rjmp	.+120    	; 0x1350 <writePin+0x1e4>
		else if(logic==LOW)
			CLRBit(PORTC,(pinNo-PORTC_OFFSET));
		else{}
	}
	
	else if((pinNo>=PD0)&&(pinNo<=PD7)){
    12d8:	89 81       	ldd	r24, Y+1	; 0x01
    12da:	88 31       	cpi	r24, 0x18	; 24
    12dc:	c8 f1       	brcs	.+114    	; 0x1350 <writePin+0x1e4>
    12de:	89 81       	ldd	r24, Y+1	; 0x01
    12e0:	80 32       	cpi	r24, 0x20	; 32
    12e2:	b0 f5       	brcc	.+108    	; 0x1350 <writePin+0x1e4>
		if(logic==HIGH)
    12e4:	8a 81       	ldd	r24, Y+2	; 0x02
    12e6:	81 30       	cpi	r24, 0x01	; 1
    12e8:	c1 f4       	brne	.+48     	; 0x131a <writePin+0x1ae>
			SETBit(PORTD,(pinNo-PORTD_OFFSET));
    12ea:	82 e3       	ldi	r24, 0x32	; 50
    12ec:	90 e0       	ldi	r25, 0x00	; 0
    12ee:	22 e3       	ldi	r18, 0x32	; 50
    12f0:	30 e0       	ldi	r19, 0x00	; 0
    12f2:	f9 01       	movw	r30, r18
    12f4:	20 81       	ld	r18, Z
    12f6:	62 2f       	mov	r22, r18
    12f8:	29 81       	ldd	r18, Y+1	; 0x01
    12fa:	22 2f       	mov	r18, r18
    12fc:	30 e0       	ldi	r19, 0x00	; 0
    12fe:	a9 01       	movw	r20, r18
    1300:	48 51       	subi	r20, 0x18	; 24
    1302:	51 09       	sbc	r21, r1
    1304:	21 e0       	ldi	r18, 0x01	; 1
    1306:	30 e0       	ldi	r19, 0x00	; 0
    1308:	02 c0       	rjmp	.+4      	; 0x130e <writePin+0x1a2>
    130a:	22 0f       	add	r18, r18
    130c:	33 1f       	adc	r19, r19
    130e:	4a 95       	dec	r20
    1310:	e2 f7       	brpl	.-8      	; 0x130a <writePin+0x19e>
    1312:	26 2b       	or	r18, r22
    1314:	fc 01       	movw	r30, r24
    1316:	20 83       	st	Z, r18
    1318:	1b c0       	rjmp	.+54     	; 0x1350 <writePin+0x1e4>
		else if(logic==LOW)
    131a:	8a 81       	ldd	r24, Y+2	; 0x02
    131c:	88 23       	and	r24, r24
    131e:	c1 f4       	brne	.+48     	; 0x1350 <writePin+0x1e4>
			CLRBit(PORTD,(pinNo-PORTD_OFFSET));
    1320:	82 e3       	ldi	r24, 0x32	; 50
    1322:	90 e0       	ldi	r25, 0x00	; 0
    1324:	22 e3       	ldi	r18, 0x32	; 50
    1326:	30 e0       	ldi	r19, 0x00	; 0
    1328:	f9 01       	movw	r30, r18
    132a:	20 81       	ld	r18, Z
    132c:	62 2f       	mov	r22, r18
    132e:	29 81       	ldd	r18, Y+1	; 0x01
    1330:	22 2f       	mov	r18, r18
    1332:	30 e0       	ldi	r19, 0x00	; 0
    1334:	a9 01       	movw	r20, r18
    1336:	48 51       	subi	r20, 0x18	; 24
    1338:	51 09       	sbc	r21, r1
    133a:	21 e0       	ldi	r18, 0x01	; 1
    133c:	30 e0       	ldi	r19, 0x00	; 0
    133e:	02 c0       	rjmp	.+4      	; 0x1344 <writePin+0x1d8>
    1340:	22 0f       	add	r18, r18
    1342:	33 1f       	adc	r19, r19
    1344:	4a 95       	dec	r20
    1346:	e2 f7       	brpl	.-8      	; 0x1340 <writePin+0x1d4>
    1348:	20 95       	com	r18
    134a:	26 23       	and	r18, r22
    134c:	fc 01       	movw	r30, r24
    134e:	20 83       	st	Z, r18
		else{}
	}
	else{}
}
    1350:	0f 90       	pop	r0
    1352:	0f 90       	pop	r0
    1354:	df 91       	pop	r29
    1356:	cf 91       	pop	r28
    1358:	08 95       	ret

0000135a <pinDirection>:
void pinDirection(u8 pinNo, u8 direction){
    135a:	cf 93       	push	r28
    135c:	df 93       	push	r29
    135e:	00 d0       	rcall	.+0      	; 0x1360 <pinDirection+0x6>
    1360:	cd b7       	in	r28, 0x3d	; 61
    1362:	de b7       	in	r29, 0x3e	; 62
    1364:	89 83       	std	Y+1, r24	; 0x01
    1366:	6a 83       	std	Y+2, r22	; 0x02
	if((pinNo >= PA0) && (pinNo <= PA7)){
    1368:	89 81       	ldd	r24, Y+1	; 0x01
    136a:	88 30       	cpi	r24, 0x08	; 8
    136c:	90 f5       	brcc	.+100    	; 0x13d2 <pinDirection+0x78>
		if(direction == OUTPUT)
    136e:	8a 81       	ldd	r24, Y+2	; 0x02
    1370:	81 30       	cpi	r24, 0x01	; 1
    1372:	a9 f4       	brne	.+42     	; 0x139e <pinDirection+0x44>
			SETBit(DDRA,(pinNo-PORTA_OFFSET));
    1374:	8a e3       	ldi	r24, 0x3A	; 58
    1376:	90 e0       	ldi	r25, 0x00	; 0
    1378:	2a e3       	ldi	r18, 0x3A	; 58
    137a:	30 e0       	ldi	r19, 0x00	; 0
    137c:	f9 01       	movw	r30, r18
    137e:	20 81       	ld	r18, Z
    1380:	62 2f       	mov	r22, r18
    1382:	29 81       	ldd	r18, Y+1	; 0x01
    1384:	42 2f       	mov	r20, r18
    1386:	50 e0       	ldi	r21, 0x00	; 0
    1388:	21 e0       	ldi	r18, 0x01	; 1
    138a:	30 e0       	ldi	r19, 0x00	; 0
    138c:	02 c0       	rjmp	.+4      	; 0x1392 <pinDirection+0x38>
    138e:	22 0f       	add	r18, r18
    1390:	33 1f       	adc	r19, r19
    1392:	4a 95       	dec	r20
    1394:	e2 f7       	brpl	.-8      	; 0x138e <pinDirection+0x34>
    1396:	26 2b       	or	r18, r22
    1398:	fc 01       	movw	r30, r24
    139a:	20 83       	st	Z, r18
    139c:	d0 c0       	rjmp	.+416    	; 0x153e <pinDirection+0x1e4>
		else if(direction == INPUT)
    139e:	8a 81       	ldd	r24, Y+2	; 0x02
    13a0:	88 23       	and	r24, r24
    13a2:	09 f0       	breq	.+2      	; 0x13a6 <pinDirection+0x4c>
    13a4:	cc c0       	rjmp	.+408    	; 0x153e <pinDirection+0x1e4>
			CLRBit(DDRA,(pinNo-PORTA_OFFSET));
    13a6:	8a e3       	ldi	r24, 0x3A	; 58
    13a8:	90 e0       	ldi	r25, 0x00	; 0
    13aa:	2a e3       	ldi	r18, 0x3A	; 58
    13ac:	30 e0       	ldi	r19, 0x00	; 0
    13ae:	f9 01       	movw	r30, r18
    13b0:	20 81       	ld	r18, Z
    13b2:	62 2f       	mov	r22, r18
    13b4:	29 81       	ldd	r18, Y+1	; 0x01
    13b6:	42 2f       	mov	r20, r18
    13b8:	50 e0       	ldi	r21, 0x00	; 0
    13ba:	21 e0       	ldi	r18, 0x01	; 1
    13bc:	30 e0       	ldi	r19, 0x00	; 0
    13be:	02 c0       	rjmp	.+4      	; 0x13c4 <pinDirection+0x6a>
    13c0:	22 0f       	add	r18, r18
    13c2:	33 1f       	adc	r19, r19
    13c4:	4a 95       	dec	r20
    13c6:	e2 f7       	brpl	.-8      	; 0x13c0 <pinDirection+0x66>
    13c8:	20 95       	com	r18
    13ca:	26 23       	and	r18, r22
    13cc:	fc 01       	movw	r30, r24
    13ce:	20 83       	st	Z, r18
    13d0:	b6 c0       	rjmp	.+364    	; 0x153e <pinDirection+0x1e4>
		else{}
	}
	else if((pinNo >= PB0) && (pinNo <= PB7)){
    13d2:	89 81       	ldd	r24, Y+1	; 0x01
    13d4:	88 30       	cpi	r24, 0x08	; 8
    13d6:	d0 f1       	brcs	.+116    	; 0x144c <pinDirection+0xf2>
    13d8:	89 81       	ldd	r24, Y+1	; 0x01
    13da:	80 31       	cpi	r24, 0x10	; 16
    13dc:	b8 f5       	brcc	.+110    	; 0x144c <pinDirection+0xf2>
		if(direction == OUTPUT)
    13de:	8a 81       	ldd	r24, Y+2	; 0x02
    13e0:	81 30       	cpi	r24, 0x01	; 1
    13e2:	c1 f4       	brne	.+48     	; 0x1414 <pinDirection+0xba>
			SETBit(DDRB,(pinNo-PORTB_OFFSET));
    13e4:	87 e3       	ldi	r24, 0x37	; 55
    13e6:	90 e0       	ldi	r25, 0x00	; 0
    13e8:	27 e3       	ldi	r18, 0x37	; 55
    13ea:	30 e0       	ldi	r19, 0x00	; 0
    13ec:	f9 01       	movw	r30, r18
    13ee:	20 81       	ld	r18, Z
    13f0:	62 2f       	mov	r22, r18
    13f2:	29 81       	ldd	r18, Y+1	; 0x01
    13f4:	22 2f       	mov	r18, r18
    13f6:	30 e0       	ldi	r19, 0x00	; 0
    13f8:	a9 01       	movw	r20, r18
    13fa:	48 50       	subi	r20, 0x08	; 8
    13fc:	51 09       	sbc	r21, r1
    13fe:	21 e0       	ldi	r18, 0x01	; 1
    1400:	30 e0       	ldi	r19, 0x00	; 0
    1402:	02 c0       	rjmp	.+4      	; 0x1408 <pinDirection+0xae>
    1404:	22 0f       	add	r18, r18
    1406:	33 1f       	adc	r19, r19
    1408:	4a 95       	dec	r20
    140a:	e2 f7       	brpl	.-8      	; 0x1404 <pinDirection+0xaa>
    140c:	26 2b       	or	r18, r22
    140e:	fc 01       	movw	r30, r24
    1410:	20 83       	st	Z, r18
    1412:	1b c0       	rjmp	.+54     	; 0x144a <pinDirection+0xf0>
		else if(direction == LOW)
    1414:	8a 81       	ldd	r24, Y+2	; 0x02
    1416:	88 23       	and	r24, r24
    1418:	c1 f4       	brne	.+48     	; 0x144a <pinDirection+0xf0>
			CLRBit(DDRB,(pinNo-PORTB_OFFSET));
    141a:	87 e3       	ldi	r24, 0x37	; 55
    141c:	90 e0       	ldi	r25, 0x00	; 0
    141e:	27 e3       	ldi	r18, 0x37	; 55
    1420:	30 e0       	ldi	r19, 0x00	; 0
    1422:	f9 01       	movw	r30, r18
    1424:	20 81       	ld	r18, Z
    1426:	62 2f       	mov	r22, r18
    1428:	29 81       	ldd	r18, Y+1	; 0x01
    142a:	22 2f       	mov	r18, r18
    142c:	30 e0       	ldi	r19, 0x00	; 0
    142e:	a9 01       	movw	r20, r18
    1430:	48 50       	subi	r20, 0x08	; 8
    1432:	51 09       	sbc	r21, r1
    1434:	21 e0       	ldi	r18, 0x01	; 1
    1436:	30 e0       	ldi	r19, 0x00	; 0
    1438:	02 c0       	rjmp	.+4      	; 0x143e <pinDirection+0xe4>
    143a:	22 0f       	add	r18, r18
    143c:	33 1f       	adc	r19, r19
    143e:	4a 95       	dec	r20
    1440:	e2 f7       	brpl	.-8      	; 0x143a <pinDirection+0xe0>
    1442:	20 95       	com	r18
    1444:	26 23       	and	r18, r22
    1446:	fc 01       	movw	r30, r24
    1448:	20 83       	st	Z, r18
		else if(direction == INPUT)
			CLRBit(DDRA,(pinNo-PORTA_OFFSET));
		else{}
	}
	else if((pinNo >= PB0) && (pinNo <= PB7)){
		if(direction == OUTPUT)
    144a:	79 c0       	rjmp	.+242    	; 0x153e <pinDirection+0x1e4>
			SETBit(DDRB,(pinNo-PORTB_OFFSET));
		else if(direction == LOW)
			CLRBit(DDRB,(pinNo-PORTB_OFFSET));
		else{}
	}
	else if((pinNo >= PC0) && (pinNo <= PC7)){
    144c:	89 81       	ldd	r24, Y+1	; 0x01
    144e:	80 31       	cpi	r24, 0x10	; 16
    1450:	d0 f1       	brcs	.+116    	; 0x14c6 <pinDirection+0x16c>
    1452:	89 81       	ldd	r24, Y+1	; 0x01
    1454:	88 31       	cpi	r24, 0x18	; 24
    1456:	b8 f5       	brcc	.+110    	; 0x14c6 <pinDirection+0x16c>
		if(direction == OUTPUT)
    1458:	8a 81       	ldd	r24, Y+2	; 0x02
    145a:	81 30       	cpi	r24, 0x01	; 1
    145c:	c1 f4       	brne	.+48     	; 0x148e <pinDirection+0x134>
			SETBit(DDRC,(pinNo-PORTC_OFFSET));
    145e:	84 e3       	ldi	r24, 0x34	; 52
    1460:	90 e0       	ldi	r25, 0x00	; 0
    1462:	24 e3       	ldi	r18, 0x34	; 52
    1464:	30 e0       	ldi	r19, 0x00	; 0
    1466:	f9 01       	movw	r30, r18
    1468:	20 81       	ld	r18, Z
    146a:	62 2f       	mov	r22, r18
    146c:	29 81       	ldd	r18, Y+1	; 0x01
    146e:	22 2f       	mov	r18, r18
    1470:	30 e0       	ldi	r19, 0x00	; 0
    1472:	a9 01       	movw	r20, r18
    1474:	40 51       	subi	r20, 0x10	; 16
    1476:	51 09       	sbc	r21, r1
    1478:	21 e0       	ldi	r18, 0x01	; 1
    147a:	30 e0       	ldi	r19, 0x00	; 0
    147c:	02 c0       	rjmp	.+4      	; 0x1482 <pinDirection+0x128>
    147e:	22 0f       	add	r18, r18
    1480:	33 1f       	adc	r19, r19
    1482:	4a 95       	dec	r20
    1484:	e2 f7       	brpl	.-8      	; 0x147e <pinDirection+0x124>
    1486:	26 2b       	or	r18, r22
    1488:	fc 01       	movw	r30, r24
    148a:	20 83       	st	Z, r18
    148c:	1b c0       	rjmp	.+54     	; 0x14c4 <pinDirection+0x16a>
		else if(direction==INPUT)
    148e:	8a 81       	ldd	r24, Y+2	; 0x02
    1490:	88 23       	and	r24, r24
    1492:	c1 f4       	brne	.+48     	; 0x14c4 <pinDirection+0x16a>
			CLRBit(DDRC,(pinNo-PORTC_OFFSET));
    1494:	84 e3       	ldi	r24, 0x34	; 52
    1496:	90 e0       	ldi	r25, 0x00	; 0
    1498:	24 e3       	ldi	r18, 0x34	; 52
    149a:	30 e0       	ldi	r19, 0x00	; 0
    149c:	f9 01       	movw	r30, r18
    149e:	20 81       	ld	r18, Z
    14a0:	62 2f       	mov	r22, r18
    14a2:	29 81       	ldd	r18, Y+1	; 0x01
    14a4:	22 2f       	mov	r18, r18
    14a6:	30 e0       	ldi	r19, 0x00	; 0
    14a8:	a9 01       	movw	r20, r18
    14aa:	40 51       	subi	r20, 0x10	; 16
    14ac:	51 09       	sbc	r21, r1
    14ae:	21 e0       	ldi	r18, 0x01	; 1
    14b0:	30 e0       	ldi	r19, 0x00	; 0
    14b2:	02 c0       	rjmp	.+4      	; 0x14b8 <pinDirection+0x15e>
    14b4:	22 0f       	add	r18, r18
    14b6:	33 1f       	adc	r19, r19
    14b8:	4a 95       	dec	r20
    14ba:	e2 f7       	brpl	.-8      	; 0x14b4 <pinDirection+0x15a>
    14bc:	20 95       	com	r18
    14be:	26 23       	and	r18, r22
    14c0:	fc 01       	movw	r30, r24
    14c2:	20 83       	st	Z, r18
		else if(direction == LOW)
			CLRBit(DDRB,(pinNo-PORTB_OFFSET));
		else{}
	}
	else if((pinNo >= PC0) && (pinNo <= PC7)){
		if(direction == OUTPUT)
    14c4:	3c c0       	rjmp	.+120    	; 0x153e <pinDirection+0x1e4>
			SETBit(DDRC,(pinNo-PORTC_OFFSET));
		else if(direction==INPUT)
			CLRBit(DDRC,(pinNo-PORTC_OFFSET));
		else{}
	}
	else if((pinNo >= PD0) && (pinNo <= PD7)){
    14c6:	89 81       	ldd	r24, Y+1	; 0x01
    14c8:	88 31       	cpi	r24, 0x18	; 24
    14ca:	c8 f1       	brcs	.+114    	; 0x153e <pinDirection+0x1e4>
    14cc:	89 81       	ldd	r24, Y+1	; 0x01
    14ce:	80 32       	cpi	r24, 0x20	; 32
    14d0:	b0 f5       	brcc	.+108    	; 0x153e <pinDirection+0x1e4>
		if(direction == OUTPUT)
    14d2:	8a 81       	ldd	r24, Y+2	; 0x02
    14d4:	81 30       	cpi	r24, 0x01	; 1
    14d6:	c1 f4       	brne	.+48     	; 0x1508 <pinDirection+0x1ae>
			SETBit(DDRD,(pinNo-PORTD_OFFSET));
    14d8:	81 e3       	ldi	r24, 0x31	; 49
    14da:	90 e0       	ldi	r25, 0x00	; 0
    14dc:	21 e3       	ldi	r18, 0x31	; 49
    14de:	30 e0       	ldi	r19, 0x00	; 0
    14e0:	f9 01       	movw	r30, r18
    14e2:	20 81       	ld	r18, Z
    14e4:	62 2f       	mov	r22, r18
    14e6:	29 81       	ldd	r18, Y+1	; 0x01
    14e8:	22 2f       	mov	r18, r18
    14ea:	30 e0       	ldi	r19, 0x00	; 0
    14ec:	a9 01       	movw	r20, r18
    14ee:	48 51       	subi	r20, 0x18	; 24
    14f0:	51 09       	sbc	r21, r1
    14f2:	21 e0       	ldi	r18, 0x01	; 1
    14f4:	30 e0       	ldi	r19, 0x00	; 0
    14f6:	02 c0       	rjmp	.+4      	; 0x14fc <pinDirection+0x1a2>
    14f8:	22 0f       	add	r18, r18
    14fa:	33 1f       	adc	r19, r19
    14fc:	4a 95       	dec	r20
    14fe:	e2 f7       	brpl	.-8      	; 0x14f8 <pinDirection+0x19e>
    1500:	26 2b       	or	r18, r22
    1502:	fc 01       	movw	r30, r24
    1504:	20 83       	st	Z, r18
    1506:	1b c0       	rjmp	.+54     	; 0x153e <pinDirection+0x1e4>
		else if(direction == INPUT)
    1508:	8a 81       	ldd	r24, Y+2	; 0x02
    150a:	88 23       	and	r24, r24
    150c:	c1 f4       	brne	.+48     	; 0x153e <pinDirection+0x1e4>
			CLRBit(DDRD,(pinNo-PORTD_OFFSET));
    150e:	81 e3       	ldi	r24, 0x31	; 49
    1510:	90 e0       	ldi	r25, 0x00	; 0
    1512:	21 e3       	ldi	r18, 0x31	; 49
    1514:	30 e0       	ldi	r19, 0x00	; 0
    1516:	f9 01       	movw	r30, r18
    1518:	20 81       	ld	r18, Z
    151a:	62 2f       	mov	r22, r18
    151c:	29 81       	ldd	r18, Y+1	; 0x01
    151e:	22 2f       	mov	r18, r18
    1520:	30 e0       	ldi	r19, 0x00	; 0
    1522:	a9 01       	movw	r20, r18
    1524:	48 51       	subi	r20, 0x18	; 24
    1526:	51 09       	sbc	r21, r1
    1528:	21 e0       	ldi	r18, 0x01	; 1
    152a:	30 e0       	ldi	r19, 0x00	; 0
    152c:	02 c0       	rjmp	.+4      	; 0x1532 <pinDirection+0x1d8>
    152e:	22 0f       	add	r18, r18
    1530:	33 1f       	adc	r19, r19
    1532:	4a 95       	dec	r20
    1534:	e2 f7       	brpl	.-8      	; 0x152e <pinDirection+0x1d4>
    1536:	20 95       	com	r18
    1538:	26 23       	and	r18, r22
    153a:	fc 01       	movw	r30, r24
    153c:	20 83       	st	Z, r18
		else{}
	}
	else{}
}
    153e:	0f 90       	pop	r0
    1540:	0f 90       	pop	r0
    1542:	df 91       	pop	r29
    1544:	cf 91       	pop	r28
    1546:	08 95       	ret

00001548 <readPin>:

u8 readPin(u8 pinNo){
    1548:	cf 93       	push	r28
    154a:	df 93       	push	r29
    154c:	00 d0       	rcall	.+0      	; 0x154e <readPin+0x6>
    154e:	cd b7       	in	r28, 0x3d	; 61
    1550:	de b7       	in	r29, 0x3e	; 62
    1552:	8a 83       	std	Y+2, r24	; 0x02
	u8 result=0;
    1554:	19 82       	std	Y+1, r1	; 0x01
	if((pinNo>=PA0)&&(pinNo<=PA7))
    1556:	8a 81       	ldd	r24, Y+2	; 0x02
    1558:	88 30       	cpi	r24, 0x08	; 8
    155a:	88 f4       	brcc	.+34     	; 0x157e <readPin+0x36>
		result=GETBit(PINA,(pinNo-PORTA_OFFSET));
    155c:	89 e3       	ldi	r24, 0x39	; 57
    155e:	90 e0       	ldi	r25, 0x00	; 0
    1560:	fc 01       	movw	r30, r24
    1562:	80 81       	ld	r24, Z
    1564:	88 2f       	mov	r24, r24
    1566:	90 e0       	ldi	r25, 0x00	; 0
    1568:	2a 81       	ldd	r18, Y+2	; 0x02
    156a:	22 2f       	mov	r18, r18
    156c:	30 e0       	ldi	r19, 0x00	; 0
    156e:	02 c0       	rjmp	.+4      	; 0x1574 <readPin+0x2c>
    1570:	95 95       	asr	r25
    1572:	87 95       	ror	r24
    1574:	2a 95       	dec	r18
    1576:	e2 f7       	brpl	.-8      	; 0x1570 <readPin+0x28>
    1578:	81 70       	andi	r24, 0x01	; 1
    157a:	89 83       	std	Y+1, r24	; 0x01
    157c:	4a c0       	rjmp	.+148    	; 0x1612 <readPin+0xca>
	else if((pinNo>=PB0)&&(pinNo<=PB7))
    157e:	8a 81       	ldd	r24, Y+2	; 0x02
    1580:	88 30       	cpi	r24, 0x08	; 8
    1582:	b0 f0       	brcs	.+44     	; 0x15b0 <readPin+0x68>
    1584:	8a 81       	ldd	r24, Y+2	; 0x02
    1586:	80 31       	cpi	r24, 0x10	; 16
    1588:	98 f4       	brcc	.+38     	; 0x15b0 <readPin+0x68>
		result=GETBit(PINB,(pinNo-PORTB_OFFSET));
    158a:	86 e3       	ldi	r24, 0x36	; 54
    158c:	90 e0       	ldi	r25, 0x00	; 0
    158e:	fc 01       	movw	r30, r24
    1590:	80 81       	ld	r24, Z
    1592:	88 2f       	mov	r24, r24
    1594:	90 e0       	ldi	r25, 0x00	; 0
    1596:	2a 81       	ldd	r18, Y+2	; 0x02
    1598:	22 2f       	mov	r18, r18
    159a:	30 e0       	ldi	r19, 0x00	; 0
    159c:	28 50       	subi	r18, 0x08	; 8
    159e:	31 09       	sbc	r19, r1
    15a0:	02 c0       	rjmp	.+4      	; 0x15a6 <readPin+0x5e>
    15a2:	95 95       	asr	r25
    15a4:	87 95       	ror	r24
    15a6:	2a 95       	dec	r18
    15a8:	e2 f7       	brpl	.-8      	; 0x15a2 <readPin+0x5a>
    15aa:	81 70       	andi	r24, 0x01	; 1
    15ac:	89 83       	std	Y+1, r24	; 0x01
    15ae:	31 c0       	rjmp	.+98     	; 0x1612 <readPin+0xca>
	else if((pinNo>=PC0)&&(pinNo<=PC7))
    15b0:	8a 81       	ldd	r24, Y+2	; 0x02
    15b2:	80 31       	cpi	r24, 0x10	; 16
    15b4:	b0 f0       	brcs	.+44     	; 0x15e2 <readPin+0x9a>
    15b6:	8a 81       	ldd	r24, Y+2	; 0x02
    15b8:	88 31       	cpi	r24, 0x18	; 24
    15ba:	98 f4       	brcc	.+38     	; 0x15e2 <readPin+0x9a>
		result=GETBit(PINC,(pinNo-PORTC_OFFSET));
    15bc:	83 e3       	ldi	r24, 0x33	; 51
    15be:	90 e0       	ldi	r25, 0x00	; 0
    15c0:	fc 01       	movw	r30, r24
    15c2:	80 81       	ld	r24, Z
    15c4:	88 2f       	mov	r24, r24
    15c6:	90 e0       	ldi	r25, 0x00	; 0
    15c8:	2a 81       	ldd	r18, Y+2	; 0x02
    15ca:	22 2f       	mov	r18, r18
    15cc:	30 e0       	ldi	r19, 0x00	; 0
    15ce:	20 51       	subi	r18, 0x10	; 16
    15d0:	31 09       	sbc	r19, r1
    15d2:	02 c0       	rjmp	.+4      	; 0x15d8 <readPin+0x90>
    15d4:	95 95       	asr	r25
    15d6:	87 95       	ror	r24
    15d8:	2a 95       	dec	r18
    15da:	e2 f7       	brpl	.-8      	; 0x15d4 <readPin+0x8c>
    15dc:	81 70       	andi	r24, 0x01	; 1
    15de:	89 83       	std	Y+1, r24	; 0x01
    15e0:	18 c0       	rjmp	.+48     	; 0x1612 <readPin+0xca>
	else if((pinNo>=PD0)&&(pinNo<=PD7))
    15e2:	8a 81       	ldd	r24, Y+2	; 0x02
    15e4:	88 31       	cpi	r24, 0x18	; 24
    15e6:	a8 f0       	brcs	.+42     	; 0x1612 <readPin+0xca>
    15e8:	8a 81       	ldd	r24, Y+2	; 0x02
    15ea:	80 32       	cpi	r24, 0x20	; 32
    15ec:	90 f4       	brcc	.+36     	; 0x1612 <readPin+0xca>
		result=GETBit(PIND,(pinNo-PORTD_OFFSET));
    15ee:	80 e3       	ldi	r24, 0x30	; 48
    15f0:	90 e0       	ldi	r25, 0x00	; 0
    15f2:	fc 01       	movw	r30, r24
    15f4:	80 81       	ld	r24, Z
    15f6:	88 2f       	mov	r24, r24
    15f8:	90 e0       	ldi	r25, 0x00	; 0
    15fa:	2a 81       	ldd	r18, Y+2	; 0x02
    15fc:	22 2f       	mov	r18, r18
    15fe:	30 e0       	ldi	r19, 0x00	; 0
    1600:	28 51       	subi	r18, 0x18	; 24
    1602:	31 09       	sbc	r19, r1
    1604:	02 c0       	rjmp	.+4      	; 0x160a <readPin+0xc2>
    1606:	95 95       	asr	r25
    1608:	87 95       	ror	r24
    160a:	2a 95       	dec	r18
    160c:	e2 f7       	brpl	.-8      	; 0x1606 <readPin+0xbe>
    160e:	81 70       	andi	r24, 0x01	; 1
    1610:	89 83       	std	Y+1, r24	; 0x01
	else{}
	return result;
    1612:	89 81       	ldd	r24, Y+1	; 0x01
}
    1614:	0f 90       	pop	r0
    1616:	0f 90       	pop	r0
    1618:	df 91       	pop	r29
    161a:	cf 91       	pop	r28
    161c:	08 95       	ret

0000161e <writePins>:
	
/*for custom number of bits*/
void writePins(volatile u8* port, u8 mask, u8 logic){
    161e:	cf 93       	push	r28
    1620:	df 93       	push	r29
    1622:	00 d0       	rcall	.+0      	; 0x1624 <writePins+0x6>
    1624:	00 d0       	rcall	.+0      	; 0x1626 <writePins+0x8>
    1626:	cd b7       	in	r28, 0x3d	; 61
    1628:	de b7       	in	r29, 0x3e	; 62
    162a:	9a 83       	std	Y+2, r25	; 0x02
    162c:	89 83       	std	Y+1, r24	; 0x01
    162e:	6b 83       	std	Y+3, r22	; 0x03
    1630:	4c 83       	std	Y+4, r20	; 0x04
	if(logic==HIGH)
    1632:	8c 81       	ldd	r24, Y+4	; 0x04
    1634:	81 30       	cpi	r24, 0x01	; 1
    1636:	61 f4       	brne	.+24     	; 0x1650 <writePins+0x32>
		SETBits(*port,mask);
    1638:	89 81       	ldd	r24, Y+1	; 0x01
    163a:	9a 81       	ldd	r25, Y+2	; 0x02
    163c:	fc 01       	movw	r30, r24
    163e:	90 81       	ld	r25, Z
    1640:	8b 81       	ldd	r24, Y+3	; 0x03
    1642:	29 2f       	mov	r18, r25
    1644:	28 2b       	or	r18, r24
    1646:	89 81       	ldd	r24, Y+1	; 0x01
    1648:	9a 81       	ldd	r25, Y+2	; 0x02
    164a:	fc 01       	movw	r30, r24
    164c:	20 83       	st	Z, r18
    164e:	10 c0       	rjmp	.+32     	; 0x1670 <writePins+0x52>
	else if(logic==LOW)
    1650:	8c 81       	ldd	r24, Y+4	; 0x04
    1652:	88 23       	and	r24, r24
    1654:	69 f4       	brne	.+26     	; 0x1670 <writePins+0x52>
		CLRBits(*port,mask);
    1656:	89 81       	ldd	r24, Y+1	; 0x01
    1658:	9a 81       	ldd	r25, Y+2	; 0x02
    165a:	fc 01       	movw	r30, r24
    165c:	80 81       	ld	r24, Z
    165e:	98 2f       	mov	r25, r24
    1660:	8b 81       	ldd	r24, Y+3	; 0x03
    1662:	80 95       	com	r24
    1664:	89 23       	and	r24, r25
    1666:	28 2f       	mov	r18, r24
    1668:	89 81       	ldd	r24, Y+1	; 0x01
    166a:	9a 81       	ldd	r25, Y+2	; 0x02
    166c:	fc 01       	movw	r30, r24
    166e:	20 83       	st	Z, r18
	else{}
}
    1670:	0f 90       	pop	r0
    1672:	0f 90       	pop	r0
    1674:	0f 90       	pop	r0
    1676:	0f 90       	pop	r0
    1678:	df 91       	pop	r29
    167a:	cf 91       	pop	r28
    167c:	08 95       	ret

0000167e <pinsDirection>:
void pinsDirection(volatile u8* ddr, u8 mask, u8 direction){
    167e:	cf 93       	push	r28
    1680:	df 93       	push	r29
    1682:	00 d0       	rcall	.+0      	; 0x1684 <pinsDirection+0x6>
    1684:	00 d0       	rcall	.+0      	; 0x1686 <pinsDirection+0x8>
    1686:	cd b7       	in	r28, 0x3d	; 61
    1688:	de b7       	in	r29, 0x3e	; 62
    168a:	9a 83       	std	Y+2, r25	; 0x02
    168c:	89 83       	std	Y+1, r24	; 0x01
    168e:	6b 83       	std	Y+3, r22	; 0x03
    1690:	4c 83       	std	Y+4, r20	; 0x04
	if(direction == OUTPUT)
    1692:	8c 81       	ldd	r24, Y+4	; 0x04
    1694:	81 30       	cpi	r24, 0x01	; 1
    1696:	61 f4       	brne	.+24     	; 0x16b0 <pinsDirection+0x32>
		SETBits(*ddr,mask);
    1698:	89 81       	ldd	r24, Y+1	; 0x01
    169a:	9a 81       	ldd	r25, Y+2	; 0x02
    169c:	fc 01       	movw	r30, r24
    169e:	90 81       	ld	r25, Z
    16a0:	8b 81       	ldd	r24, Y+3	; 0x03
    16a2:	29 2f       	mov	r18, r25
    16a4:	28 2b       	or	r18, r24
    16a6:	89 81       	ldd	r24, Y+1	; 0x01
    16a8:	9a 81       	ldd	r25, Y+2	; 0x02
    16aa:	fc 01       	movw	r30, r24
    16ac:	20 83       	st	Z, r18
    16ae:	10 c0       	rjmp	.+32     	; 0x16d0 <pinsDirection+0x52>
	else if(direction == INPUT)
    16b0:	8c 81       	ldd	r24, Y+4	; 0x04
    16b2:	88 23       	and	r24, r24
    16b4:	69 f4       	brne	.+26     	; 0x16d0 <pinsDirection+0x52>
		CLRBits(*ddr,mask);
    16b6:	89 81       	ldd	r24, Y+1	; 0x01
    16b8:	9a 81       	ldd	r25, Y+2	; 0x02
    16ba:	fc 01       	movw	r30, r24
    16bc:	80 81       	ld	r24, Z
    16be:	98 2f       	mov	r25, r24
    16c0:	8b 81       	ldd	r24, Y+3	; 0x03
    16c2:	80 95       	com	r24
    16c4:	89 23       	and	r24, r25
    16c6:	28 2f       	mov	r18, r24
    16c8:	89 81       	ldd	r24, Y+1	; 0x01
    16ca:	9a 81       	ldd	r25, Y+2	; 0x02
    16cc:	fc 01       	movw	r30, r24
    16ce:	20 83       	st	Z, r18
	else{}
}
    16d0:	0f 90       	pop	r0
    16d2:	0f 90       	pop	r0
    16d4:	0f 90       	pop	r0
    16d6:	0f 90       	pop	r0
    16d8:	df 91       	pop	r29
    16da:	cf 91       	pop	r28
    16dc:	08 95       	ret

000016de <__cmpsf2>:
    16de:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <__fp_cmp>
    16e2:	08 f4       	brcc	.+2      	; 0x16e6 <__cmpsf2+0x8>
    16e4:	81 e0       	ldi	r24, 0x01	; 1
    16e6:	08 95       	ret

000016e8 <__divsf3>:
    16e8:	0e 94 88 0b 	call	0x1710	; 0x1710 <__divsf3x>
    16ec:	0c 94 8d 0c 	jmp	0x191a	; 0x191a <__fp_round>
    16f0:	0e 94 86 0c 	call	0x190c	; 0x190c <__fp_pscB>
    16f4:	58 f0       	brcs	.+22     	; 0x170c <__divsf3+0x24>
    16f6:	0e 94 7f 0c 	call	0x18fe	; 0x18fe <__fp_pscA>
    16fa:	40 f0       	brcs	.+16     	; 0x170c <__divsf3+0x24>
    16fc:	29 f4       	brne	.+10     	; 0x1708 <__divsf3+0x20>
    16fe:	5f 3f       	cpi	r21, 0xFF	; 255
    1700:	29 f0       	breq	.+10     	; 0x170c <__divsf3+0x24>
    1702:	0c 94 76 0c 	jmp	0x18ec	; 0x18ec <__fp_inf>
    1706:	51 11       	cpse	r21, r1
    1708:	0c 94 c1 0c 	jmp	0x1982	; 0x1982 <__fp_szero>
    170c:	0c 94 7c 0c 	jmp	0x18f8	; 0x18f8 <__fp_nan>

00001710 <__divsf3x>:
    1710:	0e 94 9e 0c 	call	0x193c	; 0x193c <__fp_split3>
    1714:	68 f3       	brcs	.-38     	; 0x16f0 <__divsf3+0x8>

00001716 <__divsf3_pse>:
    1716:	99 23       	and	r25, r25
    1718:	b1 f3       	breq	.-20     	; 0x1706 <__divsf3+0x1e>
    171a:	55 23       	and	r21, r21
    171c:	91 f3       	breq	.-28     	; 0x1702 <__divsf3+0x1a>
    171e:	95 1b       	sub	r25, r21
    1720:	55 0b       	sbc	r21, r21
    1722:	bb 27       	eor	r27, r27
    1724:	aa 27       	eor	r26, r26
    1726:	62 17       	cp	r22, r18
    1728:	73 07       	cpc	r23, r19
    172a:	84 07       	cpc	r24, r20
    172c:	38 f0       	brcs	.+14     	; 0x173c <__divsf3_pse+0x26>
    172e:	9f 5f       	subi	r25, 0xFF	; 255
    1730:	5f 4f       	sbci	r21, 0xFF	; 255
    1732:	22 0f       	add	r18, r18
    1734:	33 1f       	adc	r19, r19
    1736:	44 1f       	adc	r20, r20
    1738:	aa 1f       	adc	r26, r26
    173a:	a9 f3       	breq	.-22     	; 0x1726 <__divsf3_pse+0x10>
    173c:	35 d0       	rcall	.+106    	; 0x17a8 <__divsf3_pse+0x92>
    173e:	0e 2e       	mov	r0, r30
    1740:	3a f0       	brmi	.+14     	; 0x1750 <__divsf3_pse+0x3a>
    1742:	e0 e8       	ldi	r30, 0x80	; 128
    1744:	32 d0       	rcall	.+100    	; 0x17aa <__divsf3_pse+0x94>
    1746:	91 50       	subi	r25, 0x01	; 1
    1748:	50 40       	sbci	r21, 0x00	; 0
    174a:	e6 95       	lsr	r30
    174c:	00 1c       	adc	r0, r0
    174e:	ca f7       	brpl	.-14     	; 0x1742 <__divsf3_pse+0x2c>
    1750:	2b d0       	rcall	.+86     	; 0x17a8 <__divsf3_pse+0x92>
    1752:	fe 2f       	mov	r31, r30
    1754:	29 d0       	rcall	.+82     	; 0x17a8 <__divsf3_pse+0x92>
    1756:	66 0f       	add	r22, r22
    1758:	77 1f       	adc	r23, r23
    175a:	88 1f       	adc	r24, r24
    175c:	bb 1f       	adc	r27, r27
    175e:	26 17       	cp	r18, r22
    1760:	37 07       	cpc	r19, r23
    1762:	48 07       	cpc	r20, r24
    1764:	ab 07       	cpc	r26, r27
    1766:	b0 e8       	ldi	r27, 0x80	; 128
    1768:	09 f0       	breq	.+2      	; 0x176c <__divsf3_pse+0x56>
    176a:	bb 0b       	sbc	r27, r27
    176c:	80 2d       	mov	r24, r0
    176e:	bf 01       	movw	r22, r30
    1770:	ff 27       	eor	r31, r31
    1772:	93 58       	subi	r25, 0x83	; 131
    1774:	5f 4f       	sbci	r21, 0xFF	; 255
    1776:	3a f0       	brmi	.+14     	; 0x1786 <__divsf3_pse+0x70>
    1778:	9e 3f       	cpi	r25, 0xFE	; 254
    177a:	51 05       	cpc	r21, r1
    177c:	78 f0       	brcs	.+30     	; 0x179c <__divsf3_pse+0x86>
    177e:	0c 94 76 0c 	jmp	0x18ec	; 0x18ec <__fp_inf>
    1782:	0c 94 c1 0c 	jmp	0x1982	; 0x1982 <__fp_szero>
    1786:	5f 3f       	cpi	r21, 0xFF	; 255
    1788:	e4 f3       	brlt	.-8      	; 0x1782 <__divsf3_pse+0x6c>
    178a:	98 3e       	cpi	r25, 0xE8	; 232
    178c:	d4 f3       	brlt	.-12     	; 0x1782 <__divsf3_pse+0x6c>
    178e:	86 95       	lsr	r24
    1790:	77 95       	ror	r23
    1792:	67 95       	ror	r22
    1794:	b7 95       	ror	r27
    1796:	f7 95       	ror	r31
    1798:	9f 5f       	subi	r25, 0xFF	; 255
    179a:	c9 f7       	brne	.-14     	; 0x178e <__divsf3_pse+0x78>
    179c:	88 0f       	add	r24, r24
    179e:	91 1d       	adc	r25, r1
    17a0:	96 95       	lsr	r25
    17a2:	87 95       	ror	r24
    17a4:	97 f9       	bld	r25, 7
    17a6:	08 95       	ret
    17a8:	e1 e0       	ldi	r30, 0x01	; 1
    17aa:	66 0f       	add	r22, r22
    17ac:	77 1f       	adc	r23, r23
    17ae:	88 1f       	adc	r24, r24
    17b0:	bb 1f       	adc	r27, r27
    17b2:	62 17       	cp	r22, r18
    17b4:	73 07       	cpc	r23, r19
    17b6:	84 07       	cpc	r24, r20
    17b8:	ba 07       	cpc	r27, r26
    17ba:	20 f0       	brcs	.+8      	; 0x17c4 <__divsf3_pse+0xae>
    17bc:	62 1b       	sub	r22, r18
    17be:	73 0b       	sbc	r23, r19
    17c0:	84 0b       	sbc	r24, r20
    17c2:	ba 0b       	sbc	r27, r26
    17c4:	ee 1f       	adc	r30, r30
    17c6:	88 f7       	brcc	.-30     	; 0x17aa <__divsf3_pse+0x94>
    17c8:	e0 95       	com	r30
    17ca:	08 95       	ret

000017cc <__fixunssfsi>:
    17cc:	0e 94 a6 0c 	call	0x194c	; 0x194c <__fp_splitA>
    17d0:	88 f0       	brcs	.+34     	; 0x17f4 <__fixunssfsi+0x28>
    17d2:	9f 57       	subi	r25, 0x7F	; 127
    17d4:	98 f0       	brcs	.+38     	; 0x17fc <__fixunssfsi+0x30>
    17d6:	b9 2f       	mov	r27, r25
    17d8:	99 27       	eor	r25, r25
    17da:	b7 51       	subi	r27, 0x17	; 23
    17dc:	b0 f0       	brcs	.+44     	; 0x180a <__fixunssfsi+0x3e>
    17de:	e1 f0       	breq	.+56     	; 0x1818 <__fixunssfsi+0x4c>
    17e0:	66 0f       	add	r22, r22
    17e2:	77 1f       	adc	r23, r23
    17e4:	88 1f       	adc	r24, r24
    17e6:	99 1f       	adc	r25, r25
    17e8:	1a f0       	brmi	.+6      	; 0x17f0 <__fixunssfsi+0x24>
    17ea:	ba 95       	dec	r27
    17ec:	c9 f7       	brne	.-14     	; 0x17e0 <__fixunssfsi+0x14>
    17ee:	14 c0       	rjmp	.+40     	; 0x1818 <__fixunssfsi+0x4c>
    17f0:	b1 30       	cpi	r27, 0x01	; 1
    17f2:	91 f0       	breq	.+36     	; 0x1818 <__fixunssfsi+0x4c>
    17f4:	0e 94 c0 0c 	call	0x1980	; 0x1980 <__fp_zero>
    17f8:	b1 e0       	ldi	r27, 0x01	; 1
    17fa:	08 95       	ret
    17fc:	0c 94 c0 0c 	jmp	0x1980	; 0x1980 <__fp_zero>
    1800:	67 2f       	mov	r22, r23
    1802:	78 2f       	mov	r23, r24
    1804:	88 27       	eor	r24, r24
    1806:	b8 5f       	subi	r27, 0xF8	; 248
    1808:	39 f0       	breq	.+14     	; 0x1818 <__fixunssfsi+0x4c>
    180a:	b9 3f       	cpi	r27, 0xF9	; 249
    180c:	cc f3       	brlt	.-14     	; 0x1800 <__fixunssfsi+0x34>
    180e:	86 95       	lsr	r24
    1810:	77 95       	ror	r23
    1812:	67 95       	ror	r22
    1814:	b3 95       	inc	r27
    1816:	d9 f7       	brne	.-10     	; 0x180e <__fixunssfsi+0x42>
    1818:	3e f4       	brtc	.+14     	; 0x1828 <__fixunssfsi+0x5c>
    181a:	90 95       	com	r25
    181c:	80 95       	com	r24
    181e:	70 95       	com	r23
    1820:	61 95       	neg	r22
    1822:	7f 4f       	sbci	r23, 0xFF	; 255
    1824:	8f 4f       	sbci	r24, 0xFF	; 255
    1826:	9f 4f       	sbci	r25, 0xFF	; 255
    1828:	08 95       	ret

0000182a <__floatunsisf>:
    182a:	e8 94       	clt
    182c:	09 c0       	rjmp	.+18     	; 0x1840 <__floatsisf+0x12>

0000182e <__floatsisf>:
    182e:	97 fb       	bst	r25, 7
    1830:	3e f4       	brtc	.+14     	; 0x1840 <__floatsisf+0x12>
    1832:	90 95       	com	r25
    1834:	80 95       	com	r24
    1836:	70 95       	com	r23
    1838:	61 95       	neg	r22
    183a:	7f 4f       	sbci	r23, 0xFF	; 255
    183c:	8f 4f       	sbci	r24, 0xFF	; 255
    183e:	9f 4f       	sbci	r25, 0xFF	; 255
    1840:	99 23       	and	r25, r25
    1842:	a9 f0       	breq	.+42     	; 0x186e <__floatsisf+0x40>
    1844:	f9 2f       	mov	r31, r25
    1846:	96 e9       	ldi	r25, 0x96	; 150
    1848:	bb 27       	eor	r27, r27
    184a:	93 95       	inc	r25
    184c:	f6 95       	lsr	r31
    184e:	87 95       	ror	r24
    1850:	77 95       	ror	r23
    1852:	67 95       	ror	r22
    1854:	b7 95       	ror	r27
    1856:	f1 11       	cpse	r31, r1
    1858:	f8 cf       	rjmp	.-16     	; 0x184a <__floatsisf+0x1c>
    185a:	fa f4       	brpl	.+62     	; 0x189a <__floatsisf+0x6c>
    185c:	bb 0f       	add	r27, r27
    185e:	11 f4       	brne	.+4      	; 0x1864 <__floatsisf+0x36>
    1860:	60 ff       	sbrs	r22, 0
    1862:	1b c0       	rjmp	.+54     	; 0x189a <__floatsisf+0x6c>
    1864:	6f 5f       	subi	r22, 0xFF	; 255
    1866:	7f 4f       	sbci	r23, 0xFF	; 255
    1868:	8f 4f       	sbci	r24, 0xFF	; 255
    186a:	9f 4f       	sbci	r25, 0xFF	; 255
    186c:	16 c0       	rjmp	.+44     	; 0x189a <__floatsisf+0x6c>
    186e:	88 23       	and	r24, r24
    1870:	11 f0       	breq	.+4      	; 0x1876 <__floatsisf+0x48>
    1872:	96 e9       	ldi	r25, 0x96	; 150
    1874:	11 c0       	rjmp	.+34     	; 0x1898 <__floatsisf+0x6a>
    1876:	77 23       	and	r23, r23
    1878:	21 f0       	breq	.+8      	; 0x1882 <__floatsisf+0x54>
    187a:	9e e8       	ldi	r25, 0x8E	; 142
    187c:	87 2f       	mov	r24, r23
    187e:	76 2f       	mov	r23, r22
    1880:	05 c0       	rjmp	.+10     	; 0x188c <__floatsisf+0x5e>
    1882:	66 23       	and	r22, r22
    1884:	71 f0       	breq	.+28     	; 0x18a2 <__floatsisf+0x74>
    1886:	96 e8       	ldi	r25, 0x86	; 134
    1888:	86 2f       	mov	r24, r22
    188a:	70 e0       	ldi	r23, 0x00	; 0
    188c:	60 e0       	ldi	r22, 0x00	; 0
    188e:	2a f0       	brmi	.+10     	; 0x189a <__floatsisf+0x6c>
    1890:	9a 95       	dec	r25
    1892:	66 0f       	add	r22, r22
    1894:	77 1f       	adc	r23, r23
    1896:	88 1f       	adc	r24, r24
    1898:	da f7       	brpl	.-10     	; 0x1890 <__floatsisf+0x62>
    189a:	88 0f       	add	r24, r24
    189c:	96 95       	lsr	r25
    189e:	87 95       	ror	r24
    18a0:	97 f9       	bld	r25, 7
    18a2:	08 95       	ret

000018a4 <__fp_cmp>:
    18a4:	99 0f       	add	r25, r25
    18a6:	00 08       	sbc	r0, r0
    18a8:	55 0f       	add	r21, r21
    18aa:	aa 0b       	sbc	r26, r26
    18ac:	e0 e8       	ldi	r30, 0x80	; 128
    18ae:	fe ef       	ldi	r31, 0xFE	; 254
    18b0:	16 16       	cp	r1, r22
    18b2:	17 06       	cpc	r1, r23
    18b4:	e8 07       	cpc	r30, r24
    18b6:	f9 07       	cpc	r31, r25
    18b8:	c0 f0       	brcs	.+48     	; 0x18ea <__fp_cmp+0x46>
    18ba:	12 16       	cp	r1, r18
    18bc:	13 06       	cpc	r1, r19
    18be:	e4 07       	cpc	r30, r20
    18c0:	f5 07       	cpc	r31, r21
    18c2:	98 f0       	brcs	.+38     	; 0x18ea <__fp_cmp+0x46>
    18c4:	62 1b       	sub	r22, r18
    18c6:	73 0b       	sbc	r23, r19
    18c8:	84 0b       	sbc	r24, r20
    18ca:	95 0b       	sbc	r25, r21
    18cc:	39 f4       	brne	.+14     	; 0x18dc <__fp_cmp+0x38>
    18ce:	0a 26       	eor	r0, r26
    18d0:	61 f0       	breq	.+24     	; 0x18ea <__fp_cmp+0x46>
    18d2:	23 2b       	or	r18, r19
    18d4:	24 2b       	or	r18, r20
    18d6:	25 2b       	or	r18, r21
    18d8:	21 f4       	brne	.+8      	; 0x18e2 <__fp_cmp+0x3e>
    18da:	08 95       	ret
    18dc:	0a 26       	eor	r0, r26
    18de:	09 f4       	brne	.+2      	; 0x18e2 <__fp_cmp+0x3e>
    18e0:	a1 40       	sbci	r26, 0x01	; 1
    18e2:	a6 95       	lsr	r26
    18e4:	8f ef       	ldi	r24, 0xFF	; 255
    18e6:	81 1d       	adc	r24, r1
    18e8:	81 1d       	adc	r24, r1
    18ea:	08 95       	ret

000018ec <__fp_inf>:
    18ec:	97 f9       	bld	r25, 7
    18ee:	9f 67       	ori	r25, 0x7F	; 127
    18f0:	80 e8       	ldi	r24, 0x80	; 128
    18f2:	70 e0       	ldi	r23, 0x00	; 0
    18f4:	60 e0       	ldi	r22, 0x00	; 0
    18f6:	08 95       	ret

000018f8 <__fp_nan>:
    18f8:	9f ef       	ldi	r25, 0xFF	; 255
    18fa:	80 ec       	ldi	r24, 0xC0	; 192
    18fc:	08 95       	ret

000018fe <__fp_pscA>:
    18fe:	00 24       	eor	r0, r0
    1900:	0a 94       	dec	r0
    1902:	16 16       	cp	r1, r22
    1904:	17 06       	cpc	r1, r23
    1906:	18 06       	cpc	r1, r24
    1908:	09 06       	cpc	r0, r25
    190a:	08 95       	ret

0000190c <__fp_pscB>:
    190c:	00 24       	eor	r0, r0
    190e:	0a 94       	dec	r0
    1910:	12 16       	cp	r1, r18
    1912:	13 06       	cpc	r1, r19
    1914:	14 06       	cpc	r1, r20
    1916:	05 06       	cpc	r0, r21
    1918:	08 95       	ret

0000191a <__fp_round>:
    191a:	09 2e       	mov	r0, r25
    191c:	03 94       	inc	r0
    191e:	00 0c       	add	r0, r0
    1920:	11 f4       	brne	.+4      	; 0x1926 <__fp_round+0xc>
    1922:	88 23       	and	r24, r24
    1924:	52 f0       	brmi	.+20     	; 0x193a <__fp_round+0x20>
    1926:	bb 0f       	add	r27, r27
    1928:	40 f4       	brcc	.+16     	; 0x193a <__fp_round+0x20>
    192a:	bf 2b       	or	r27, r31
    192c:	11 f4       	brne	.+4      	; 0x1932 <__fp_round+0x18>
    192e:	60 ff       	sbrs	r22, 0
    1930:	04 c0       	rjmp	.+8      	; 0x193a <__fp_round+0x20>
    1932:	6f 5f       	subi	r22, 0xFF	; 255
    1934:	7f 4f       	sbci	r23, 0xFF	; 255
    1936:	8f 4f       	sbci	r24, 0xFF	; 255
    1938:	9f 4f       	sbci	r25, 0xFF	; 255
    193a:	08 95       	ret

0000193c <__fp_split3>:
    193c:	57 fd       	sbrc	r21, 7
    193e:	90 58       	subi	r25, 0x80	; 128
    1940:	44 0f       	add	r20, r20
    1942:	55 1f       	adc	r21, r21
    1944:	59 f0       	breq	.+22     	; 0x195c <__fp_splitA+0x10>
    1946:	5f 3f       	cpi	r21, 0xFF	; 255
    1948:	71 f0       	breq	.+28     	; 0x1966 <__fp_splitA+0x1a>
    194a:	47 95       	ror	r20

0000194c <__fp_splitA>:
    194c:	88 0f       	add	r24, r24
    194e:	97 fb       	bst	r25, 7
    1950:	99 1f       	adc	r25, r25
    1952:	61 f0       	breq	.+24     	; 0x196c <__fp_splitA+0x20>
    1954:	9f 3f       	cpi	r25, 0xFF	; 255
    1956:	79 f0       	breq	.+30     	; 0x1976 <__fp_splitA+0x2a>
    1958:	87 95       	ror	r24
    195a:	08 95       	ret
    195c:	12 16       	cp	r1, r18
    195e:	13 06       	cpc	r1, r19
    1960:	14 06       	cpc	r1, r20
    1962:	55 1f       	adc	r21, r21
    1964:	f2 cf       	rjmp	.-28     	; 0x194a <__fp_split3+0xe>
    1966:	46 95       	lsr	r20
    1968:	f1 df       	rcall	.-30     	; 0x194c <__fp_splitA>
    196a:	08 c0       	rjmp	.+16     	; 0x197c <__fp_splitA+0x30>
    196c:	16 16       	cp	r1, r22
    196e:	17 06       	cpc	r1, r23
    1970:	18 06       	cpc	r1, r24
    1972:	99 1f       	adc	r25, r25
    1974:	f1 cf       	rjmp	.-30     	; 0x1958 <__fp_splitA+0xc>
    1976:	86 95       	lsr	r24
    1978:	71 05       	cpc	r23, r1
    197a:	61 05       	cpc	r22, r1
    197c:	08 94       	sec
    197e:	08 95       	ret

00001980 <__fp_zero>:
    1980:	e8 94       	clt

00001982 <__fp_szero>:
    1982:	bb 27       	eor	r27, r27
    1984:	66 27       	eor	r22, r22
    1986:	77 27       	eor	r23, r23
    1988:	cb 01       	movw	r24, r22
    198a:	97 f9       	bld	r25, 7
    198c:	08 95       	ret

0000198e <__gesf2>:
    198e:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <__fp_cmp>
    1992:	08 f4       	brcc	.+2      	; 0x1996 <__gesf2+0x8>
    1994:	8f ef       	ldi	r24, 0xFF	; 255
    1996:	08 95       	ret

00001998 <__mulsf3>:
    1998:	0e 94 df 0c 	call	0x19be	; 0x19be <__mulsf3x>
    199c:	0c 94 8d 0c 	jmp	0x191a	; 0x191a <__fp_round>
    19a0:	0e 94 7f 0c 	call	0x18fe	; 0x18fe <__fp_pscA>
    19a4:	38 f0       	brcs	.+14     	; 0x19b4 <__mulsf3+0x1c>
    19a6:	0e 94 86 0c 	call	0x190c	; 0x190c <__fp_pscB>
    19aa:	20 f0       	brcs	.+8      	; 0x19b4 <__mulsf3+0x1c>
    19ac:	95 23       	and	r25, r21
    19ae:	11 f0       	breq	.+4      	; 0x19b4 <__mulsf3+0x1c>
    19b0:	0c 94 76 0c 	jmp	0x18ec	; 0x18ec <__fp_inf>
    19b4:	0c 94 7c 0c 	jmp	0x18f8	; 0x18f8 <__fp_nan>
    19b8:	11 24       	eor	r1, r1
    19ba:	0c 94 c1 0c 	jmp	0x1982	; 0x1982 <__fp_szero>

000019be <__mulsf3x>:
    19be:	0e 94 9e 0c 	call	0x193c	; 0x193c <__fp_split3>
    19c2:	70 f3       	brcs	.-36     	; 0x19a0 <__mulsf3+0x8>

000019c4 <__mulsf3_pse>:
    19c4:	95 9f       	mul	r25, r21
    19c6:	c1 f3       	breq	.-16     	; 0x19b8 <__mulsf3+0x20>
    19c8:	95 0f       	add	r25, r21
    19ca:	50 e0       	ldi	r21, 0x00	; 0
    19cc:	55 1f       	adc	r21, r21
    19ce:	62 9f       	mul	r22, r18
    19d0:	f0 01       	movw	r30, r0
    19d2:	72 9f       	mul	r23, r18
    19d4:	bb 27       	eor	r27, r27
    19d6:	f0 0d       	add	r31, r0
    19d8:	b1 1d       	adc	r27, r1
    19da:	63 9f       	mul	r22, r19
    19dc:	aa 27       	eor	r26, r26
    19de:	f0 0d       	add	r31, r0
    19e0:	b1 1d       	adc	r27, r1
    19e2:	aa 1f       	adc	r26, r26
    19e4:	64 9f       	mul	r22, r20
    19e6:	66 27       	eor	r22, r22
    19e8:	b0 0d       	add	r27, r0
    19ea:	a1 1d       	adc	r26, r1
    19ec:	66 1f       	adc	r22, r22
    19ee:	82 9f       	mul	r24, r18
    19f0:	22 27       	eor	r18, r18
    19f2:	b0 0d       	add	r27, r0
    19f4:	a1 1d       	adc	r26, r1
    19f6:	62 1f       	adc	r22, r18
    19f8:	73 9f       	mul	r23, r19
    19fa:	b0 0d       	add	r27, r0
    19fc:	a1 1d       	adc	r26, r1
    19fe:	62 1f       	adc	r22, r18
    1a00:	83 9f       	mul	r24, r19
    1a02:	a0 0d       	add	r26, r0
    1a04:	61 1d       	adc	r22, r1
    1a06:	22 1f       	adc	r18, r18
    1a08:	74 9f       	mul	r23, r20
    1a0a:	33 27       	eor	r19, r19
    1a0c:	a0 0d       	add	r26, r0
    1a0e:	61 1d       	adc	r22, r1
    1a10:	23 1f       	adc	r18, r19
    1a12:	84 9f       	mul	r24, r20
    1a14:	60 0d       	add	r22, r0
    1a16:	21 1d       	adc	r18, r1
    1a18:	82 2f       	mov	r24, r18
    1a1a:	76 2f       	mov	r23, r22
    1a1c:	6a 2f       	mov	r22, r26
    1a1e:	11 24       	eor	r1, r1
    1a20:	9f 57       	subi	r25, 0x7F	; 127
    1a22:	50 40       	sbci	r21, 0x00	; 0
    1a24:	9a f0       	brmi	.+38     	; 0x1a4c <__mulsf3_pse+0x88>
    1a26:	f1 f0       	breq	.+60     	; 0x1a64 <__mulsf3_pse+0xa0>
    1a28:	88 23       	and	r24, r24
    1a2a:	4a f0       	brmi	.+18     	; 0x1a3e <__mulsf3_pse+0x7a>
    1a2c:	ee 0f       	add	r30, r30
    1a2e:	ff 1f       	adc	r31, r31
    1a30:	bb 1f       	adc	r27, r27
    1a32:	66 1f       	adc	r22, r22
    1a34:	77 1f       	adc	r23, r23
    1a36:	88 1f       	adc	r24, r24
    1a38:	91 50       	subi	r25, 0x01	; 1
    1a3a:	50 40       	sbci	r21, 0x00	; 0
    1a3c:	a9 f7       	brne	.-22     	; 0x1a28 <__mulsf3_pse+0x64>
    1a3e:	9e 3f       	cpi	r25, 0xFE	; 254
    1a40:	51 05       	cpc	r21, r1
    1a42:	80 f0       	brcs	.+32     	; 0x1a64 <__mulsf3_pse+0xa0>
    1a44:	0c 94 76 0c 	jmp	0x18ec	; 0x18ec <__fp_inf>
    1a48:	0c 94 c1 0c 	jmp	0x1982	; 0x1982 <__fp_szero>
    1a4c:	5f 3f       	cpi	r21, 0xFF	; 255
    1a4e:	e4 f3       	brlt	.-8      	; 0x1a48 <__mulsf3_pse+0x84>
    1a50:	98 3e       	cpi	r25, 0xE8	; 232
    1a52:	d4 f3       	brlt	.-12     	; 0x1a48 <__mulsf3_pse+0x84>
    1a54:	86 95       	lsr	r24
    1a56:	77 95       	ror	r23
    1a58:	67 95       	ror	r22
    1a5a:	b7 95       	ror	r27
    1a5c:	f7 95       	ror	r31
    1a5e:	e7 95       	ror	r30
    1a60:	9f 5f       	subi	r25, 0xFF	; 255
    1a62:	c1 f7       	brne	.-16     	; 0x1a54 <__mulsf3_pse+0x90>
    1a64:	fe 2b       	or	r31, r30
    1a66:	88 0f       	add	r24, r24
    1a68:	91 1d       	adc	r25, r1
    1a6a:	96 95       	lsr	r25
    1a6c:	87 95       	ror	r24
    1a6e:	97 f9       	bld	r25, 7
    1a70:	08 95       	ret

00001a72 <sprintf>:
    1a72:	ae e0       	ldi	r26, 0x0E	; 14
    1a74:	b0 e0       	ldi	r27, 0x00	; 0
    1a76:	ef e3       	ldi	r30, 0x3F	; 63
    1a78:	fd e0       	ldi	r31, 0x0D	; 13
    1a7a:	0c 94 e8 0f 	jmp	0x1fd0	; 0x1fd0 <__prologue_saves__+0x1c>
    1a7e:	0d 89       	ldd	r16, Y+21	; 0x15
    1a80:	1e 89       	ldd	r17, Y+22	; 0x16
    1a82:	86 e0       	ldi	r24, 0x06	; 6
    1a84:	8c 83       	std	Y+4, r24	; 0x04
    1a86:	1a 83       	std	Y+2, r17	; 0x02
    1a88:	09 83       	std	Y+1, r16	; 0x01
    1a8a:	8f ef       	ldi	r24, 0xFF	; 255
    1a8c:	9f e7       	ldi	r25, 0x7F	; 127
    1a8e:	9e 83       	std	Y+6, r25	; 0x06
    1a90:	8d 83       	std	Y+5, r24	; 0x05
    1a92:	ae 01       	movw	r20, r28
    1a94:	47 5e       	subi	r20, 0xE7	; 231
    1a96:	5f 4f       	sbci	r21, 0xFF	; 255
    1a98:	6f 89       	ldd	r22, Y+23	; 0x17
    1a9a:	78 8d       	ldd	r23, Y+24	; 0x18
    1a9c:	ce 01       	movw	r24, r28
    1a9e:	01 96       	adiw	r24, 0x01	; 1
    1aa0:	0e 94 5c 0d 	call	0x1ab8	; 0x1ab8 <vfprintf>
    1aa4:	2f 81       	ldd	r18, Y+7	; 0x07
    1aa6:	38 85       	ldd	r19, Y+8	; 0x08
    1aa8:	f8 01       	movw	r30, r16
    1aaa:	e2 0f       	add	r30, r18
    1aac:	f3 1f       	adc	r31, r19
    1aae:	10 82       	st	Z, r1
    1ab0:	2e 96       	adiw	r28, 0x0e	; 14
    1ab2:	e4 e0       	ldi	r30, 0x04	; 4
    1ab4:	0c 94 04 10 	jmp	0x2008	; 0x2008 <__epilogue_restores__+0x1c>

00001ab8 <vfprintf>:
    1ab8:	ac e0       	ldi	r26, 0x0C	; 12
    1aba:	b0 e0       	ldi	r27, 0x00	; 0
    1abc:	e2 e6       	ldi	r30, 0x62	; 98
    1abe:	fd e0       	ldi	r31, 0x0D	; 13
    1ac0:	0c 94 da 0f 	jmp	0x1fb4	; 0x1fb4 <__prologue_saves__>
    1ac4:	7c 01       	movw	r14, r24
    1ac6:	6b 01       	movw	r12, r22
    1ac8:	8a 01       	movw	r16, r20
    1aca:	fc 01       	movw	r30, r24
    1acc:	17 82       	std	Z+7, r1	; 0x07
    1ace:	16 82       	std	Z+6, r1	; 0x06
    1ad0:	83 81       	ldd	r24, Z+3	; 0x03
    1ad2:	81 ff       	sbrs	r24, 1
    1ad4:	bd c1       	rjmp	.+890    	; 0x1e50 <vfprintf+0x398>
    1ad6:	ce 01       	movw	r24, r28
    1ad8:	01 96       	adiw	r24, 0x01	; 1
    1ada:	4c 01       	movw	r8, r24
    1adc:	f7 01       	movw	r30, r14
    1ade:	93 81       	ldd	r25, Z+3	; 0x03
    1ae0:	f6 01       	movw	r30, r12
    1ae2:	93 fd       	sbrc	r25, 3
    1ae4:	85 91       	lpm	r24, Z+
    1ae6:	93 ff       	sbrs	r25, 3
    1ae8:	81 91       	ld	r24, Z+
    1aea:	6f 01       	movw	r12, r30
    1aec:	88 23       	and	r24, r24
    1aee:	09 f4       	brne	.+2      	; 0x1af2 <vfprintf+0x3a>
    1af0:	ab c1       	rjmp	.+854    	; 0x1e48 <vfprintf+0x390>
    1af2:	85 32       	cpi	r24, 0x25	; 37
    1af4:	39 f4       	brne	.+14     	; 0x1b04 <vfprintf+0x4c>
    1af6:	93 fd       	sbrc	r25, 3
    1af8:	85 91       	lpm	r24, Z+
    1afa:	93 ff       	sbrs	r25, 3
    1afc:	81 91       	ld	r24, Z+
    1afe:	6f 01       	movw	r12, r30
    1b00:	85 32       	cpi	r24, 0x25	; 37
    1b02:	29 f4       	brne	.+10     	; 0x1b0e <vfprintf+0x56>
    1b04:	b7 01       	movw	r22, r14
    1b06:	90 e0       	ldi	r25, 0x00	; 0
    1b08:	0e 94 44 0f 	call	0x1e88	; 0x1e88 <fputc>
    1b0c:	e7 cf       	rjmp	.-50     	; 0x1adc <vfprintf+0x24>
    1b0e:	51 2c       	mov	r5, r1
    1b10:	31 2c       	mov	r3, r1
    1b12:	20 e0       	ldi	r18, 0x00	; 0
    1b14:	20 32       	cpi	r18, 0x20	; 32
    1b16:	a0 f4       	brcc	.+40     	; 0x1b40 <vfprintf+0x88>
    1b18:	8b 32       	cpi	r24, 0x2B	; 43
    1b1a:	69 f0       	breq	.+26     	; 0x1b36 <vfprintf+0x7e>
    1b1c:	30 f4       	brcc	.+12     	; 0x1b2a <vfprintf+0x72>
    1b1e:	80 32       	cpi	r24, 0x20	; 32
    1b20:	59 f0       	breq	.+22     	; 0x1b38 <vfprintf+0x80>
    1b22:	83 32       	cpi	r24, 0x23	; 35
    1b24:	69 f4       	brne	.+26     	; 0x1b40 <vfprintf+0x88>
    1b26:	20 61       	ori	r18, 0x10	; 16
    1b28:	2c c0       	rjmp	.+88     	; 0x1b82 <vfprintf+0xca>
    1b2a:	8d 32       	cpi	r24, 0x2D	; 45
    1b2c:	39 f0       	breq	.+14     	; 0x1b3c <vfprintf+0x84>
    1b2e:	80 33       	cpi	r24, 0x30	; 48
    1b30:	39 f4       	brne	.+14     	; 0x1b40 <vfprintf+0x88>
    1b32:	21 60       	ori	r18, 0x01	; 1
    1b34:	26 c0       	rjmp	.+76     	; 0x1b82 <vfprintf+0xca>
    1b36:	22 60       	ori	r18, 0x02	; 2
    1b38:	24 60       	ori	r18, 0x04	; 4
    1b3a:	23 c0       	rjmp	.+70     	; 0x1b82 <vfprintf+0xca>
    1b3c:	28 60       	ori	r18, 0x08	; 8
    1b3e:	21 c0       	rjmp	.+66     	; 0x1b82 <vfprintf+0xca>
    1b40:	27 fd       	sbrc	r18, 7
    1b42:	27 c0       	rjmp	.+78     	; 0x1b92 <vfprintf+0xda>
    1b44:	30 ed       	ldi	r19, 0xD0	; 208
    1b46:	38 0f       	add	r19, r24
    1b48:	3a 30       	cpi	r19, 0x0A	; 10
    1b4a:	78 f4       	brcc	.+30     	; 0x1b6a <vfprintf+0xb2>
    1b4c:	26 ff       	sbrs	r18, 6
    1b4e:	06 c0       	rjmp	.+12     	; 0x1b5c <vfprintf+0xa4>
    1b50:	fa e0       	ldi	r31, 0x0A	; 10
    1b52:	5f 9e       	mul	r5, r31
    1b54:	30 0d       	add	r19, r0
    1b56:	11 24       	eor	r1, r1
    1b58:	53 2e       	mov	r5, r19
    1b5a:	13 c0       	rjmp	.+38     	; 0x1b82 <vfprintf+0xca>
    1b5c:	8a e0       	ldi	r24, 0x0A	; 10
    1b5e:	38 9e       	mul	r3, r24
    1b60:	30 0d       	add	r19, r0
    1b62:	11 24       	eor	r1, r1
    1b64:	33 2e       	mov	r3, r19
    1b66:	20 62       	ori	r18, 0x20	; 32
    1b68:	0c c0       	rjmp	.+24     	; 0x1b82 <vfprintf+0xca>
    1b6a:	8e 32       	cpi	r24, 0x2E	; 46
    1b6c:	21 f4       	brne	.+8      	; 0x1b76 <vfprintf+0xbe>
    1b6e:	26 fd       	sbrc	r18, 6
    1b70:	6b c1       	rjmp	.+726    	; 0x1e48 <vfprintf+0x390>
    1b72:	20 64       	ori	r18, 0x40	; 64
    1b74:	06 c0       	rjmp	.+12     	; 0x1b82 <vfprintf+0xca>
    1b76:	8c 36       	cpi	r24, 0x6C	; 108
    1b78:	11 f4       	brne	.+4      	; 0x1b7e <vfprintf+0xc6>
    1b7a:	20 68       	ori	r18, 0x80	; 128
    1b7c:	02 c0       	rjmp	.+4      	; 0x1b82 <vfprintf+0xca>
    1b7e:	88 36       	cpi	r24, 0x68	; 104
    1b80:	41 f4       	brne	.+16     	; 0x1b92 <vfprintf+0xda>
    1b82:	f6 01       	movw	r30, r12
    1b84:	93 fd       	sbrc	r25, 3
    1b86:	85 91       	lpm	r24, Z+
    1b88:	93 ff       	sbrs	r25, 3
    1b8a:	81 91       	ld	r24, Z+
    1b8c:	6f 01       	movw	r12, r30
    1b8e:	81 11       	cpse	r24, r1
    1b90:	c1 cf       	rjmp	.-126    	; 0x1b14 <vfprintf+0x5c>
    1b92:	98 2f       	mov	r25, r24
    1b94:	9f 7d       	andi	r25, 0xDF	; 223
    1b96:	95 54       	subi	r25, 0x45	; 69
    1b98:	93 30       	cpi	r25, 0x03	; 3
    1b9a:	28 f4       	brcc	.+10     	; 0x1ba6 <vfprintf+0xee>
    1b9c:	0c 5f       	subi	r16, 0xFC	; 252
    1b9e:	1f 4f       	sbci	r17, 0xFF	; 255
    1ba0:	ff e3       	ldi	r31, 0x3F	; 63
    1ba2:	f9 83       	std	Y+1, r31	; 0x01
    1ba4:	0d c0       	rjmp	.+26     	; 0x1bc0 <vfprintf+0x108>
    1ba6:	83 36       	cpi	r24, 0x63	; 99
    1ba8:	31 f0       	breq	.+12     	; 0x1bb6 <vfprintf+0xfe>
    1baa:	83 37       	cpi	r24, 0x73	; 115
    1bac:	71 f0       	breq	.+28     	; 0x1bca <vfprintf+0x112>
    1bae:	83 35       	cpi	r24, 0x53	; 83
    1bb0:	09 f0       	breq	.+2      	; 0x1bb4 <vfprintf+0xfc>
    1bb2:	5b c0       	rjmp	.+182    	; 0x1c6a <vfprintf+0x1b2>
    1bb4:	22 c0       	rjmp	.+68     	; 0x1bfa <vfprintf+0x142>
    1bb6:	f8 01       	movw	r30, r16
    1bb8:	80 81       	ld	r24, Z
    1bba:	89 83       	std	Y+1, r24	; 0x01
    1bbc:	0e 5f       	subi	r16, 0xFE	; 254
    1bbe:	1f 4f       	sbci	r17, 0xFF	; 255
    1bc0:	44 24       	eor	r4, r4
    1bc2:	43 94       	inc	r4
    1bc4:	51 2c       	mov	r5, r1
    1bc6:	54 01       	movw	r10, r8
    1bc8:	15 c0       	rjmp	.+42     	; 0x1bf4 <vfprintf+0x13c>
    1bca:	38 01       	movw	r6, r16
    1bcc:	f2 e0       	ldi	r31, 0x02	; 2
    1bce:	6f 0e       	add	r6, r31
    1bd0:	71 1c       	adc	r7, r1
    1bd2:	f8 01       	movw	r30, r16
    1bd4:	a0 80       	ld	r10, Z
    1bd6:	b1 80       	ldd	r11, Z+1	; 0x01
    1bd8:	26 ff       	sbrs	r18, 6
    1bda:	03 c0       	rjmp	.+6      	; 0x1be2 <vfprintf+0x12a>
    1bdc:	65 2d       	mov	r22, r5
    1bde:	70 e0       	ldi	r23, 0x00	; 0
    1be0:	02 c0       	rjmp	.+4      	; 0x1be6 <vfprintf+0x12e>
    1be2:	6f ef       	ldi	r22, 0xFF	; 255
    1be4:	7f ef       	ldi	r23, 0xFF	; 255
    1be6:	c5 01       	movw	r24, r10
    1be8:	2c 87       	std	Y+12, r18	; 0x0c
    1bea:	0e 94 39 0f 	call	0x1e72	; 0x1e72 <strnlen>
    1bee:	2c 01       	movw	r4, r24
    1bf0:	83 01       	movw	r16, r6
    1bf2:	2c 85       	ldd	r18, Y+12	; 0x0c
    1bf4:	2f 77       	andi	r18, 0x7F	; 127
    1bf6:	22 2e       	mov	r2, r18
    1bf8:	17 c0       	rjmp	.+46     	; 0x1c28 <vfprintf+0x170>
    1bfa:	38 01       	movw	r6, r16
    1bfc:	f2 e0       	ldi	r31, 0x02	; 2
    1bfe:	6f 0e       	add	r6, r31
    1c00:	71 1c       	adc	r7, r1
    1c02:	f8 01       	movw	r30, r16
    1c04:	a0 80       	ld	r10, Z
    1c06:	b1 80       	ldd	r11, Z+1	; 0x01
    1c08:	26 ff       	sbrs	r18, 6
    1c0a:	03 c0       	rjmp	.+6      	; 0x1c12 <vfprintf+0x15a>
    1c0c:	65 2d       	mov	r22, r5
    1c0e:	70 e0       	ldi	r23, 0x00	; 0
    1c10:	02 c0       	rjmp	.+4      	; 0x1c16 <vfprintf+0x15e>
    1c12:	6f ef       	ldi	r22, 0xFF	; 255
    1c14:	7f ef       	ldi	r23, 0xFF	; 255
    1c16:	c5 01       	movw	r24, r10
    1c18:	2c 87       	std	Y+12, r18	; 0x0c
    1c1a:	0e 94 2e 0f 	call	0x1e5c	; 0x1e5c <strnlen_P>
    1c1e:	2c 01       	movw	r4, r24
    1c20:	2c 85       	ldd	r18, Y+12	; 0x0c
    1c22:	20 68       	ori	r18, 0x80	; 128
    1c24:	22 2e       	mov	r2, r18
    1c26:	83 01       	movw	r16, r6
    1c28:	23 fc       	sbrc	r2, 3
    1c2a:	1b c0       	rjmp	.+54     	; 0x1c62 <vfprintf+0x1aa>
    1c2c:	83 2d       	mov	r24, r3
    1c2e:	90 e0       	ldi	r25, 0x00	; 0
    1c30:	48 16       	cp	r4, r24
    1c32:	59 06       	cpc	r5, r25
    1c34:	b0 f4       	brcc	.+44     	; 0x1c62 <vfprintf+0x1aa>
    1c36:	b7 01       	movw	r22, r14
    1c38:	80 e2       	ldi	r24, 0x20	; 32
    1c3a:	90 e0       	ldi	r25, 0x00	; 0
    1c3c:	0e 94 44 0f 	call	0x1e88	; 0x1e88 <fputc>
    1c40:	3a 94       	dec	r3
    1c42:	f4 cf       	rjmp	.-24     	; 0x1c2c <vfprintf+0x174>
    1c44:	f5 01       	movw	r30, r10
    1c46:	27 fc       	sbrc	r2, 7
    1c48:	85 91       	lpm	r24, Z+
    1c4a:	27 fe       	sbrs	r2, 7
    1c4c:	81 91       	ld	r24, Z+
    1c4e:	5f 01       	movw	r10, r30
    1c50:	b7 01       	movw	r22, r14
    1c52:	90 e0       	ldi	r25, 0x00	; 0
    1c54:	0e 94 44 0f 	call	0x1e88	; 0x1e88 <fputc>
    1c58:	31 10       	cpse	r3, r1
    1c5a:	3a 94       	dec	r3
    1c5c:	f1 e0       	ldi	r31, 0x01	; 1
    1c5e:	4f 1a       	sub	r4, r31
    1c60:	51 08       	sbc	r5, r1
    1c62:	41 14       	cp	r4, r1
    1c64:	51 04       	cpc	r5, r1
    1c66:	71 f7       	brne	.-36     	; 0x1c44 <vfprintf+0x18c>
    1c68:	e5 c0       	rjmp	.+458    	; 0x1e34 <vfprintf+0x37c>
    1c6a:	84 36       	cpi	r24, 0x64	; 100
    1c6c:	11 f0       	breq	.+4      	; 0x1c72 <vfprintf+0x1ba>
    1c6e:	89 36       	cpi	r24, 0x69	; 105
    1c70:	39 f5       	brne	.+78     	; 0x1cc0 <vfprintf+0x208>
    1c72:	f8 01       	movw	r30, r16
    1c74:	27 ff       	sbrs	r18, 7
    1c76:	07 c0       	rjmp	.+14     	; 0x1c86 <vfprintf+0x1ce>
    1c78:	60 81       	ld	r22, Z
    1c7a:	71 81       	ldd	r23, Z+1	; 0x01
    1c7c:	82 81       	ldd	r24, Z+2	; 0x02
    1c7e:	93 81       	ldd	r25, Z+3	; 0x03
    1c80:	0c 5f       	subi	r16, 0xFC	; 252
    1c82:	1f 4f       	sbci	r17, 0xFF	; 255
    1c84:	08 c0       	rjmp	.+16     	; 0x1c96 <vfprintf+0x1de>
    1c86:	60 81       	ld	r22, Z
    1c88:	71 81       	ldd	r23, Z+1	; 0x01
    1c8a:	07 2e       	mov	r0, r23
    1c8c:	00 0c       	add	r0, r0
    1c8e:	88 0b       	sbc	r24, r24
    1c90:	99 0b       	sbc	r25, r25
    1c92:	0e 5f       	subi	r16, 0xFE	; 254
    1c94:	1f 4f       	sbci	r17, 0xFF	; 255
    1c96:	2f 76       	andi	r18, 0x6F	; 111
    1c98:	72 2e       	mov	r7, r18
    1c9a:	97 ff       	sbrs	r25, 7
    1c9c:	09 c0       	rjmp	.+18     	; 0x1cb0 <vfprintf+0x1f8>
    1c9e:	90 95       	com	r25
    1ca0:	80 95       	com	r24
    1ca2:	70 95       	com	r23
    1ca4:	61 95       	neg	r22
    1ca6:	7f 4f       	sbci	r23, 0xFF	; 255
    1ca8:	8f 4f       	sbci	r24, 0xFF	; 255
    1caa:	9f 4f       	sbci	r25, 0xFF	; 255
    1cac:	20 68       	ori	r18, 0x80	; 128
    1cae:	72 2e       	mov	r7, r18
    1cb0:	2a e0       	ldi	r18, 0x0A	; 10
    1cb2:	30 e0       	ldi	r19, 0x00	; 0
    1cb4:	a4 01       	movw	r20, r8
    1cb6:	0e 94 7c 0f 	call	0x1ef8	; 0x1ef8 <__ultoa_invert>
    1cba:	a8 2e       	mov	r10, r24
    1cbc:	a8 18       	sub	r10, r8
    1cbe:	44 c0       	rjmp	.+136    	; 0x1d48 <vfprintf+0x290>
    1cc0:	85 37       	cpi	r24, 0x75	; 117
    1cc2:	29 f4       	brne	.+10     	; 0x1cce <vfprintf+0x216>
    1cc4:	2f 7e       	andi	r18, 0xEF	; 239
    1cc6:	b2 2e       	mov	r11, r18
    1cc8:	2a e0       	ldi	r18, 0x0A	; 10
    1cca:	30 e0       	ldi	r19, 0x00	; 0
    1ccc:	25 c0       	rjmp	.+74     	; 0x1d18 <vfprintf+0x260>
    1cce:	f2 2f       	mov	r31, r18
    1cd0:	f9 7f       	andi	r31, 0xF9	; 249
    1cd2:	bf 2e       	mov	r11, r31
    1cd4:	8f 36       	cpi	r24, 0x6F	; 111
    1cd6:	c1 f0       	breq	.+48     	; 0x1d08 <vfprintf+0x250>
    1cd8:	18 f4       	brcc	.+6      	; 0x1ce0 <vfprintf+0x228>
    1cda:	88 35       	cpi	r24, 0x58	; 88
    1cdc:	79 f0       	breq	.+30     	; 0x1cfc <vfprintf+0x244>
    1cde:	b4 c0       	rjmp	.+360    	; 0x1e48 <vfprintf+0x390>
    1ce0:	80 37       	cpi	r24, 0x70	; 112
    1ce2:	19 f0       	breq	.+6      	; 0x1cea <vfprintf+0x232>
    1ce4:	88 37       	cpi	r24, 0x78	; 120
    1ce6:	21 f0       	breq	.+8      	; 0x1cf0 <vfprintf+0x238>
    1ce8:	af c0       	rjmp	.+350    	; 0x1e48 <vfprintf+0x390>
    1cea:	2f 2f       	mov	r18, r31
    1cec:	20 61       	ori	r18, 0x10	; 16
    1cee:	b2 2e       	mov	r11, r18
    1cf0:	b4 fe       	sbrs	r11, 4
    1cf2:	0d c0       	rjmp	.+26     	; 0x1d0e <vfprintf+0x256>
    1cf4:	8b 2d       	mov	r24, r11
    1cf6:	84 60       	ori	r24, 0x04	; 4
    1cf8:	b8 2e       	mov	r11, r24
    1cfa:	09 c0       	rjmp	.+18     	; 0x1d0e <vfprintf+0x256>
    1cfc:	24 ff       	sbrs	r18, 4
    1cfe:	0a c0       	rjmp	.+20     	; 0x1d14 <vfprintf+0x25c>
    1d00:	9f 2f       	mov	r25, r31
    1d02:	96 60       	ori	r25, 0x06	; 6
    1d04:	b9 2e       	mov	r11, r25
    1d06:	06 c0       	rjmp	.+12     	; 0x1d14 <vfprintf+0x25c>
    1d08:	28 e0       	ldi	r18, 0x08	; 8
    1d0a:	30 e0       	ldi	r19, 0x00	; 0
    1d0c:	05 c0       	rjmp	.+10     	; 0x1d18 <vfprintf+0x260>
    1d0e:	20 e1       	ldi	r18, 0x10	; 16
    1d10:	30 e0       	ldi	r19, 0x00	; 0
    1d12:	02 c0       	rjmp	.+4      	; 0x1d18 <vfprintf+0x260>
    1d14:	20 e1       	ldi	r18, 0x10	; 16
    1d16:	32 e0       	ldi	r19, 0x02	; 2
    1d18:	f8 01       	movw	r30, r16
    1d1a:	b7 fe       	sbrs	r11, 7
    1d1c:	07 c0       	rjmp	.+14     	; 0x1d2c <vfprintf+0x274>
    1d1e:	60 81       	ld	r22, Z
    1d20:	71 81       	ldd	r23, Z+1	; 0x01
    1d22:	82 81       	ldd	r24, Z+2	; 0x02
    1d24:	93 81       	ldd	r25, Z+3	; 0x03
    1d26:	0c 5f       	subi	r16, 0xFC	; 252
    1d28:	1f 4f       	sbci	r17, 0xFF	; 255
    1d2a:	06 c0       	rjmp	.+12     	; 0x1d38 <vfprintf+0x280>
    1d2c:	60 81       	ld	r22, Z
    1d2e:	71 81       	ldd	r23, Z+1	; 0x01
    1d30:	80 e0       	ldi	r24, 0x00	; 0
    1d32:	90 e0       	ldi	r25, 0x00	; 0
    1d34:	0e 5f       	subi	r16, 0xFE	; 254
    1d36:	1f 4f       	sbci	r17, 0xFF	; 255
    1d38:	a4 01       	movw	r20, r8
    1d3a:	0e 94 7c 0f 	call	0x1ef8	; 0x1ef8 <__ultoa_invert>
    1d3e:	a8 2e       	mov	r10, r24
    1d40:	a8 18       	sub	r10, r8
    1d42:	fb 2d       	mov	r31, r11
    1d44:	ff 77       	andi	r31, 0x7F	; 127
    1d46:	7f 2e       	mov	r7, r31
    1d48:	76 fe       	sbrs	r7, 6
    1d4a:	0b c0       	rjmp	.+22     	; 0x1d62 <vfprintf+0x2aa>
    1d4c:	37 2d       	mov	r19, r7
    1d4e:	3e 7f       	andi	r19, 0xFE	; 254
    1d50:	a5 14       	cp	r10, r5
    1d52:	50 f4       	brcc	.+20     	; 0x1d68 <vfprintf+0x2b0>
    1d54:	74 fe       	sbrs	r7, 4
    1d56:	0a c0       	rjmp	.+20     	; 0x1d6c <vfprintf+0x2b4>
    1d58:	72 fc       	sbrc	r7, 2
    1d5a:	08 c0       	rjmp	.+16     	; 0x1d6c <vfprintf+0x2b4>
    1d5c:	37 2d       	mov	r19, r7
    1d5e:	3e 7e       	andi	r19, 0xEE	; 238
    1d60:	05 c0       	rjmp	.+10     	; 0x1d6c <vfprintf+0x2b4>
    1d62:	ba 2c       	mov	r11, r10
    1d64:	37 2d       	mov	r19, r7
    1d66:	03 c0       	rjmp	.+6      	; 0x1d6e <vfprintf+0x2b6>
    1d68:	ba 2c       	mov	r11, r10
    1d6a:	01 c0       	rjmp	.+2      	; 0x1d6e <vfprintf+0x2b6>
    1d6c:	b5 2c       	mov	r11, r5
    1d6e:	34 ff       	sbrs	r19, 4
    1d70:	0d c0       	rjmp	.+26     	; 0x1d8c <vfprintf+0x2d4>
    1d72:	fe 01       	movw	r30, r28
    1d74:	ea 0d       	add	r30, r10
    1d76:	f1 1d       	adc	r31, r1
    1d78:	80 81       	ld	r24, Z
    1d7a:	80 33       	cpi	r24, 0x30	; 48
    1d7c:	11 f4       	brne	.+4      	; 0x1d82 <vfprintf+0x2ca>
    1d7e:	39 7e       	andi	r19, 0xE9	; 233
    1d80:	09 c0       	rjmp	.+18     	; 0x1d94 <vfprintf+0x2dc>
    1d82:	32 ff       	sbrs	r19, 2
    1d84:	06 c0       	rjmp	.+12     	; 0x1d92 <vfprintf+0x2da>
    1d86:	b3 94       	inc	r11
    1d88:	b3 94       	inc	r11
    1d8a:	04 c0       	rjmp	.+8      	; 0x1d94 <vfprintf+0x2dc>
    1d8c:	83 2f       	mov	r24, r19
    1d8e:	86 78       	andi	r24, 0x86	; 134
    1d90:	09 f0       	breq	.+2      	; 0x1d94 <vfprintf+0x2dc>
    1d92:	b3 94       	inc	r11
    1d94:	33 fd       	sbrc	r19, 3
    1d96:	13 c0       	rjmp	.+38     	; 0x1dbe <vfprintf+0x306>
    1d98:	30 ff       	sbrs	r19, 0
    1d9a:	06 c0       	rjmp	.+12     	; 0x1da8 <vfprintf+0x2f0>
    1d9c:	5a 2c       	mov	r5, r10
    1d9e:	b3 14       	cp	r11, r3
    1da0:	18 f4       	brcc	.+6      	; 0x1da8 <vfprintf+0x2f0>
    1da2:	53 0c       	add	r5, r3
    1da4:	5b 18       	sub	r5, r11
    1da6:	b3 2c       	mov	r11, r3
    1da8:	b3 14       	cp	r11, r3
    1daa:	68 f4       	brcc	.+26     	; 0x1dc6 <vfprintf+0x30e>
    1dac:	b7 01       	movw	r22, r14
    1dae:	80 e2       	ldi	r24, 0x20	; 32
    1db0:	90 e0       	ldi	r25, 0x00	; 0
    1db2:	3c 87       	std	Y+12, r19	; 0x0c
    1db4:	0e 94 44 0f 	call	0x1e88	; 0x1e88 <fputc>
    1db8:	b3 94       	inc	r11
    1dba:	3c 85       	ldd	r19, Y+12	; 0x0c
    1dbc:	f5 cf       	rjmp	.-22     	; 0x1da8 <vfprintf+0x2f0>
    1dbe:	b3 14       	cp	r11, r3
    1dc0:	10 f4       	brcc	.+4      	; 0x1dc6 <vfprintf+0x30e>
    1dc2:	3b 18       	sub	r3, r11
    1dc4:	01 c0       	rjmp	.+2      	; 0x1dc8 <vfprintf+0x310>
    1dc6:	31 2c       	mov	r3, r1
    1dc8:	34 ff       	sbrs	r19, 4
    1dca:	12 c0       	rjmp	.+36     	; 0x1df0 <vfprintf+0x338>
    1dcc:	b7 01       	movw	r22, r14
    1dce:	80 e3       	ldi	r24, 0x30	; 48
    1dd0:	90 e0       	ldi	r25, 0x00	; 0
    1dd2:	3c 87       	std	Y+12, r19	; 0x0c
    1dd4:	0e 94 44 0f 	call	0x1e88	; 0x1e88 <fputc>
    1dd8:	3c 85       	ldd	r19, Y+12	; 0x0c
    1dda:	32 ff       	sbrs	r19, 2
    1ddc:	17 c0       	rjmp	.+46     	; 0x1e0c <vfprintf+0x354>
    1dde:	31 fd       	sbrc	r19, 1
    1de0:	03 c0       	rjmp	.+6      	; 0x1de8 <vfprintf+0x330>
    1de2:	88 e7       	ldi	r24, 0x78	; 120
    1de4:	90 e0       	ldi	r25, 0x00	; 0
    1de6:	02 c0       	rjmp	.+4      	; 0x1dec <vfprintf+0x334>
    1de8:	88 e5       	ldi	r24, 0x58	; 88
    1dea:	90 e0       	ldi	r25, 0x00	; 0
    1dec:	b7 01       	movw	r22, r14
    1dee:	0c c0       	rjmp	.+24     	; 0x1e08 <vfprintf+0x350>
    1df0:	83 2f       	mov	r24, r19
    1df2:	86 78       	andi	r24, 0x86	; 134
    1df4:	59 f0       	breq	.+22     	; 0x1e0c <vfprintf+0x354>
    1df6:	31 ff       	sbrs	r19, 1
    1df8:	02 c0       	rjmp	.+4      	; 0x1dfe <vfprintf+0x346>
    1dfa:	8b e2       	ldi	r24, 0x2B	; 43
    1dfc:	01 c0       	rjmp	.+2      	; 0x1e00 <vfprintf+0x348>
    1dfe:	80 e2       	ldi	r24, 0x20	; 32
    1e00:	37 fd       	sbrc	r19, 7
    1e02:	8d e2       	ldi	r24, 0x2D	; 45
    1e04:	b7 01       	movw	r22, r14
    1e06:	90 e0       	ldi	r25, 0x00	; 0
    1e08:	0e 94 44 0f 	call	0x1e88	; 0x1e88 <fputc>
    1e0c:	a5 14       	cp	r10, r5
    1e0e:	38 f4       	brcc	.+14     	; 0x1e1e <vfprintf+0x366>
    1e10:	b7 01       	movw	r22, r14
    1e12:	80 e3       	ldi	r24, 0x30	; 48
    1e14:	90 e0       	ldi	r25, 0x00	; 0
    1e16:	0e 94 44 0f 	call	0x1e88	; 0x1e88 <fputc>
    1e1a:	5a 94       	dec	r5
    1e1c:	f7 cf       	rjmp	.-18     	; 0x1e0c <vfprintf+0x354>
    1e1e:	aa 94       	dec	r10
    1e20:	f4 01       	movw	r30, r8
    1e22:	ea 0d       	add	r30, r10
    1e24:	f1 1d       	adc	r31, r1
    1e26:	80 81       	ld	r24, Z
    1e28:	b7 01       	movw	r22, r14
    1e2a:	90 e0       	ldi	r25, 0x00	; 0
    1e2c:	0e 94 44 0f 	call	0x1e88	; 0x1e88 <fputc>
    1e30:	a1 10       	cpse	r10, r1
    1e32:	f5 cf       	rjmp	.-22     	; 0x1e1e <vfprintf+0x366>
    1e34:	33 20       	and	r3, r3
    1e36:	09 f4       	brne	.+2      	; 0x1e3a <vfprintf+0x382>
    1e38:	51 ce       	rjmp	.-862    	; 0x1adc <vfprintf+0x24>
    1e3a:	b7 01       	movw	r22, r14
    1e3c:	80 e2       	ldi	r24, 0x20	; 32
    1e3e:	90 e0       	ldi	r25, 0x00	; 0
    1e40:	0e 94 44 0f 	call	0x1e88	; 0x1e88 <fputc>
    1e44:	3a 94       	dec	r3
    1e46:	f6 cf       	rjmp	.-20     	; 0x1e34 <vfprintf+0x37c>
    1e48:	f7 01       	movw	r30, r14
    1e4a:	86 81       	ldd	r24, Z+6	; 0x06
    1e4c:	97 81       	ldd	r25, Z+7	; 0x07
    1e4e:	02 c0       	rjmp	.+4      	; 0x1e54 <vfprintf+0x39c>
    1e50:	8f ef       	ldi	r24, 0xFF	; 255
    1e52:	9f ef       	ldi	r25, 0xFF	; 255
    1e54:	2c 96       	adiw	r28, 0x0c	; 12
    1e56:	e2 e1       	ldi	r30, 0x12	; 18
    1e58:	0c 94 f6 0f 	jmp	0x1fec	; 0x1fec <__epilogue_restores__>

00001e5c <strnlen_P>:
    1e5c:	fc 01       	movw	r30, r24
    1e5e:	05 90       	lpm	r0, Z+
    1e60:	61 50       	subi	r22, 0x01	; 1
    1e62:	70 40       	sbci	r23, 0x00	; 0
    1e64:	01 10       	cpse	r0, r1
    1e66:	d8 f7       	brcc	.-10     	; 0x1e5e <strnlen_P+0x2>
    1e68:	80 95       	com	r24
    1e6a:	90 95       	com	r25
    1e6c:	8e 0f       	add	r24, r30
    1e6e:	9f 1f       	adc	r25, r31
    1e70:	08 95       	ret

00001e72 <strnlen>:
    1e72:	fc 01       	movw	r30, r24
    1e74:	61 50       	subi	r22, 0x01	; 1
    1e76:	70 40       	sbci	r23, 0x00	; 0
    1e78:	01 90       	ld	r0, Z+
    1e7a:	01 10       	cpse	r0, r1
    1e7c:	d8 f7       	brcc	.-10     	; 0x1e74 <strnlen+0x2>
    1e7e:	80 95       	com	r24
    1e80:	90 95       	com	r25
    1e82:	8e 0f       	add	r24, r30
    1e84:	9f 1f       	adc	r25, r31
    1e86:	08 95       	ret

00001e88 <fputc>:
    1e88:	0f 93       	push	r16
    1e8a:	1f 93       	push	r17
    1e8c:	cf 93       	push	r28
    1e8e:	df 93       	push	r29
    1e90:	fb 01       	movw	r30, r22
    1e92:	23 81       	ldd	r18, Z+3	; 0x03
    1e94:	21 fd       	sbrc	r18, 1
    1e96:	03 c0       	rjmp	.+6      	; 0x1e9e <fputc+0x16>
    1e98:	8f ef       	ldi	r24, 0xFF	; 255
    1e9a:	9f ef       	ldi	r25, 0xFF	; 255
    1e9c:	28 c0       	rjmp	.+80     	; 0x1eee <fputc+0x66>
    1e9e:	22 ff       	sbrs	r18, 2
    1ea0:	16 c0       	rjmp	.+44     	; 0x1ece <fputc+0x46>
    1ea2:	46 81       	ldd	r20, Z+6	; 0x06
    1ea4:	57 81       	ldd	r21, Z+7	; 0x07
    1ea6:	24 81       	ldd	r18, Z+4	; 0x04
    1ea8:	35 81       	ldd	r19, Z+5	; 0x05
    1eaa:	42 17       	cp	r20, r18
    1eac:	53 07       	cpc	r21, r19
    1eae:	44 f4       	brge	.+16     	; 0x1ec0 <fputc+0x38>
    1eb0:	a0 81       	ld	r26, Z
    1eb2:	b1 81       	ldd	r27, Z+1	; 0x01
    1eb4:	9d 01       	movw	r18, r26
    1eb6:	2f 5f       	subi	r18, 0xFF	; 255
    1eb8:	3f 4f       	sbci	r19, 0xFF	; 255
    1eba:	31 83       	std	Z+1, r19	; 0x01
    1ebc:	20 83       	st	Z, r18
    1ebe:	8c 93       	st	X, r24
    1ec0:	26 81       	ldd	r18, Z+6	; 0x06
    1ec2:	37 81       	ldd	r19, Z+7	; 0x07
    1ec4:	2f 5f       	subi	r18, 0xFF	; 255
    1ec6:	3f 4f       	sbci	r19, 0xFF	; 255
    1ec8:	37 83       	std	Z+7, r19	; 0x07
    1eca:	26 83       	std	Z+6, r18	; 0x06
    1ecc:	10 c0       	rjmp	.+32     	; 0x1eee <fputc+0x66>
    1ece:	eb 01       	movw	r28, r22
    1ed0:	09 2f       	mov	r16, r25
    1ed2:	18 2f       	mov	r17, r24
    1ed4:	00 84       	ldd	r0, Z+8	; 0x08
    1ed6:	f1 85       	ldd	r31, Z+9	; 0x09
    1ed8:	e0 2d       	mov	r30, r0
    1eda:	09 95       	icall
    1edc:	89 2b       	or	r24, r25
    1ede:	e1 f6       	brne	.-72     	; 0x1e98 <fputc+0x10>
    1ee0:	8e 81       	ldd	r24, Y+6	; 0x06
    1ee2:	9f 81       	ldd	r25, Y+7	; 0x07
    1ee4:	01 96       	adiw	r24, 0x01	; 1
    1ee6:	9f 83       	std	Y+7, r25	; 0x07
    1ee8:	8e 83       	std	Y+6, r24	; 0x06
    1eea:	81 2f       	mov	r24, r17
    1eec:	90 2f       	mov	r25, r16
    1eee:	df 91       	pop	r29
    1ef0:	cf 91       	pop	r28
    1ef2:	1f 91       	pop	r17
    1ef4:	0f 91       	pop	r16
    1ef6:	08 95       	ret

00001ef8 <__ultoa_invert>:
    1ef8:	fa 01       	movw	r30, r20
    1efa:	aa 27       	eor	r26, r26
    1efc:	28 30       	cpi	r18, 0x08	; 8
    1efe:	51 f1       	breq	.+84     	; 0x1f54 <__ultoa_invert+0x5c>
    1f00:	20 31       	cpi	r18, 0x10	; 16
    1f02:	81 f1       	breq	.+96     	; 0x1f64 <__ultoa_invert+0x6c>
    1f04:	e8 94       	clt
    1f06:	6f 93       	push	r22
    1f08:	6e 7f       	andi	r22, 0xFE	; 254
    1f0a:	6e 5f       	subi	r22, 0xFE	; 254
    1f0c:	7f 4f       	sbci	r23, 0xFF	; 255
    1f0e:	8f 4f       	sbci	r24, 0xFF	; 255
    1f10:	9f 4f       	sbci	r25, 0xFF	; 255
    1f12:	af 4f       	sbci	r26, 0xFF	; 255
    1f14:	b1 e0       	ldi	r27, 0x01	; 1
    1f16:	3e d0       	rcall	.+124    	; 0x1f94 <__ultoa_invert+0x9c>
    1f18:	b4 e0       	ldi	r27, 0x04	; 4
    1f1a:	3c d0       	rcall	.+120    	; 0x1f94 <__ultoa_invert+0x9c>
    1f1c:	67 0f       	add	r22, r23
    1f1e:	78 1f       	adc	r23, r24
    1f20:	89 1f       	adc	r24, r25
    1f22:	9a 1f       	adc	r25, r26
    1f24:	a1 1d       	adc	r26, r1
    1f26:	68 0f       	add	r22, r24
    1f28:	79 1f       	adc	r23, r25
    1f2a:	8a 1f       	adc	r24, r26
    1f2c:	91 1d       	adc	r25, r1
    1f2e:	a1 1d       	adc	r26, r1
    1f30:	6a 0f       	add	r22, r26
    1f32:	71 1d       	adc	r23, r1
    1f34:	81 1d       	adc	r24, r1
    1f36:	91 1d       	adc	r25, r1
    1f38:	a1 1d       	adc	r26, r1
    1f3a:	20 d0       	rcall	.+64     	; 0x1f7c <__ultoa_invert+0x84>
    1f3c:	09 f4       	brne	.+2      	; 0x1f40 <__ultoa_invert+0x48>
    1f3e:	68 94       	set
    1f40:	3f 91       	pop	r19
    1f42:	2a e0       	ldi	r18, 0x0A	; 10
    1f44:	26 9f       	mul	r18, r22
    1f46:	11 24       	eor	r1, r1
    1f48:	30 19       	sub	r19, r0
    1f4a:	30 5d       	subi	r19, 0xD0	; 208
    1f4c:	31 93       	st	Z+, r19
    1f4e:	de f6       	brtc	.-74     	; 0x1f06 <__ultoa_invert+0xe>
    1f50:	cf 01       	movw	r24, r30
    1f52:	08 95       	ret
    1f54:	46 2f       	mov	r20, r22
    1f56:	47 70       	andi	r20, 0x07	; 7
    1f58:	40 5d       	subi	r20, 0xD0	; 208
    1f5a:	41 93       	st	Z+, r20
    1f5c:	b3 e0       	ldi	r27, 0x03	; 3
    1f5e:	0f d0       	rcall	.+30     	; 0x1f7e <__ultoa_invert+0x86>
    1f60:	c9 f7       	brne	.-14     	; 0x1f54 <__ultoa_invert+0x5c>
    1f62:	f6 cf       	rjmp	.-20     	; 0x1f50 <__ultoa_invert+0x58>
    1f64:	46 2f       	mov	r20, r22
    1f66:	4f 70       	andi	r20, 0x0F	; 15
    1f68:	40 5d       	subi	r20, 0xD0	; 208
    1f6a:	4a 33       	cpi	r20, 0x3A	; 58
    1f6c:	18 f0       	brcs	.+6      	; 0x1f74 <__ultoa_invert+0x7c>
    1f6e:	49 5d       	subi	r20, 0xD9	; 217
    1f70:	31 fd       	sbrc	r19, 1
    1f72:	40 52       	subi	r20, 0x20	; 32
    1f74:	41 93       	st	Z+, r20
    1f76:	02 d0       	rcall	.+4      	; 0x1f7c <__ultoa_invert+0x84>
    1f78:	a9 f7       	brne	.-22     	; 0x1f64 <__ultoa_invert+0x6c>
    1f7a:	ea cf       	rjmp	.-44     	; 0x1f50 <__ultoa_invert+0x58>
    1f7c:	b4 e0       	ldi	r27, 0x04	; 4
    1f7e:	a6 95       	lsr	r26
    1f80:	97 95       	ror	r25
    1f82:	87 95       	ror	r24
    1f84:	77 95       	ror	r23
    1f86:	67 95       	ror	r22
    1f88:	ba 95       	dec	r27
    1f8a:	c9 f7       	brne	.-14     	; 0x1f7e <__ultoa_invert+0x86>
    1f8c:	00 97       	sbiw	r24, 0x00	; 0
    1f8e:	61 05       	cpc	r22, r1
    1f90:	71 05       	cpc	r23, r1
    1f92:	08 95       	ret
    1f94:	9b 01       	movw	r18, r22
    1f96:	ac 01       	movw	r20, r24
    1f98:	0a 2e       	mov	r0, r26
    1f9a:	06 94       	lsr	r0
    1f9c:	57 95       	ror	r21
    1f9e:	47 95       	ror	r20
    1fa0:	37 95       	ror	r19
    1fa2:	27 95       	ror	r18
    1fa4:	ba 95       	dec	r27
    1fa6:	c9 f7       	brne	.-14     	; 0x1f9a <__ultoa_invert+0xa2>
    1fa8:	62 0f       	add	r22, r18
    1faa:	73 1f       	adc	r23, r19
    1fac:	84 1f       	adc	r24, r20
    1fae:	95 1f       	adc	r25, r21
    1fb0:	a0 1d       	adc	r26, r0
    1fb2:	08 95       	ret

00001fb4 <__prologue_saves__>:
    1fb4:	2f 92       	push	r2
    1fb6:	3f 92       	push	r3
    1fb8:	4f 92       	push	r4
    1fba:	5f 92       	push	r5
    1fbc:	6f 92       	push	r6
    1fbe:	7f 92       	push	r7
    1fc0:	8f 92       	push	r8
    1fc2:	9f 92       	push	r9
    1fc4:	af 92       	push	r10
    1fc6:	bf 92       	push	r11
    1fc8:	cf 92       	push	r12
    1fca:	df 92       	push	r13
    1fcc:	ef 92       	push	r14
    1fce:	ff 92       	push	r15
    1fd0:	0f 93       	push	r16
    1fd2:	1f 93       	push	r17
    1fd4:	cf 93       	push	r28
    1fd6:	df 93       	push	r29
    1fd8:	cd b7       	in	r28, 0x3d	; 61
    1fda:	de b7       	in	r29, 0x3e	; 62
    1fdc:	ca 1b       	sub	r28, r26
    1fde:	db 0b       	sbc	r29, r27
    1fe0:	0f b6       	in	r0, 0x3f	; 63
    1fe2:	f8 94       	cli
    1fe4:	de bf       	out	0x3e, r29	; 62
    1fe6:	0f be       	out	0x3f, r0	; 63
    1fe8:	cd bf       	out	0x3d, r28	; 61
    1fea:	09 94       	ijmp

00001fec <__epilogue_restores__>:
    1fec:	2a 88       	ldd	r2, Y+18	; 0x12
    1fee:	39 88       	ldd	r3, Y+17	; 0x11
    1ff0:	48 88       	ldd	r4, Y+16	; 0x10
    1ff2:	5f 84       	ldd	r5, Y+15	; 0x0f
    1ff4:	6e 84       	ldd	r6, Y+14	; 0x0e
    1ff6:	7d 84       	ldd	r7, Y+13	; 0x0d
    1ff8:	8c 84       	ldd	r8, Y+12	; 0x0c
    1ffa:	9b 84       	ldd	r9, Y+11	; 0x0b
    1ffc:	aa 84       	ldd	r10, Y+10	; 0x0a
    1ffe:	b9 84       	ldd	r11, Y+9	; 0x09
    2000:	c8 84       	ldd	r12, Y+8	; 0x08
    2002:	df 80       	ldd	r13, Y+7	; 0x07
    2004:	ee 80       	ldd	r14, Y+6	; 0x06
    2006:	fd 80       	ldd	r15, Y+5	; 0x05
    2008:	0c 81       	ldd	r16, Y+4	; 0x04
    200a:	1b 81       	ldd	r17, Y+3	; 0x03
    200c:	aa 81       	ldd	r26, Y+2	; 0x02
    200e:	b9 81       	ldd	r27, Y+1	; 0x01
    2010:	ce 0f       	add	r28, r30
    2012:	d1 1d       	adc	r29, r1
    2014:	0f b6       	in	r0, 0x3f	; 63
    2016:	f8 94       	cli
    2018:	de bf       	out	0x3e, r29	; 62
    201a:	0f be       	out	0x3f, r0	; 63
    201c:	cd bf       	out	0x3d, r28	; 61
    201e:	ed 01       	movw	r28, r26
    2020:	08 95       	ret

00002022 <_exit>:
    2022:	f8 94       	cli

00002024 <__stop_program>:
    2024:	ff cf       	rjmp	.-2      	; 0x2024 <__stop_program>
