
Atmega32 drivers.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a92  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001c  00800060  00000a92  00000b06  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      0000005c  00000000  00000000  00000b22  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000b80  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000158  00000000  00000000  00000bbc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001c38  00000000  00000000  00000d14  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a65  00000000  00000000  0000294c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000b0f  00000000  00000000  000033b1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000002a0  00000000  00000000  00003ec0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005eb  00000000  00000000  00004160  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000df3  00000000  00000000  0000474b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000108  00000000  00000000  0000553e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 e9       	ldi	r30, 0x92	; 146
  68:	fa e0       	ldi	r31, 0x0A	; 10
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ac 37       	cpi	r26, 0x7C	; 124
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	ac e7       	ldi	r26, 0x7C	; 124
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ac 37       	cpi	r26, 0x7C	; 124
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 8e 00 	call	0x11c	; 0x11c <main>
  8a:	0c 94 47 05 	jmp	0xa8e	; 0xa8e <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <ADCAPP>:



void ADCAPP(void)
{
	ADC_init();
  92:	0e 94 93 01 	call	0x326	; 0x326 <ADC_init>
	LCD_init();
  96:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <LCD_init>
	while(1)
	{
		u16 aDCvalue=read_analog(ADC0);
  9a:	80 e0       	ldi	r24, 0x00	; 0
  9c:	90 e0       	ldi	r25, 0x00	; 0
  9e:	0e 94 9a 01 	call	0x334	; 0x334 <read_analog>
  a2:	ec 01       	movw	r28, r24
		disp_strXY(1,1,(u8 *)"    ");
  a4:	4b e6       	ldi	r20, 0x6B	; 107
  a6:	50 e0       	ldi	r21, 0x00	; 0
  a8:	61 e0       	ldi	r22, 0x01	; 1
  aa:	81 e0       	ldi	r24, 0x01	; 1
  ac:	0e 94 44 01 	call	0x288	; 0x288 <disp_strXY>
		disp_intXY(1,1,aDCvalue);
  b0:	9e 01       	movw	r18, r28
  b2:	40 e0       	ldi	r20, 0x00	; 0
  b4:	50 e0       	ldi	r21, 0x00	; 0
  b6:	61 e0       	ldi	r22, 0x01	; 1
  b8:	81 e0       	ldi	r24, 0x01	; 1
  ba:	0e 94 82 01 	call	0x304	; 0x304 <disp_intXY>
		s16 aDCvalue1=read_analog(ADC1);
  be:	81 e0       	ldi	r24, 0x01	; 1
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	0e 94 9a 01 	call	0x334	; 0x334 <read_analog>
  c6:	ec 01       	movw	r28, r24
		disp_strXY(2,1,(u8 *)"    ");
  c8:	4b e6       	ldi	r20, 0x6B	; 107
  ca:	50 e0       	ldi	r21, 0x00	; 0
  cc:	61 e0       	ldi	r22, 0x01	; 1
  ce:	82 e0       	ldi	r24, 0x02	; 2
  d0:	0e 94 44 01 	call	0x288	; 0x288 <disp_strXY>
		disp_intXY(2,1,aDCvalue1);
  d4:	9e 01       	movw	r18, r28
  d6:	dd 0f       	add	r29, r29
  d8:	44 0b       	sbc	r20, r20
  da:	55 0b       	sbc	r21, r21
  dc:	61 e0       	ldi	r22, 0x01	; 1
  de:	82 e0       	ldi	r24, 0x02	; 2
  e0:	0e 94 82 01 	call	0x304	; 0x304 <disp_intXY>
		u16 aDCvalue2=read_analog(ADC2);
  e4:	82 e0       	ldi	r24, 0x02	; 2
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	0e 94 9a 01 	call	0x334	; 0x334 <read_analog>
  ec:	ec 01       	movw	r28, r24
		disp_strXY(2,8,(u8 *)"    ");
  ee:	4b e6       	ldi	r20, 0x6B	; 107
  f0:	50 e0       	ldi	r21, 0x00	; 0
  f2:	68 e0       	ldi	r22, 0x08	; 8
  f4:	82 e0       	ldi	r24, 0x02	; 2
  f6:	0e 94 44 01 	call	0x288	; 0x288 <disp_strXY>
		disp_intXY(2,8,aDCvalue2);
  fa:	9e 01       	movw	r18, r28
  fc:	40 e0       	ldi	r20, 0x00	; 0
  fe:	50 e0       	ldi	r21, 0x00	; 0
 100:	68 e0       	ldi	r22, 0x08	; 8
 102:	82 e0       	ldi	r24, 0x02	; 2
 104:	0e 94 82 01 	call	0x304	; 0x304 <disp_intXY>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 108:	2f ef       	ldi	r18, 0xFF	; 255
 10a:	81 ee       	ldi	r24, 0xE1	; 225
 10c:	94 e0       	ldi	r25, 0x04	; 4
 10e:	21 50       	subi	r18, 0x01	; 1
 110:	80 40       	sbci	r24, 0x00	; 0
 112:	90 40       	sbci	r25, 0x00	; 0
 114:	e1 f7       	brne	.-8      	; 0x10e <ADCAPP+0x7c>
 116:	00 c0       	rjmp	.+0      	; 0x118 <ADCAPP+0x86>
 118:	00 00       	nop
 11a:	bf cf       	rjmp	.-130    	; 0x9a <ADCAPP+0x8>

0000011c <main>:

int main(void)
{
	 //CLockAPP();
	//KeyPadAPP();
	 ADCAPP();
 11c:	0e 94 49 00 	call	0x92	; 0x92 <ADCAPP>
	
}
 120:	80 e0       	ldi	r24, 0x00	; 0
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	08 95       	ret

00000126 <LCD_latch>:

void disp_charXY(u8 row,u8 col,u8 letter)
{
	LCD_GOTXY(row,col);
	disp_char(letter);	
}
 126:	61 e0       	ldi	r22, 0x01	; 1
 128:	8b e0       	ldi	r24, 0x0B	; 11
 12a:	0e 94 a9 01 	call	0x352	; 0x352 <writePin>
 12e:	85 ed       	ldi	r24, 0xD5	; 213
 130:	8a 95       	dec	r24
 132:	f1 f7       	brne	.-4      	; 0x130 <LCD_latch+0xa>
 134:	00 00       	nop
 136:	60 e0       	ldi	r22, 0x00	; 0
 138:	8b e0       	ldi	r24, 0x0B	; 11
 13a:	0e 94 a9 01 	call	0x352	; 0x352 <writePin>
 13e:	85 ed       	ldi	r24, 0xD5	; 213
 140:	8a 95       	dec	r24
 142:	f1 f7       	brne	.-4      	; 0x140 <LCD_latch+0x1a>
 144:	00 00       	nop
 146:	08 95       	ret

00000148 <SendToLCD>:
 148:	cf 93       	push	r28
 14a:	c8 2f       	mov	r28, r24
 14c:	40 e0       	ldi	r20, 0x00	; 0
 14e:	60 ef       	ldi	r22, 0xF0	; 240
 150:	8b e3       	ldi	r24, 0x3B	; 59
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	0e 94 3f 02 	call	0x47e	; 0x47e <writePins>
 158:	6c 2f       	mov	r22, r28
 15a:	60 7f       	andi	r22, 0xF0	; 240
 15c:	41 e0       	ldi	r20, 0x01	; 1
 15e:	8b e3       	ldi	r24, 0x3B	; 59
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	0e 94 3f 02 	call	0x47e	; 0x47e <writePins>
 166:	0e 94 93 00 	call	0x126	; 0x126 <LCD_latch>
 16a:	40 e0       	ldi	r20, 0x00	; 0
 16c:	60 ef       	ldi	r22, 0xF0	; 240
 16e:	8b e3       	ldi	r24, 0x3B	; 59
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	0e 94 3f 02 	call	0x47e	; 0x47e <writePins>
 176:	80 e1       	ldi	r24, 0x10	; 16
 178:	c8 9f       	mul	r28, r24
 17a:	b0 01       	movw	r22, r0
 17c:	11 24       	eor	r1, r1
 17e:	41 e0       	ldi	r20, 0x01	; 1
 180:	8b e3       	ldi	r24, 0x3B	; 59
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	0e 94 3f 02 	call	0x47e	; 0x47e <writePins>
 188:	0e 94 93 00 	call	0x126	; 0x126 <LCD_latch>
 18c:	85 ed       	ldi	r24, 0xD5	; 213
 18e:	8a 95       	dec	r24
 190:	f1 f7       	brne	.-4      	; 0x18e <SendToLCD+0x46>
 192:	00 00       	nop
 194:	cf 91       	pop	r28
 196:	08 95       	ret

00000198 <LCD_send_cmd>:
 198:	cf 93       	push	r28
 19a:	c8 2f       	mov	r28, r24
 19c:	60 e0       	ldi	r22, 0x00	; 0
 19e:	89 e0       	ldi	r24, 0x09	; 9
 1a0:	0e 94 a9 01 	call	0x352	; 0x352 <writePin>
 1a4:	8c 2f       	mov	r24, r28
 1a6:	0e 94 a4 00 	call	0x148	; 0x148 <SendToLCD>
 1aa:	cf 91       	pop	r28
 1ac:	08 95       	ret

000001ae <LCD_CLEAR>:
 1ae:	81 e0       	ldi	r24, 0x01	; 1
 1b0:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_send_cmd>
 1b4:	8f e3       	ldi	r24, 0x3F	; 63
 1b6:	9f e1       	ldi	r25, 0x1F	; 31
 1b8:	01 97       	sbiw	r24, 0x01	; 1
 1ba:	f1 f7       	brne	.-4      	; 0x1b8 <LCD_CLEAR+0xa>
 1bc:	00 c0       	rjmp	.+0      	; 0x1be <LCD_CLEAR+0x10>
 1be:	00 00       	nop
 1c0:	08 95       	ret

000001c2 <LCD_ret_Home>:
 1c2:	82 e0       	ldi	r24, 0x02	; 2
 1c4:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_send_cmd>
 1c8:	8f e3       	ldi	r24, 0x3F	; 63
 1ca:	9f e1       	ldi	r25, 0x1F	; 31
 1cc:	01 97       	sbiw	r24, 0x01	; 1
 1ce:	f1 f7       	brne	.-4      	; 0x1cc <LCD_ret_Home+0xa>
 1d0:	00 c0       	rjmp	.+0      	; 0x1d2 <LCD_ret_Home+0x10>
 1d2:	00 00       	nop
 1d4:	08 95       	ret

000001d6 <LCD_init>:
 1d6:	41 e0       	ldi	r20, 0x01	; 1
 1d8:	60 ef       	ldi	r22, 0xF0	; 240
 1da:	8a e3       	ldi	r24, 0x3A	; 58
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	0e 94 4e 02 	call	0x49c	; 0x49c <pinsDirection>
 1e2:	41 e0       	ldi	r20, 0x01	; 1
 1e4:	6e e0       	ldi	r22, 0x0E	; 14
 1e6:	87 e3       	ldi	r24, 0x37	; 55
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	0e 94 4e 02 	call	0x49c	; 0x49c <pinsDirection>
 1ee:	60 e0       	ldi	r22, 0x00	; 0
 1f0:	8a e0       	ldi	r24, 0x0A	; 10
 1f2:	0e 94 a9 01 	call	0x352	; 0x352 <writePin>
 1f6:	2f ef       	ldi	r18, 0xFF	; 255
 1f8:	83 ef       	ldi	r24, 0xF3	; 243
 1fa:	91 e0       	ldi	r25, 0x01	; 1
 1fc:	21 50       	subi	r18, 0x01	; 1
 1fe:	80 40       	sbci	r24, 0x00	; 0
 200:	90 40       	sbci	r25, 0x00	; 0
 202:	e1 f7       	brne	.-8      	; 0x1fc <LCD_init+0x26>
 204:	00 c0       	rjmp	.+0      	; 0x206 <LCD_init+0x30>
 206:	00 00       	nop
 208:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <LCD_ret_Home>
 20c:	86 e0       	ldi	r24, 0x06	; 6
 20e:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_send_cmd>
 212:	8f e0       	ldi	r24, 0x0F	; 15
 214:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_send_cmd>
 218:	80 e1       	ldi	r24, 0x10	; 16
 21a:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_send_cmd>
 21e:	88 e2       	ldi	r24, 0x28	; 40
 220:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_send_cmd>
 224:	0e 94 d7 00 	call	0x1ae	; 0x1ae <LCD_CLEAR>
 228:	08 95       	ret

0000022a <LCD_send_data>:
 22a:	cf 93       	push	r28
 22c:	c8 2f       	mov	r28, r24
 22e:	61 e0       	ldi	r22, 0x01	; 1
 230:	89 e0       	ldi	r24, 0x09	; 9
 232:	0e 94 a9 01 	call	0x352	; 0x352 <writePin>
 236:	8c 2f       	mov	r24, r28
 238:	0e 94 a4 00 	call	0x148	; 0x148 <SendToLCD>
 23c:	cf 91       	pop	r28
 23e:	08 95       	ret

00000240 <disp_char>:
 240:	0e 94 15 01 	call	0x22a	; 0x22a <LCD_send_data>
 244:	08 95       	ret

00000246 <disp_str>:
 246:	0f 93       	push	r16
 248:	1f 93       	push	r17
 24a:	cf 93       	push	r28
 24c:	8c 01       	movw	r16, r24
 24e:	c0 e0       	ldi	r28, 0x00	; 0
 250:	03 c0       	rjmp	.+6      	; 0x258 <disp_str+0x12>
 252:	0e 94 20 01 	call	0x240	; 0x240 <disp_char>
 256:	cf 5f       	subi	r28, 0xFF	; 255
 258:	f8 01       	movw	r30, r16
 25a:	ec 0f       	add	r30, r28
 25c:	f1 1d       	adc	r31, r1
 25e:	80 81       	ld	r24, Z
 260:	81 11       	cpse	r24, r1
 262:	f7 cf       	rjmp	.-18     	; 0x252 <disp_str+0xc>
 264:	cf 91       	pop	r28
 266:	1f 91       	pop	r17
 268:	0f 91       	pop	r16
 26a:	08 95       	ret

0000026c <LCD_GOTXY>:
 26c:	81 30       	cpi	r24, 0x01	; 1
 26e:	29 f4       	brne	.+10     	; 0x27a <LCD_GOTXY+0xe>
 270:	8f e7       	ldi	r24, 0x7F	; 127
 272:	86 0f       	add	r24, r22
 274:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_send_cmd>
 278:	08 95       	ret
 27a:	82 30       	cpi	r24, 0x02	; 2
 27c:	21 f4       	brne	.+8      	; 0x286 <LCD_GOTXY+0x1a>
 27e:	8f eb       	ldi	r24, 0xBF	; 191
 280:	86 0f       	add	r24, r22
 282:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_send_cmd>
 286:	08 95       	ret

00000288 <disp_strXY>:
	else{}
	
}

void disp_strXY(u8 row,u8 col,u8* str)
{
 288:	cf 93       	push	r28
 28a:	df 93       	push	r29
 28c:	ea 01       	movw	r28, r20
	LCD_GOTXY(row,col);
 28e:	0e 94 36 01 	call	0x26c	; 0x26c <LCD_GOTXY>
	disp_str(str);
 292:	ce 01       	movw	r24, r28
 294:	0e 94 23 01 	call	0x246	; 0x246 <disp_str>
}
 298:	df 91       	pop	r29
 29a:	cf 91       	pop	r28
 29c:	08 95       	ret

0000029e <disp_int>:


void disp_int(u32 intvalue)
{
 29e:	0f 93       	push	r16
 2a0:	1f 93       	push	r17
 2a2:	cf 93       	push	r28
 2a4:	df 93       	push	r29
 2a6:	cd b7       	in	r28, 0x3d	; 61
 2a8:	de b7       	in	r29, 0x3e	; 62
 2aa:	2b 97       	sbiw	r28, 0x0b	; 11
 2ac:	0f b6       	in	r0, 0x3f	; 63
 2ae:	f8 94       	cli
 2b0:	de bf       	out	0x3e, r29	; 62
 2b2:	0f be       	out	0x3f, r0	; 63
 2b4:	cd bf       	out	0x3d, r28	; 61
	u8 string[11]={0};
 2b6:	8e 01       	movw	r16, r28
 2b8:	0f 5f       	subi	r16, 0xFF	; 255
 2ba:	1f 4f       	sbci	r17, 0xFF	; 255
 2bc:	2b e0       	ldi	r18, 0x0B	; 11
 2be:	f8 01       	movw	r30, r16
 2c0:	11 92       	st	Z+, r1
 2c2:	2a 95       	dec	r18
 2c4:	e9 f7       	brne	.-6      	; 0x2c0 <disp_int+0x22>
		sprintf(string,"%u",intvalue);
 2c6:	9f 93       	push	r25
 2c8:	8f 93       	push	r24
 2ca:	7f 93       	push	r23
 2cc:	6f 93       	push	r22
 2ce:	89 e7       	ldi	r24, 0x79	; 121
 2d0:	90 e0       	ldi	r25, 0x00	; 0
 2d2:	9f 93       	push	r25
 2d4:	8f 93       	push	r24
 2d6:	1f 93       	push	r17
 2d8:	0f 93       	push	r16
 2da:	0e 94 5d 02 	call	0x4ba	; 0x4ba <sprintf>
		disp_str(string);
 2de:	c8 01       	movw	r24, r16
 2e0:	0e 94 23 01 	call	0x246	; 0x246 <disp_str>
}
 2e4:	0f b6       	in	r0, 0x3f	; 63
 2e6:	f8 94       	cli
 2e8:	de bf       	out	0x3e, r29	; 62
 2ea:	0f be       	out	0x3f, r0	; 63
 2ec:	cd bf       	out	0x3d, r28	; 61
 2ee:	2b 96       	adiw	r28, 0x0b	; 11
 2f0:	0f b6       	in	r0, 0x3f	; 63
 2f2:	f8 94       	cli
 2f4:	de bf       	out	0x3e, r29	; 62
 2f6:	0f be       	out	0x3f, r0	; 63
 2f8:	cd bf       	out	0x3d, r28	; 61
 2fa:	df 91       	pop	r29
 2fc:	cf 91       	pop	r28
 2fe:	1f 91       	pop	r17
 300:	0f 91       	pop	r16
 302:	08 95       	ret

00000304 <disp_intXY>:
void disp_intXY(u8 row,u8 col,u32 intvalue)
{
 304:	cf 92       	push	r12
 306:	df 92       	push	r13
 308:	ef 92       	push	r14
 30a:	ff 92       	push	r15
 30c:	69 01       	movw	r12, r18
 30e:	7a 01       	movw	r14, r20
	LCD_GOTXY(row,col);
 310:	0e 94 36 01 	call	0x26c	; 0x26c <LCD_GOTXY>
	disp_int(intvalue);
 314:	c7 01       	movw	r24, r14
 316:	b6 01       	movw	r22, r12
 318:	0e 94 4f 01 	call	0x29e	; 0x29e <disp_int>
}
 31c:	ff 90       	pop	r15
 31e:	ef 90       	pop	r14
 320:	df 90       	pop	r13
 322:	cf 90       	pop	r12
 324:	08 95       	ret

00000326 <ADC_init>:



void ADC_init(void)
{
	ADMUX|=(AVCC<<6)|(ADLAR<<5);	
 326:	87 b1       	in	r24, 0x07	; 7
 328:	80 64       	ori	r24, 0x40	; 64
 32a:	87 b9       	out	0x07, r24	; 7
	ADCSRA|=(SELEPRESC)|(ADATE<<5)|(ADIE<<3)|(ADEN<<7);
 32c:	86 b1       	in	r24, 0x06	; 6
 32e:	87 68       	ori	r24, 0x87	; 135
 330:	86 b9       	out	0x06, r24	; 6
 332:	08 95       	ret

00000334 <read_analog>:
}
u16 read_analog(u16 ADC_NUM)
{ 
	ADMUX&=~(0x1F);
 334:	97 b1       	in	r25, 0x07	; 7
 336:	90 7e       	andi	r25, 0xE0	; 224
 338:	97 b9       	out	0x07, r25	; 7
	ADMUX|=(ADC_NUM);
 33a:	97 b1       	in	r25, 0x07	; 7
 33c:	89 2b       	or	r24, r25
 33e:	87 b9       	out	0x07, r24	; 7
	ADCSRA|=(1<<6);	//start conversion
 340:	86 b1       	in	r24, 0x06	; 6
 342:	80 64       	ori	r24, 0x40	; 64
 344:	86 b9       	out	0x06, r24	; 6
	while((ADCSRA>>6)&0x01); //wait until conversion complete
 346:	36 99       	sbic	0x06, 6	; 6
 348:	fe cf       	rjmp	.-4      	; 0x346 <read_analog+0x12>
	return (ADC&(~(0x03)));		
 34a:	84 b1       	in	r24, 0x04	; 4
 34c:	95 b1       	in	r25, 0x05	; 5
}
 34e:	8c 7f       	andi	r24, 0xFC	; 252
 350:	08 95       	ret

00000352 <writePin>:
		result=GETBit(PINC,(pinNo-PORTC_OFFSET));
	else if((pinNo>=PD0)&&(pinNo<=PD7))
		result=GETBit(PIND,(pinNo-PORTD_OFFSET));
	else{}
	return result;
}
 352:	88 30       	cpi	r24, 0x08	; 8
 354:	f8 f4       	brcc	.+62     	; 0x394 <writePin+0x42>
 356:	61 30       	cpi	r22, 0x01	; 1
 358:	69 f4       	brne	.+26     	; 0x374 <writePin+0x22>
 35a:	4b b3       	in	r20, 0x1b	; 27
 35c:	21 e0       	ldi	r18, 0x01	; 1
 35e:	30 e0       	ldi	r19, 0x00	; 0
 360:	b9 01       	movw	r22, r18
 362:	02 c0       	rjmp	.+4      	; 0x368 <writePin+0x16>
 364:	66 0f       	add	r22, r22
 366:	77 1f       	adc	r23, r23
 368:	8a 95       	dec	r24
 36a:	e2 f7       	brpl	.-8      	; 0x364 <writePin+0x12>
 36c:	cb 01       	movw	r24, r22
 36e:	84 2b       	or	r24, r20
 370:	8b bb       	out	0x1b, r24	; 27
 372:	08 95       	ret
 374:	61 11       	cpse	r22, r1
 376:	82 c0       	rjmp	.+260    	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
 378:	4b b3       	in	r20, 0x1b	; 27
 37a:	21 e0       	ldi	r18, 0x01	; 1
 37c:	30 e0       	ldi	r19, 0x00	; 0
 37e:	b9 01       	movw	r22, r18
 380:	02 c0       	rjmp	.+4      	; 0x386 <writePin+0x34>
 382:	66 0f       	add	r22, r22
 384:	77 1f       	adc	r23, r23
 386:	8a 95       	dec	r24
 388:	e2 f7       	brpl	.-8      	; 0x382 <writePin+0x30>
 38a:	cb 01       	movw	r24, r22
 38c:	80 95       	com	r24
 38e:	84 23       	and	r24, r20
 390:	8b bb       	out	0x1b, r24	; 27
 392:	08 95       	ret
 394:	98 ef       	ldi	r25, 0xF8	; 248
 396:	98 0f       	add	r25, r24
 398:	98 30       	cpi	r25, 0x08	; 8
 39a:	18 f5       	brcc	.+70     	; 0x3e2 <writePin+0x90>
 39c:	61 30       	cpi	r22, 0x01	; 1
 39e:	79 f4       	brne	.+30     	; 0x3be <writePin+0x6c>
 3a0:	48 b3       	in	r20, 0x18	; 24
 3a2:	90 e0       	ldi	r25, 0x00	; 0
 3a4:	08 97       	sbiw	r24, 0x08	; 8
 3a6:	21 e0       	ldi	r18, 0x01	; 1
 3a8:	30 e0       	ldi	r19, 0x00	; 0
 3aa:	b9 01       	movw	r22, r18
 3ac:	02 c0       	rjmp	.+4      	; 0x3b2 <writePin+0x60>
 3ae:	66 0f       	add	r22, r22
 3b0:	77 1f       	adc	r23, r23
 3b2:	8a 95       	dec	r24
 3b4:	e2 f7       	brpl	.-8      	; 0x3ae <writePin+0x5c>
 3b6:	cb 01       	movw	r24, r22
 3b8:	84 2b       	or	r24, r20
 3ba:	88 bb       	out	0x18, r24	; 24
 3bc:	08 95       	ret
 3be:	61 11       	cpse	r22, r1
 3c0:	5d c0       	rjmp	.+186    	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
 3c2:	48 b3       	in	r20, 0x18	; 24
 3c4:	90 e0       	ldi	r25, 0x00	; 0
 3c6:	08 97       	sbiw	r24, 0x08	; 8
 3c8:	21 e0       	ldi	r18, 0x01	; 1
 3ca:	30 e0       	ldi	r19, 0x00	; 0
 3cc:	b9 01       	movw	r22, r18
 3ce:	02 c0       	rjmp	.+4      	; 0x3d4 <writePin+0x82>
 3d0:	66 0f       	add	r22, r22
 3d2:	77 1f       	adc	r23, r23
 3d4:	8a 95       	dec	r24
 3d6:	e2 f7       	brpl	.-8      	; 0x3d0 <writePin+0x7e>
 3d8:	cb 01       	movw	r24, r22
 3da:	80 95       	com	r24
 3dc:	84 23       	and	r24, r20
 3de:	88 bb       	out	0x18, r24	; 24
 3e0:	08 95       	ret
 3e2:	90 ef       	ldi	r25, 0xF0	; 240
 3e4:	98 0f       	add	r25, r24
 3e6:	98 30       	cpi	r25, 0x08	; 8
 3e8:	18 f5       	brcc	.+70     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 3ea:	61 30       	cpi	r22, 0x01	; 1
 3ec:	79 f4       	brne	.+30     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 3ee:	45 b3       	in	r20, 0x15	; 21
 3f0:	90 e0       	ldi	r25, 0x00	; 0
 3f2:	40 97       	sbiw	r24, 0x10	; 16
 3f4:	21 e0       	ldi	r18, 0x01	; 1
 3f6:	30 e0       	ldi	r19, 0x00	; 0
 3f8:	b9 01       	movw	r22, r18
 3fa:	02 c0       	rjmp	.+4      	; 0x400 <__LOCK_REGION_LENGTH__>
 3fc:	66 0f       	add	r22, r22
 3fe:	77 1f       	adc	r23, r23
 400:	8a 95       	dec	r24
 402:	e2 f7       	brpl	.-8      	; 0x3fc <writePin+0xaa>
 404:	cb 01       	movw	r24, r22
 406:	84 2b       	or	r24, r20
 408:	85 bb       	out	0x15, r24	; 21
 40a:	08 95       	ret
 40c:	61 11       	cpse	r22, r1
 40e:	36 c0       	rjmp	.+108    	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
 410:	45 b3       	in	r20, 0x15	; 21
 412:	90 e0       	ldi	r25, 0x00	; 0
 414:	40 97       	sbiw	r24, 0x10	; 16
 416:	21 e0       	ldi	r18, 0x01	; 1
 418:	30 e0       	ldi	r19, 0x00	; 0
 41a:	b9 01       	movw	r22, r18
 41c:	02 c0       	rjmp	.+4      	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 41e:	66 0f       	add	r22, r22
 420:	77 1f       	adc	r23, r23
 422:	8a 95       	dec	r24
 424:	e2 f7       	brpl	.-8      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 426:	cb 01       	movw	r24, r22
 428:	80 95       	com	r24
 42a:	84 23       	and	r24, r20
 42c:	85 bb       	out	0x15, r24	; 21
 42e:	08 95       	ret
 430:	98 ee       	ldi	r25, 0xE8	; 232
 432:	98 0f       	add	r25, r24
 434:	98 30       	cpi	r25, 0x08	; 8
 436:	10 f5       	brcc	.+68     	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
 438:	61 30       	cpi	r22, 0x01	; 1
 43a:	79 f4       	brne	.+30     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 43c:	42 b3       	in	r20, 0x12	; 18
 43e:	90 e0       	ldi	r25, 0x00	; 0
 440:	48 97       	sbiw	r24, 0x18	; 24
 442:	21 e0       	ldi	r18, 0x01	; 1
 444:	30 e0       	ldi	r19, 0x00	; 0
 446:	b9 01       	movw	r22, r18
 448:	02 c0       	rjmp	.+4      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 44a:	66 0f       	add	r22, r22
 44c:	77 1f       	adc	r23, r23
 44e:	8a 95       	dec	r24
 450:	e2 f7       	brpl	.-8      	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 452:	cb 01       	movw	r24, r22
 454:	84 2b       	or	r24, r20
 456:	82 bb       	out	0x12, r24	; 18
 458:	08 95       	ret
 45a:	61 11       	cpse	r22, r1
 45c:	0f c0       	rjmp	.+30     	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
 45e:	42 b3       	in	r20, 0x12	; 18
 460:	90 e0       	ldi	r25, 0x00	; 0
 462:	48 97       	sbiw	r24, 0x18	; 24
 464:	21 e0       	ldi	r18, 0x01	; 1
 466:	30 e0       	ldi	r19, 0x00	; 0
 468:	b9 01       	movw	r22, r18
 46a:	02 c0       	rjmp	.+4      	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 46c:	66 0f       	add	r22, r22
 46e:	77 1f       	adc	r23, r23
 470:	8a 95       	dec	r24
 472:	e2 f7       	brpl	.-8      	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 474:	cb 01       	movw	r24, r22
 476:	80 95       	com	r24
 478:	84 23       	and	r24, r20
 47a:	82 bb       	out	0x12, r24	; 18
 47c:	08 95       	ret

0000047e <writePins>:
	
/*for custom number of bits*/
void writePins(volatile u8* port, u8 mask, u8 logic){
	if(logic==HIGH)
 47e:	41 30       	cpi	r20, 0x01	; 1
 480:	29 f4       	brne	.+10     	; 0x48c <writePins+0xe>
		SETBits(*port,mask);
 482:	fc 01       	movw	r30, r24
 484:	20 81       	ld	r18, Z
 486:	62 2b       	or	r22, r18
 488:	60 83       	st	Z, r22
 48a:	08 95       	ret
	else if(logic==LOW)
 48c:	41 11       	cpse	r20, r1
 48e:	05 c0       	rjmp	.+10     	; 0x49a <writePins+0x1c>
		CLRBits(*port,mask);
 490:	fc 01       	movw	r30, r24
 492:	20 81       	ld	r18, Z
 494:	60 95       	com	r22
 496:	62 23       	and	r22, r18
 498:	60 83       	st	Z, r22
 49a:	08 95       	ret

0000049c <pinsDirection>:
	else{}
}
void pinsDirection(volatile u8* ddr, u8 mask, u8 direction){
	if(direction == OUTPUT)
 49c:	41 30       	cpi	r20, 0x01	; 1
 49e:	29 f4       	brne	.+10     	; 0x4aa <pinsDirection+0xe>
		SETBits(*ddr,mask);
 4a0:	fc 01       	movw	r30, r24
 4a2:	20 81       	ld	r18, Z
 4a4:	62 2b       	or	r22, r18
 4a6:	60 83       	st	Z, r22
 4a8:	08 95       	ret
	else if(direction == INPUT)
 4aa:	41 11       	cpse	r20, r1
 4ac:	05 c0       	rjmp	.+10     	; 0x4b8 <pinsDirection+0x1c>
		CLRBits(*ddr,mask);
 4ae:	fc 01       	movw	r30, r24
 4b0:	20 81       	ld	r18, Z
 4b2:	60 95       	com	r22
 4b4:	62 23       	and	r22, r18
 4b6:	60 83       	st	Z, r22
 4b8:	08 95       	ret

000004ba <sprintf>:
 4ba:	ae e0       	ldi	r26, 0x0E	; 14
 4bc:	b0 e0       	ldi	r27, 0x00	; 0
 4be:	e3 e6       	ldi	r30, 0x63	; 99
 4c0:	f2 e0       	ldi	r31, 0x02	; 2
 4c2:	0c 94 1e 05 	jmp	0xa3c	; 0xa3c <__prologue_saves__+0x1c>
 4c6:	0d 89       	ldd	r16, Y+21	; 0x15
 4c8:	1e 89       	ldd	r17, Y+22	; 0x16
 4ca:	86 e0       	ldi	r24, 0x06	; 6
 4cc:	8c 83       	std	Y+4, r24	; 0x04
 4ce:	1a 83       	std	Y+2, r17	; 0x02
 4d0:	09 83       	std	Y+1, r16	; 0x01
 4d2:	8f ef       	ldi	r24, 0xFF	; 255
 4d4:	9f e7       	ldi	r25, 0x7F	; 127
 4d6:	9e 83       	std	Y+6, r25	; 0x06
 4d8:	8d 83       	std	Y+5, r24	; 0x05
 4da:	ae 01       	movw	r20, r28
 4dc:	47 5e       	subi	r20, 0xE7	; 231
 4de:	5f 4f       	sbci	r21, 0xFF	; 255
 4e0:	6f 89       	ldd	r22, Y+23	; 0x17
 4e2:	78 8d       	ldd	r23, Y+24	; 0x18
 4e4:	ce 01       	movw	r24, r28
 4e6:	01 96       	adiw	r24, 0x01	; 1
 4e8:	0e 94 7f 02 	call	0x4fe	; 0x4fe <vfprintf>
 4ec:	ef 81       	ldd	r30, Y+7	; 0x07
 4ee:	f8 85       	ldd	r31, Y+8	; 0x08
 4f0:	e0 0f       	add	r30, r16
 4f2:	f1 1f       	adc	r31, r17
 4f4:	10 82       	st	Z, r1
 4f6:	2e 96       	adiw	r28, 0x0e	; 14
 4f8:	e4 e0       	ldi	r30, 0x04	; 4
 4fa:	0c 94 3a 05 	jmp	0xa74	; 0xa74 <__epilogue_restores__+0x1c>

000004fe <vfprintf>:
 4fe:	ab e0       	ldi	r26, 0x0B	; 11
 500:	b0 e0       	ldi	r27, 0x00	; 0
 502:	e5 e8       	ldi	r30, 0x85	; 133
 504:	f2 e0       	ldi	r31, 0x02	; 2
 506:	0c 94 10 05 	jmp	0xa20	; 0xa20 <__prologue_saves__>
 50a:	6c 01       	movw	r12, r24
 50c:	7b 01       	movw	r14, r22
 50e:	8a 01       	movw	r16, r20
 510:	fc 01       	movw	r30, r24
 512:	17 82       	std	Z+7, r1	; 0x07
 514:	16 82       	std	Z+6, r1	; 0x06
 516:	83 81       	ldd	r24, Z+3	; 0x03
 518:	81 ff       	sbrs	r24, 1
 51a:	cc c1       	rjmp	.+920    	; 0x8b4 <__stack+0x55>
 51c:	ce 01       	movw	r24, r28
 51e:	01 96       	adiw	r24, 0x01	; 1
 520:	3c 01       	movw	r6, r24
 522:	f6 01       	movw	r30, r12
 524:	93 81       	ldd	r25, Z+3	; 0x03
 526:	f7 01       	movw	r30, r14
 528:	93 fd       	sbrc	r25, 3
 52a:	85 91       	lpm	r24, Z+
 52c:	93 ff       	sbrs	r25, 3
 52e:	81 91       	ld	r24, Z+
 530:	7f 01       	movw	r14, r30
 532:	88 23       	and	r24, r24
 534:	09 f4       	brne	.+2      	; 0x538 <vfprintf+0x3a>
 536:	ba c1       	rjmp	.+884    	; 0x8ac <__stack+0x4d>
 538:	85 32       	cpi	r24, 0x25	; 37
 53a:	39 f4       	brne	.+14     	; 0x54a <vfprintf+0x4c>
 53c:	93 fd       	sbrc	r25, 3
 53e:	85 91       	lpm	r24, Z+
 540:	93 ff       	sbrs	r25, 3
 542:	81 91       	ld	r24, Z+
 544:	7f 01       	movw	r14, r30
 546:	85 32       	cpi	r24, 0x25	; 37
 548:	29 f4       	brne	.+10     	; 0x554 <vfprintf+0x56>
 54a:	b6 01       	movw	r22, r12
 54c:	90 e0       	ldi	r25, 0x00	; 0
 54e:	0e 94 76 04 	call	0x8ec	; 0x8ec <fputc>
 552:	e7 cf       	rjmp	.-50     	; 0x522 <vfprintf+0x24>
 554:	91 2c       	mov	r9, r1
 556:	21 2c       	mov	r2, r1
 558:	31 2c       	mov	r3, r1
 55a:	ff e1       	ldi	r31, 0x1F	; 31
 55c:	f3 15       	cp	r31, r3
 55e:	d8 f0       	brcs	.+54     	; 0x596 <vfprintf+0x98>
 560:	8b 32       	cpi	r24, 0x2B	; 43
 562:	79 f0       	breq	.+30     	; 0x582 <vfprintf+0x84>
 564:	38 f4       	brcc	.+14     	; 0x574 <vfprintf+0x76>
 566:	80 32       	cpi	r24, 0x20	; 32
 568:	79 f0       	breq	.+30     	; 0x588 <vfprintf+0x8a>
 56a:	83 32       	cpi	r24, 0x23	; 35
 56c:	a1 f4       	brne	.+40     	; 0x596 <vfprintf+0x98>
 56e:	23 2d       	mov	r18, r3
 570:	20 61       	ori	r18, 0x10	; 16
 572:	1d c0       	rjmp	.+58     	; 0x5ae <vfprintf+0xb0>
 574:	8d 32       	cpi	r24, 0x2D	; 45
 576:	61 f0       	breq	.+24     	; 0x590 <vfprintf+0x92>
 578:	80 33       	cpi	r24, 0x30	; 48
 57a:	69 f4       	brne	.+26     	; 0x596 <vfprintf+0x98>
 57c:	23 2d       	mov	r18, r3
 57e:	21 60       	ori	r18, 0x01	; 1
 580:	16 c0       	rjmp	.+44     	; 0x5ae <vfprintf+0xb0>
 582:	83 2d       	mov	r24, r3
 584:	82 60       	ori	r24, 0x02	; 2
 586:	38 2e       	mov	r3, r24
 588:	e3 2d       	mov	r30, r3
 58a:	e4 60       	ori	r30, 0x04	; 4
 58c:	3e 2e       	mov	r3, r30
 58e:	2a c0       	rjmp	.+84     	; 0x5e4 <vfprintf+0xe6>
 590:	f3 2d       	mov	r31, r3
 592:	f8 60       	ori	r31, 0x08	; 8
 594:	1d c0       	rjmp	.+58     	; 0x5d0 <vfprintf+0xd2>
 596:	37 fc       	sbrc	r3, 7
 598:	2d c0       	rjmp	.+90     	; 0x5f4 <vfprintf+0xf6>
 59a:	20 ed       	ldi	r18, 0xD0	; 208
 59c:	28 0f       	add	r18, r24
 59e:	2a 30       	cpi	r18, 0x0A	; 10
 5a0:	40 f0       	brcs	.+16     	; 0x5b2 <vfprintf+0xb4>
 5a2:	8e 32       	cpi	r24, 0x2E	; 46
 5a4:	b9 f4       	brne	.+46     	; 0x5d4 <vfprintf+0xd6>
 5a6:	36 fc       	sbrc	r3, 6
 5a8:	81 c1       	rjmp	.+770    	; 0x8ac <__stack+0x4d>
 5aa:	23 2d       	mov	r18, r3
 5ac:	20 64       	ori	r18, 0x40	; 64
 5ae:	32 2e       	mov	r3, r18
 5b0:	19 c0       	rjmp	.+50     	; 0x5e4 <vfprintf+0xe6>
 5b2:	36 fe       	sbrs	r3, 6
 5b4:	06 c0       	rjmp	.+12     	; 0x5c2 <vfprintf+0xc4>
 5b6:	8a e0       	ldi	r24, 0x0A	; 10
 5b8:	98 9e       	mul	r9, r24
 5ba:	20 0d       	add	r18, r0
 5bc:	11 24       	eor	r1, r1
 5be:	92 2e       	mov	r9, r18
 5c0:	11 c0       	rjmp	.+34     	; 0x5e4 <vfprintf+0xe6>
 5c2:	ea e0       	ldi	r30, 0x0A	; 10
 5c4:	2e 9e       	mul	r2, r30
 5c6:	20 0d       	add	r18, r0
 5c8:	11 24       	eor	r1, r1
 5ca:	22 2e       	mov	r2, r18
 5cc:	f3 2d       	mov	r31, r3
 5ce:	f0 62       	ori	r31, 0x20	; 32
 5d0:	3f 2e       	mov	r3, r31
 5d2:	08 c0       	rjmp	.+16     	; 0x5e4 <vfprintf+0xe6>
 5d4:	8c 36       	cpi	r24, 0x6C	; 108
 5d6:	21 f4       	brne	.+8      	; 0x5e0 <vfprintf+0xe2>
 5d8:	83 2d       	mov	r24, r3
 5da:	80 68       	ori	r24, 0x80	; 128
 5dc:	38 2e       	mov	r3, r24
 5de:	02 c0       	rjmp	.+4      	; 0x5e4 <vfprintf+0xe6>
 5e0:	88 36       	cpi	r24, 0x68	; 104
 5e2:	41 f4       	brne	.+16     	; 0x5f4 <vfprintf+0xf6>
 5e4:	f7 01       	movw	r30, r14
 5e6:	93 fd       	sbrc	r25, 3
 5e8:	85 91       	lpm	r24, Z+
 5ea:	93 ff       	sbrs	r25, 3
 5ec:	81 91       	ld	r24, Z+
 5ee:	7f 01       	movw	r14, r30
 5f0:	81 11       	cpse	r24, r1
 5f2:	b3 cf       	rjmp	.-154    	; 0x55a <vfprintf+0x5c>
 5f4:	98 2f       	mov	r25, r24
 5f6:	9f 7d       	andi	r25, 0xDF	; 223
 5f8:	95 54       	subi	r25, 0x45	; 69
 5fa:	93 30       	cpi	r25, 0x03	; 3
 5fc:	28 f4       	brcc	.+10     	; 0x608 <vfprintf+0x10a>
 5fe:	0c 5f       	subi	r16, 0xFC	; 252
 600:	1f 4f       	sbci	r17, 0xFF	; 255
 602:	9f e3       	ldi	r25, 0x3F	; 63
 604:	99 83       	std	Y+1, r25	; 0x01
 606:	0d c0       	rjmp	.+26     	; 0x622 <vfprintf+0x124>
 608:	83 36       	cpi	r24, 0x63	; 99
 60a:	31 f0       	breq	.+12     	; 0x618 <vfprintf+0x11a>
 60c:	83 37       	cpi	r24, 0x73	; 115
 60e:	71 f0       	breq	.+28     	; 0x62c <vfprintf+0x12e>
 610:	83 35       	cpi	r24, 0x53	; 83
 612:	09 f0       	breq	.+2      	; 0x616 <vfprintf+0x118>
 614:	59 c0       	rjmp	.+178    	; 0x6c8 <vfprintf+0x1ca>
 616:	21 c0       	rjmp	.+66     	; 0x65a <vfprintf+0x15c>
 618:	f8 01       	movw	r30, r16
 61a:	80 81       	ld	r24, Z
 61c:	89 83       	std	Y+1, r24	; 0x01
 61e:	0e 5f       	subi	r16, 0xFE	; 254
 620:	1f 4f       	sbci	r17, 0xFF	; 255
 622:	88 24       	eor	r8, r8
 624:	83 94       	inc	r8
 626:	91 2c       	mov	r9, r1
 628:	53 01       	movw	r10, r6
 62a:	13 c0       	rjmp	.+38     	; 0x652 <vfprintf+0x154>
 62c:	28 01       	movw	r4, r16
 62e:	f2 e0       	ldi	r31, 0x02	; 2
 630:	4f 0e       	add	r4, r31
 632:	51 1c       	adc	r5, r1
 634:	f8 01       	movw	r30, r16
 636:	a0 80       	ld	r10, Z
 638:	b1 80       	ldd	r11, Z+1	; 0x01
 63a:	36 fe       	sbrs	r3, 6
 63c:	03 c0       	rjmp	.+6      	; 0x644 <vfprintf+0x146>
 63e:	69 2d       	mov	r22, r9
 640:	70 e0       	ldi	r23, 0x00	; 0
 642:	02 c0       	rjmp	.+4      	; 0x648 <vfprintf+0x14a>
 644:	6f ef       	ldi	r22, 0xFF	; 255
 646:	7f ef       	ldi	r23, 0xFF	; 255
 648:	c5 01       	movw	r24, r10
 64a:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <strnlen>
 64e:	4c 01       	movw	r8, r24
 650:	82 01       	movw	r16, r4
 652:	f3 2d       	mov	r31, r3
 654:	ff 77       	andi	r31, 0x7F	; 127
 656:	3f 2e       	mov	r3, r31
 658:	16 c0       	rjmp	.+44     	; 0x686 <vfprintf+0x188>
 65a:	28 01       	movw	r4, r16
 65c:	22 e0       	ldi	r18, 0x02	; 2
 65e:	42 0e       	add	r4, r18
 660:	51 1c       	adc	r5, r1
 662:	f8 01       	movw	r30, r16
 664:	a0 80       	ld	r10, Z
 666:	b1 80       	ldd	r11, Z+1	; 0x01
 668:	36 fe       	sbrs	r3, 6
 66a:	03 c0       	rjmp	.+6      	; 0x672 <vfprintf+0x174>
 66c:	69 2d       	mov	r22, r9
 66e:	70 e0       	ldi	r23, 0x00	; 0
 670:	02 c0       	rjmp	.+4      	; 0x676 <vfprintf+0x178>
 672:	6f ef       	ldi	r22, 0xFF	; 255
 674:	7f ef       	ldi	r23, 0xFF	; 255
 676:	c5 01       	movw	r24, r10
 678:	0e 94 60 04 	call	0x8c0	; 0x8c0 <strnlen_P>
 67c:	4c 01       	movw	r8, r24
 67e:	f3 2d       	mov	r31, r3
 680:	f0 68       	ori	r31, 0x80	; 128
 682:	3f 2e       	mov	r3, r31
 684:	82 01       	movw	r16, r4
 686:	33 fc       	sbrc	r3, 3
 688:	1b c0       	rjmp	.+54     	; 0x6c0 <vfprintf+0x1c2>
 68a:	82 2d       	mov	r24, r2
 68c:	90 e0       	ldi	r25, 0x00	; 0
 68e:	88 16       	cp	r8, r24
 690:	99 06       	cpc	r9, r25
 692:	b0 f4       	brcc	.+44     	; 0x6c0 <vfprintf+0x1c2>
 694:	b6 01       	movw	r22, r12
 696:	80 e2       	ldi	r24, 0x20	; 32
 698:	90 e0       	ldi	r25, 0x00	; 0
 69a:	0e 94 76 04 	call	0x8ec	; 0x8ec <fputc>
 69e:	2a 94       	dec	r2
 6a0:	f4 cf       	rjmp	.-24     	; 0x68a <vfprintf+0x18c>
 6a2:	f5 01       	movw	r30, r10
 6a4:	37 fc       	sbrc	r3, 7
 6a6:	85 91       	lpm	r24, Z+
 6a8:	37 fe       	sbrs	r3, 7
 6aa:	81 91       	ld	r24, Z+
 6ac:	5f 01       	movw	r10, r30
 6ae:	b6 01       	movw	r22, r12
 6b0:	90 e0       	ldi	r25, 0x00	; 0
 6b2:	0e 94 76 04 	call	0x8ec	; 0x8ec <fputc>
 6b6:	21 10       	cpse	r2, r1
 6b8:	2a 94       	dec	r2
 6ba:	21 e0       	ldi	r18, 0x01	; 1
 6bc:	82 1a       	sub	r8, r18
 6be:	91 08       	sbc	r9, r1
 6c0:	81 14       	cp	r8, r1
 6c2:	91 04       	cpc	r9, r1
 6c4:	71 f7       	brne	.-36     	; 0x6a2 <vfprintf+0x1a4>
 6c6:	e8 c0       	rjmp	.+464    	; 0x898 <__stack+0x39>
 6c8:	84 36       	cpi	r24, 0x64	; 100
 6ca:	11 f0       	breq	.+4      	; 0x6d0 <vfprintf+0x1d2>
 6cc:	89 36       	cpi	r24, 0x69	; 105
 6ce:	41 f5       	brne	.+80     	; 0x720 <vfprintf+0x222>
 6d0:	f8 01       	movw	r30, r16
 6d2:	37 fe       	sbrs	r3, 7
 6d4:	07 c0       	rjmp	.+14     	; 0x6e4 <vfprintf+0x1e6>
 6d6:	60 81       	ld	r22, Z
 6d8:	71 81       	ldd	r23, Z+1	; 0x01
 6da:	82 81       	ldd	r24, Z+2	; 0x02
 6dc:	93 81       	ldd	r25, Z+3	; 0x03
 6de:	0c 5f       	subi	r16, 0xFC	; 252
 6e0:	1f 4f       	sbci	r17, 0xFF	; 255
 6e2:	08 c0       	rjmp	.+16     	; 0x6f4 <vfprintf+0x1f6>
 6e4:	60 81       	ld	r22, Z
 6e6:	71 81       	ldd	r23, Z+1	; 0x01
 6e8:	07 2e       	mov	r0, r23
 6ea:	00 0c       	add	r0, r0
 6ec:	88 0b       	sbc	r24, r24
 6ee:	99 0b       	sbc	r25, r25
 6f0:	0e 5f       	subi	r16, 0xFE	; 254
 6f2:	1f 4f       	sbci	r17, 0xFF	; 255
 6f4:	f3 2d       	mov	r31, r3
 6f6:	ff 76       	andi	r31, 0x6F	; 111
 6f8:	3f 2e       	mov	r3, r31
 6fa:	97 ff       	sbrs	r25, 7
 6fc:	09 c0       	rjmp	.+18     	; 0x710 <vfprintf+0x212>
 6fe:	90 95       	com	r25
 700:	80 95       	com	r24
 702:	70 95       	com	r23
 704:	61 95       	neg	r22
 706:	7f 4f       	sbci	r23, 0xFF	; 255
 708:	8f 4f       	sbci	r24, 0xFF	; 255
 70a:	9f 4f       	sbci	r25, 0xFF	; 255
 70c:	f0 68       	ori	r31, 0x80	; 128
 70e:	3f 2e       	mov	r3, r31
 710:	2a e0       	ldi	r18, 0x0A	; 10
 712:	30 e0       	ldi	r19, 0x00	; 0
 714:	a3 01       	movw	r20, r6
 716:	0e 94 b2 04 	call	0x964	; 0x964 <__ultoa_invert>
 71a:	88 2e       	mov	r8, r24
 71c:	86 18       	sub	r8, r6
 71e:	45 c0       	rjmp	.+138    	; 0x7aa <vfprintf+0x2ac>
 720:	85 37       	cpi	r24, 0x75	; 117
 722:	31 f4       	brne	.+12     	; 0x730 <vfprintf+0x232>
 724:	23 2d       	mov	r18, r3
 726:	2f 7e       	andi	r18, 0xEF	; 239
 728:	b2 2e       	mov	r11, r18
 72a:	2a e0       	ldi	r18, 0x0A	; 10
 72c:	30 e0       	ldi	r19, 0x00	; 0
 72e:	25 c0       	rjmp	.+74     	; 0x77a <vfprintf+0x27c>
 730:	93 2d       	mov	r25, r3
 732:	99 7f       	andi	r25, 0xF9	; 249
 734:	b9 2e       	mov	r11, r25
 736:	8f 36       	cpi	r24, 0x6F	; 111
 738:	c1 f0       	breq	.+48     	; 0x76a <vfprintf+0x26c>
 73a:	18 f4       	brcc	.+6      	; 0x742 <vfprintf+0x244>
 73c:	88 35       	cpi	r24, 0x58	; 88
 73e:	79 f0       	breq	.+30     	; 0x75e <vfprintf+0x260>
 740:	b5 c0       	rjmp	.+362    	; 0x8ac <__stack+0x4d>
 742:	80 37       	cpi	r24, 0x70	; 112
 744:	19 f0       	breq	.+6      	; 0x74c <vfprintf+0x24e>
 746:	88 37       	cpi	r24, 0x78	; 120
 748:	21 f0       	breq	.+8      	; 0x752 <vfprintf+0x254>
 74a:	b0 c0       	rjmp	.+352    	; 0x8ac <__stack+0x4d>
 74c:	e9 2f       	mov	r30, r25
 74e:	e0 61       	ori	r30, 0x10	; 16
 750:	be 2e       	mov	r11, r30
 752:	b4 fe       	sbrs	r11, 4
 754:	0d c0       	rjmp	.+26     	; 0x770 <vfprintf+0x272>
 756:	fb 2d       	mov	r31, r11
 758:	f4 60       	ori	r31, 0x04	; 4
 75a:	bf 2e       	mov	r11, r31
 75c:	09 c0       	rjmp	.+18     	; 0x770 <vfprintf+0x272>
 75e:	34 fe       	sbrs	r3, 4
 760:	0a c0       	rjmp	.+20     	; 0x776 <vfprintf+0x278>
 762:	29 2f       	mov	r18, r25
 764:	26 60       	ori	r18, 0x06	; 6
 766:	b2 2e       	mov	r11, r18
 768:	06 c0       	rjmp	.+12     	; 0x776 <vfprintf+0x278>
 76a:	28 e0       	ldi	r18, 0x08	; 8
 76c:	30 e0       	ldi	r19, 0x00	; 0
 76e:	05 c0       	rjmp	.+10     	; 0x77a <vfprintf+0x27c>
 770:	20 e1       	ldi	r18, 0x10	; 16
 772:	30 e0       	ldi	r19, 0x00	; 0
 774:	02 c0       	rjmp	.+4      	; 0x77a <vfprintf+0x27c>
 776:	20 e1       	ldi	r18, 0x10	; 16
 778:	32 e0       	ldi	r19, 0x02	; 2
 77a:	f8 01       	movw	r30, r16
 77c:	b7 fe       	sbrs	r11, 7
 77e:	07 c0       	rjmp	.+14     	; 0x78e <vfprintf+0x290>
 780:	60 81       	ld	r22, Z
 782:	71 81       	ldd	r23, Z+1	; 0x01
 784:	82 81       	ldd	r24, Z+2	; 0x02
 786:	93 81       	ldd	r25, Z+3	; 0x03
 788:	0c 5f       	subi	r16, 0xFC	; 252
 78a:	1f 4f       	sbci	r17, 0xFF	; 255
 78c:	06 c0       	rjmp	.+12     	; 0x79a <vfprintf+0x29c>
 78e:	60 81       	ld	r22, Z
 790:	71 81       	ldd	r23, Z+1	; 0x01
 792:	80 e0       	ldi	r24, 0x00	; 0
 794:	90 e0       	ldi	r25, 0x00	; 0
 796:	0e 5f       	subi	r16, 0xFE	; 254
 798:	1f 4f       	sbci	r17, 0xFF	; 255
 79a:	a3 01       	movw	r20, r6
 79c:	0e 94 b2 04 	call	0x964	; 0x964 <__ultoa_invert>
 7a0:	88 2e       	mov	r8, r24
 7a2:	86 18       	sub	r8, r6
 7a4:	fb 2d       	mov	r31, r11
 7a6:	ff 77       	andi	r31, 0x7F	; 127
 7a8:	3f 2e       	mov	r3, r31
 7aa:	36 fe       	sbrs	r3, 6
 7ac:	0d c0       	rjmp	.+26     	; 0x7c8 <vfprintf+0x2ca>
 7ae:	23 2d       	mov	r18, r3
 7b0:	2e 7f       	andi	r18, 0xFE	; 254
 7b2:	a2 2e       	mov	r10, r18
 7b4:	89 14       	cp	r8, r9
 7b6:	58 f4       	brcc	.+22     	; 0x7ce <vfprintf+0x2d0>
 7b8:	34 fe       	sbrs	r3, 4
 7ba:	0b c0       	rjmp	.+22     	; 0x7d2 <vfprintf+0x2d4>
 7bc:	32 fc       	sbrc	r3, 2
 7be:	09 c0       	rjmp	.+18     	; 0x7d2 <vfprintf+0x2d4>
 7c0:	83 2d       	mov	r24, r3
 7c2:	8e 7e       	andi	r24, 0xEE	; 238
 7c4:	a8 2e       	mov	r10, r24
 7c6:	05 c0       	rjmp	.+10     	; 0x7d2 <vfprintf+0x2d4>
 7c8:	b8 2c       	mov	r11, r8
 7ca:	a3 2c       	mov	r10, r3
 7cc:	03 c0       	rjmp	.+6      	; 0x7d4 <vfprintf+0x2d6>
 7ce:	b8 2c       	mov	r11, r8
 7d0:	01 c0       	rjmp	.+2      	; 0x7d4 <vfprintf+0x2d6>
 7d2:	b9 2c       	mov	r11, r9
 7d4:	a4 fe       	sbrs	r10, 4
 7d6:	0f c0       	rjmp	.+30     	; 0x7f6 <vfprintf+0x2f8>
 7d8:	fe 01       	movw	r30, r28
 7da:	e8 0d       	add	r30, r8
 7dc:	f1 1d       	adc	r31, r1
 7de:	80 81       	ld	r24, Z
 7e0:	80 33       	cpi	r24, 0x30	; 48
 7e2:	21 f4       	brne	.+8      	; 0x7ec <vfprintf+0x2ee>
 7e4:	9a 2d       	mov	r25, r10
 7e6:	99 7e       	andi	r25, 0xE9	; 233
 7e8:	a9 2e       	mov	r10, r25
 7ea:	09 c0       	rjmp	.+18     	; 0x7fe <vfprintf+0x300>
 7ec:	a2 fe       	sbrs	r10, 2
 7ee:	06 c0       	rjmp	.+12     	; 0x7fc <vfprintf+0x2fe>
 7f0:	b3 94       	inc	r11
 7f2:	b3 94       	inc	r11
 7f4:	04 c0       	rjmp	.+8      	; 0x7fe <vfprintf+0x300>
 7f6:	8a 2d       	mov	r24, r10
 7f8:	86 78       	andi	r24, 0x86	; 134
 7fa:	09 f0       	breq	.+2      	; 0x7fe <vfprintf+0x300>
 7fc:	b3 94       	inc	r11
 7fe:	a3 fc       	sbrc	r10, 3
 800:	11 c0       	rjmp	.+34     	; 0x824 <vfprintf+0x326>
 802:	a0 fe       	sbrs	r10, 0
 804:	06 c0       	rjmp	.+12     	; 0x812 <vfprintf+0x314>
 806:	b2 14       	cp	r11, r2
 808:	88 f4       	brcc	.+34     	; 0x82c <vfprintf+0x32e>
 80a:	28 0c       	add	r2, r8
 80c:	92 2c       	mov	r9, r2
 80e:	9b 18       	sub	r9, r11
 810:	0e c0       	rjmp	.+28     	; 0x82e <vfprintf+0x330>
 812:	b2 14       	cp	r11, r2
 814:	60 f4       	brcc	.+24     	; 0x82e <vfprintf+0x330>
 816:	b6 01       	movw	r22, r12
 818:	80 e2       	ldi	r24, 0x20	; 32
 81a:	90 e0       	ldi	r25, 0x00	; 0
 81c:	0e 94 76 04 	call	0x8ec	; 0x8ec <fputc>
 820:	b3 94       	inc	r11
 822:	f7 cf       	rjmp	.-18     	; 0x812 <vfprintf+0x314>
 824:	b2 14       	cp	r11, r2
 826:	18 f4       	brcc	.+6      	; 0x82e <vfprintf+0x330>
 828:	2b 18       	sub	r2, r11
 82a:	02 c0       	rjmp	.+4      	; 0x830 <vfprintf+0x332>
 82c:	98 2c       	mov	r9, r8
 82e:	21 2c       	mov	r2, r1
 830:	a4 fe       	sbrs	r10, 4
 832:	10 c0       	rjmp	.+32     	; 0x854 <vfprintf+0x356>
 834:	b6 01       	movw	r22, r12
 836:	80 e3       	ldi	r24, 0x30	; 48
 838:	90 e0       	ldi	r25, 0x00	; 0
 83a:	0e 94 76 04 	call	0x8ec	; 0x8ec <fputc>
 83e:	a2 fe       	sbrs	r10, 2
 840:	17 c0       	rjmp	.+46     	; 0x870 <__stack+0x11>
 842:	a1 fc       	sbrc	r10, 1
 844:	03 c0       	rjmp	.+6      	; 0x84c <vfprintf+0x34e>
 846:	88 e7       	ldi	r24, 0x78	; 120
 848:	90 e0       	ldi	r25, 0x00	; 0
 84a:	02 c0       	rjmp	.+4      	; 0x850 <vfprintf+0x352>
 84c:	88 e5       	ldi	r24, 0x58	; 88
 84e:	90 e0       	ldi	r25, 0x00	; 0
 850:	b6 01       	movw	r22, r12
 852:	0c c0       	rjmp	.+24     	; 0x86c <__stack+0xd>
 854:	8a 2d       	mov	r24, r10
 856:	86 78       	andi	r24, 0x86	; 134
 858:	59 f0       	breq	.+22     	; 0x870 <__stack+0x11>
 85a:	a1 fe       	sbrs	r10, 1
 85c:	02 c0       	rjmp	.+4      	; 0x862 <__stack+0x3>
 85e:	8b e2       	ldi	r24, 0x2B	; 43
 860:	01 c0       	rjmp	.+2      	; 0x864 <__stack+0x5>
 862:	80 e2       	ldi	r24, 0x20	; 32
 864:	a7 fc       	sbrc	r10, 7
 866:	8d e2       	ldi	r24, 0x2D	; 45
 868:	b6 01       	movw	r22, r12
 86a:	90 e0       	ldi	r25, 0x00	; 0
 86c:	0e 94 76 04 	call	0x8ec	; 0x8ec <fputc>
 870:	89 14       	cp	r8, r9
 872:	38 f4       	brcc	.+14     	; 0x882 <__stack+0x23>
 874:	b6 01       	movw	r22, r12
 876:	80 e3       	ldi	r24, 0x30	; 48
 878:	90 e0       	ldi	r25, 0x00	; 0
 87a:	0e 94 76 04 	call	0x8ec	; 0x8ec <fputc>
 87e:	9a 94       	dec	r9
 880:	f7 cf       	rjmp	.-18     	; 0x870 <__stack+0x11>
 882:	8a 94       	dec	r8
 884:	f3 01       	movw	r30, r6
 886:	e8 0d       	add	r30, r8
 888:	f1 1d       	adc	r31, r1
 88a:	80 81       	ld	r24, Z
 88c:	b6 01       	movw	r22, r12
 88e:	90 e0       	ldi	r25, 0x00	; 0
 890:	0e 94 76 04 	call	0x8ec	; 0x8ec <fputc>
 894:	81 10       	cpse	r8, r1
 896:	f5 cf       	rjmp	.-22     	; 0x882 <__stack+0x23>
 898:	22 20       	and	r2, r2
 89a:	09 f4       	brne	.+2      	; 0x89e <__stack+0x3f>
 89c:	42 ce       	rjmp	.-892    	; 0x522 <vfprintf+0x24>
 89e:	b6 01       	movw	r22, r12
 8a0:	80 e2       	ldi	r24, 0x20	; 32
 8a2:	90 e0       	ldi	r25, 0x00	; 0
 8a4:	0e 94 76 04 	call	0x8ec	; 0x8ec <fputc>
 8a8:	2a 94       	dec	r2
 8aa:	f6 cf       	rjmp	.-20     	; 0x898 <__stack+0x39>
 8ac:	f6 01       	movw	r30, r12
 8ae:	86 81       	ldd	r24, Z+6	; 0x06
 8b0:	97 81       	ldd	r25, Z+7	; 0x07
 8b2:	02 c0       	rjmp	.+4      	; 0x8b8 <__stack+0x59>
 8b4:	8f ef       	ldi	r24, 0xFF	; 255
 8b6:	9f ef       	ldi	r25, 0xFF	; 255
 8b8:	2b 96       	adiw	r28, 0x0b	; 11
 8ba:	e2 e1       	ldi	r30, 0x12	; 18
 8bc:	0c 94 2c 05 	jmp	0xa58	; 0xa58 <__epilogue_restores__>

000008c0 <strnlen_P>:
 8c0:	fc 01       	movw	r30, r24
 8c2:	05 90       	lpm	r0, Z+
 8c4:	61 50       	subi	r22, 0x01	; 1
 8c6:	70 40       	sbci	r23, 0x00	; 0
 8c8:	01 10       	cpse	r0, r1
 8ca:	d8 f7       	brcc	.-10     	; 0x8c2 <strnlen_P+0x2>
 8cc:	80 95       	com	r24
 8ce:	90 95       	com	r25
 8d0:	8e 0f       	add	r24, r30
 8d2:	9f 1f       	adc	r25, r31
 8d4:	08 95       	ret

000008d6 <strnlen>:
 8d6:	fc 01       	movw	r30, r24
 8d8:	61 50       	subi	r22, 0x01	; 1
 8da:	70 40       	sbci	r23, 0x00	; 0
 8dc:	01 90       	ld	r0, Z+
 8de:	01 10       	cpse	r0, r1
 8e0:	d8 f7       	brcc	.-10     	; 0x8d8 <strnlen+0x2>
 8e2:	80 95       	com	r24
 8e4:	90 95       	com	r25
 8e6:	8e 0f       	add	r24, r30
 8e8:	9f 1f       	adc	r25, r31
 8ea:	08 95       	ret

000008ec <fputc>:
 8ec:	0f 93       	push	r16
 8ee:	1f 93       	push	r17
 8f0:	cf 93       	push	r28
 8f2:	df 93       	push	r29
 8f4:	fb 01       	movw	r30, r22
 8f6:	23 81       	ldd	r18, Z+3	; 0x03
 8f8:	21 fd       	sbrc	r18, 1
 8fa:	03 c0       	rjmp	.+6      	; 0x902 <fputc+0x16>
 8fc:	8f ef       	ldi	r24, 0xFF	; 255
 8fe:	9f ef       	ldi	r25, 0xFF	; 255
 900:	2c c0       	rjmp	.+88     	; 0x95a <fputc+0x6e>
 902:	22 ff       	sbrs	r18, 2
 904:	16 c0       	rjmp	.+44     	; 0x932 <fputc+0x46>
 906:	46 81       	ldd	r20, Z+6	; 0x06
 908:	57 81       	ldd	r21, Z+7	; 0x07
 90a:	24 81       	ldd	r18, Z+4	; 0x04
 90c:	35 81       	ldd	r19, Z+5	; 0x05
 90e:	42 17       	cp	r20, r18
 910:	53 07       	cpc	r21, r19
 912:	44 f4       	brge	.+16     	; 0x924 <fputc+0x38>
 914:	a0 81       	ld	r26, Z
 916:	b1 81       	ldd	r27, Z+1	; 0x01
 918:	9d 01       	movw	r18, r26
 91a:	2f 5f       	subi	r18, 0xFF	; 255
 91c:	3f 4f       	sbci	r19, 0xFF	; 255
 91e:	31 83       	std	Z+1, r19	; 0x01
 920:	20 83       	st	Z, r18
 922:	8c 93       	st	X, r24
 924:	26 81       	ldd	r18, Z+6	; 0x06
 926:	37 81       	ldd	r19, Z+7	; 0x07
 928:	2f 5f       	subi	r18, 0xFF	; 255
 92a:	3f 4f       	sbci	r19, 0xFF	; 255
 92c:	37 83       	std	Z+7, r19	; 0x07
 92e:	26 83       	std	Z+6, r18	; 0x06
 930:	14 c0       	rjmp	.+40     	; 0x95a <fputc+0x6e>
 932:	8b 01       	movw	r16, r22
 934:	ec 01       	movw	r28, r24
 936:	fb 01       	movw	r30, r22
 938:	00 84       	ldd	r0, Z+8	; 0x08
 93a:	f1 85       	ldd	r31, Z+9	; 0x09
 93c:	e0 2d       	mov	r30, r0
 93e:	09 95       	icall
 940:	89 2b       	or	r24, r25
 942:	e1 f6       	brne	.-72     	; 0x8fc <fputc+0x10>
 944:	d8 01       	movw	r26, r16
 946:	16 96       	adiw	r26, 0x06	; 6
 948:	8d 91       	ld	r24, X+
 94a:	9c 91       	ld	r25, X
 94c:	17 97       	sbiw	r26, 0x07	; 7
 94e:	01 96       	adiw	r24, 0x01	; 1
 950:	17 96       	adiw	r26, 0x07	; 7
 952:	9c 93       	st	X, r25
 954:	8e 93       	st	-X, r24
 956:	16 97       	sbiw	r26, 0x06	; 6
 958:	ce 01       	movw	r24, r28
 95a:	df 91       	pop	r29
 95c:	cf 91       	pop	r28
 95e:	1f 91       	pop	r17
 960:	0f 91       	pop	r16
 962:	08 95       	ret

00000964 <__ultoa_invert>:
 964:	fa 01       	movw	r30, r20
 966:	aa 27       	eor	r26, r26
 968:	28 30       	cpi	r18, 0x08	; 8
 96a:	51 f1       	breq	.+84     	; 0x9c0 <__ultoa_invert+0x5c>
 96c:	20 31       	cpi	r18, 0x10	; 16
 96e:	81 f1       	breq	.+96     	; 0x9d0 <__ultoa_invert+0x6c>
 970:	e8 94       	clt
 972:	6f 93       	push	r22
 974:	6e 7f       	andi	r22, 0xFE	; 254
 976:	6e 5f       	subi	r22, 0xFE	; 254
 978:	7f 4f       	sbci	r23, 0xFF	; 255
 97a:	8f 4f       	sbci	r24, 0xFF	; 255
 97c:	9f 4f       	sbci	r25, 0xFF	; 255
 97e:	af 4f       	sbci	r26, 0xFF	; 255
 980:	b1 e0       	ldi	r27, 0x01	; 1
 982:	3e d0       	rcall	.+124    	; 0xa00 <__ultoa_invert+0x9c>
 984:	b4 e0       	ldi	r27, 0x04	; 4
 986:	3c d0       	rcall	.+120    	; 0xa00 <__ultoa_invert+0x9c>
 988:	67 0f       	add	r22, r23
 98a:	78 1f       	adc	r23, r24
 98c:	89 1f       	adc	r24, r25
 98e:	9a 1f       	adc	r25, r26
 990:	a1 1d       	adc	r26, r1
 992:	68 0f       	add	r22, r24
 994:	79 1f       	adc	r23, r25
 996:	8a 1f       	adc	r24, r26
 998:	91 1d       	adc	r25, r1
 99a:	a1 1d       	adc	r26, r1
 99c:	6a 0f       	add	r22, r26
 99e:	71 1d       	adc	r23, r1
 9a0:	81 1d       	adc	r24, r1
 9a2:	91 1d       	adc	r25, r1
 9a4:	a1 1d       	adc	r26, r1
 9a6:	20 d0       	rcall	.+64     	; 0x9e8 <__ultoa_invert+0x84>
 9a8:	09 f4       	brne	.+2      	; 0x9ac <__ultoa_invert+0x48>
 9aa:	68 94       	set
 9ac:	3f 91       	pop	r19
 9ae:	2a e0       	ldi	r18, 0x0A	; 10
 9b0:	26 9f       	mul	r18, r22
 9b2:	11 24       	eor	r1, r1
 9b4:	30 19       	sub	r19, r0
 9b6:	30 5d       	subi	r19, 0xD0	; 208
 9b8:	31 93       	st	Z+, r19
 9ba:	de f6       	brtc	.-74     	; 0x972 <__ultoa_invert+0xe>
 9bc:	cf 01       	movw	r24, r30
 9be:	08 95       	ret
 9c0:	46 2f       	mov	r20, r22
 9c2:	47 70       	andi	r20, 0x07	; 7
 9c4:	40 5d       	subi	r20, 0xD0	; 208
 9c6:	41 93       	st	Z+, r20
 9c8:	b3 e0       	ldi	r27, 0x03	; 3
 9ca:	0f d0       	rcall	.+30     	; 0x9ea <__ultoa_invert+0x86>
 9cc:	c9 f7       	brne	.-14     	; 0x9c0 <__ultoa_invert+0x5c>
 9ce:	f6 cf       	rjmp	.-20     	; 0x9bc <__ultoa_invert+0x58>
 9d0:	46 2f       	mov	r20, r22
 9d2:	4f 70       	andi	r20, 0x0F	; 15
 9d4:	40 5d       	subi	r20, 0xD0	; 208
 9d6:	4a 33       	cpi	r20, 0x3A	; 58
 9d8:	18 f0       	brcs	.+6      	; 0x9e0 <__ultoa_invert+0x7c>
 9da:	49 5d       	subi	r20, 0xD9	; 217
 9dc:	31 fd       	sbrc	r19, 1
 9de:	40 52       	subi	r20, 0x20	; 32
 9e0:	41 93       	st	Z+, r20
 9e2:	02 d0       	rcall	.+4      	; 0x9e8 <__ultoa_invert+0x84>
 9e4:	a9 f7       	brne	.-22     	; 0x9d0 <__ultoa_invert+0x6c>
 9e6:	ea cf       	rjmp	.-44     	; 0x9bc <__ultoa_invert+0x58>
 9e8:	b4 e0       	ldi	r27, 0x04	; 4
 9ea:	a6 95       	lsr	r26
 9ec:	97 95       	ror	r25
 9ee:	87 95       	ror	r24
 9f0:	77 95       	ror	r23
 9f2:	67 95       	ror	r22
 9f4:	ba 95       	dec	r27
 9f6:	c9 f7       	brne	.-14     	; 0x9ea <__ultoa_invert+0x86>
 9f8:	00 97       	sbiw	r24, 0x00	; 0
 9fa:	61 05       	cpc	r22, r1
 9fc:	71 05       	cpc	r23, r1
 9fe:	08 95       	ret
 a00:	9b 01       	movw	r18, r22
 a02:	ac 01       	movw	r20, r24
 a04:	0a 2e       	mov	r0, r26
 a06:	06 94       	lsr	r0
 a08:	57 95       	ror	r21
 a0a:	47 95       	ror	r20
 a0c:	37 95       	ror	r19
 a0e:	27 95       	ror	r18
 a10:	ba 95       	dec	r27
 a12:	c9 f7       	brne	.-14     	; 0xa06 <__ultoa_invert+0xa2>
 a14:	62 0f       	add	r22, r18
 a16:	73 1f       	adc	r23, r19
 a18:	84 1f       	adc	r24, r20
 a1a:	95 1f       	adc	r25, r21
 a1c:	a0 1d       	adc	r26, r0
 a1e:	08 95       	ret

00000a20 <__prologue_saves__>:
 a20:	2f 92       	push	r2
 a22:	3f 92       	push	r3
 a24:	4f 92       	push	r4
 a26:	5f 92       	push	r5
 a28:	6f 92       	push	r6
 a2a:	7f 92       	push	r7
 a2c:	8f 92       	push	r8
 a2e:	9f 92       	push	r9
 a30:	af 92       	push	r10
 a32:	bf 92       	push	r11
 a34:	cf 92       	push	r12
 a36:	df 92       	push	r13
 a38:	ef 92       	push	r14
 a3a:	ff 92       	push	r15
 a3c:	0f 93       	push	r16
 a3e:	1f 93       	push	r17
 a40:	cf 93       	push	r28
 a42:	df 93       	push	r29
 a44:	cd b7       	in	r28, 0x3d	; 61
 a46:	de b7       	in	r29, 0x3e	; 62
 a48:	ca 1b       	sub	r28, r26
 a4a:	db 0b       	sbc	r29, r27
 a4c:	0f b6       	in	r0, 0x3f	; 63
 a4e:	f8 94       	cli
 a50:	de bf       	out	0x3e, r29	; 62
 a52:	0f be       	out	0x3f, r0	; 63
 a54:	cd bf       	out	0x3d, r28	; 61
 a56:	09 94       	ijmp

00000a58 <__epilogue_restores__>:
 a58:	2a 88       	ldd	r2, Y+18	; 0x12
 a5a:	39 88       	ldd	r3, Y+17	; 0x11
 a5c:	48 88       	ldd	r4, Y+16	; 0x10
 a5e:	5f 84       	ldd	r5, Y+15	; 0x0f
 a60:	6e 84       	ldd	r6, Y+14	; 0x0e
 a62:	7d 84       	ldd	r7, Y+13	; 0x0d
 a64:	8c 84       	ldd	r8, Y+12	; 0x0c
 a66:	9b 84       	ldd	r9, Y+11	; 0x0b
 a68:	aa 84       	ldd	r10, Y+10	; 0x0a
 a6a:	b9 84       	ldd	r11, Y+9	; 0x09
 a6c:	c8 84       	ldd	r12, Y+8	; 0x08
 a6e:	df 80       	ldd	r13, Y+7	; 0x07
 a70:	ee 80       	ldd	r14, Y+6	; 0x06
 a72:	fd 80       	ldd	r15, Y+5	; 0x05
 a74:	0c 81       	ldd	r16, Y+4	; 0x04
 a76:	1b 81       	ldd	r17, Y+3	; 0x03
 a78:	aa 81       	ldd	r26, Y+2	; 0x02
 a7a:	b9 81       	ldd	r27, Y+1	; 0x01
 a7c:	ce 0f       	add	r28, r30
 a7e:	d1 1d       	adc	r29, r1
 a80:	0f b6       	in	r0, 0x3f	; 63
 a82:	f8 94       	cli
 a84:	de bf       	out	0x3e, r29	; 62
 a86:	0f be       	out	0x3f, r0	; 63
 a88:	cd bf       	out	0x3d, r28	; 61
 a8a:	ed 01       	movw	r28, r26
 a8c:	08 95       	ret

00000a8e <_exit>:
 a8e:	f8 94       	cli

00000a90 <__stop_program>:
 a90:	ff cf       	rjmp	.-2      	; 0xa90 <__stop_program>
