
Atmega32 drivers.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000020b6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000014  00800060  000020b6  0000212a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      0000005c  00000000  00000000  0000213e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000219c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000e8  00000000  00000000  000021d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000134c  00000000  00000000  000022c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000816  00000000  00000000  0000360c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000d4a  00000000  00000000  00003e22  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000002d0  00000000  00000000  00004b6c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004c4  00000000  00000000  00004e3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000005ce  00000000  00000000  00005300  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000b8  00000000  00000000  000058ce  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e6 eb       	ldi	r30, 0xB6	; 182
      68:	f0 e2       	ldi	r31, 0x20	; 32
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a4 37       	cpi	r26, 0x74	; 116
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
      76:	0e 94 41 00 	call	0x82	; 0x82 <main>
      7a:	0c 94 59 10 	jmp	0x20b2	; 0x20b2 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:

#include "includes.h"
#include "LCD.h"
#include <math.h>
void main(void)
{
      82:	cf 92       	push	r12
      84:	df 92       	push	r13
      86:	ef 92       	push	r14
      88:	ff 92       	push	r15
      8a:	cf 93       	push	r28
      8c:	df 93       	push	r29
      8e:	cd b7       	in	r28, 0x3d	; 61
      90:	de b7       	in	r29, 0x3e	; 62
      92:	ac 97       	sbiw	r28, 0x2c	; 44
      94:	0f b6       	in	r0, 0x3f	; 63
      96:	f8 94       	cli
      98:	de bf       	out	0x3e, r29	; 62
      9a:	0f be       	out	0x3f, r0	; 63
      9c:	cd bf       	out	0x3d, r28	; 61
	LCD_init();	
      9e:	0e 94 2e 02 	call	0x45c	; 0x45c <LCD_init>
	
    /* Replace with your application code */
	 pinDirection(PB4,INPUT);
      a2:	60 e0       	ldi	r22, 0x00	; 0
      a4:	8c e0       	ldi	r24, 0x0C	; 12
      a6:	0e 94 f5 09 	call	0x13ea	; 0x13ea <pinDirection>
	 
	u32 count=0,i=0;
      aa:	19 82       	std	Y+1, r1	; 0x01
      ac:	1a 82       	std	Y+2, r1	; 0x02
      ae:	1b 82       	std	Y+3, r1	; 0x03
      b0:	1c 82       	std	Y+4, r1	; 0x04
      b2:	1d 82       	std	Y+5, r1	; 0x05
      b4:	1e 82       	std	Y+6, r1	; 0x06
      b6:	1f 82       	std	Y+7, r1	; 0x07
      b8:	18 86       	std	Y+8, r1	; 0x08
	u32 delay =1000,row=1;
      ba:	88 ee       	ldi	r24, 0xE8	; 232
      bc:	93 e0       	ldi	r25, 0x03	; 3
      be:	a0 e0       	ldi	r26, 0x00	; 0
      c0:	b0 e0       	ldi	r27, 0x00	; 0
      c2:	89 87       	std	Y+9, r24	; 0x09
      c4:	9a 87       	std	Y+10, r25	; 0x0a
      c6:	ab 87       	std	Y+11, r26	; 0x0b
      c8:	bc 87       	std	Y+12, r27	; 0x0c
      ca:	81 e0       	ldi	r24, 0x01	; 1
      cc:	90 e0       	ldi	r25, 0x00	; 0
      ce:	a0 e0       	ldi	r26, 0x00	; 0
      d0:	b0 e0       	ldi	r27, 0x00	; 0
      d2:	8d 87       	std	Y+13, r24	; 0x0d
      d4:	9e 87       	std	Y+14, r25	; 0x0e
      d6:	af 87       	std	Y+15, r26	; 0x0f
      d8:	b8 8b       	std	Y+16, r27	; 0x10
	disp_strXY(1,1,"counter = ");
      da:	40 e6       	ldi	r20, 0x60	; 96
      dc:	50 e0       	ldi	r21, 0x00	; 0
      de:	61 e0       	ldi	r22, 0x01	; 1
      e0:	81 e0       	ldi	r24, 0x01	; 1
      e2:	0e 94 83 08 	call	0x1106	; 0x1106 <disp_strXY>
	//disp_intXY(2,3,2021);
    while (1) 
    {
		delay =1000;
      e6:	88 ee       	ldi	r24, 0xE8	; 232
      e8:	93 e0       	ldi	r25, 0x03	; 3
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	89 87       	std	Y+9, r24	; 0x09
      f0:	9a 87       	std	Y+10, r25	; 0x0a
      f2:	ab 87       	std	Y+11, r26	; 0x0b
      f4:	bc 87       	std	Y+12, r27	; 0x0c
		if (readPin(PB4))
      f6:	8c e0       	ldi	r24, 0x0C	; 12
      f8:	0e 94 ec 0a 	call	0x15d8	; 0x15d8 <readPin>
      fc:	88 23       	and	r24, r24
      fe:	09 f4       	brne	.+2      	; 0x102 <main+0x80>
     100:	f2 c0       	rjmp	.+484    	; 0x2e6 <main+0x264>
		{
			row++;
     102:	8d 85       	ldd	r24, Y+13	; 0x0d
     104:	9e 85       	ldd	r25, Y+14	; 0x0e
     106:	af 85       	ldd	r26, Y+15	; 0x0f
     108:	b8 89       	ldd	r27, Y+16	; 0x10
     10a:	01 96       	adiw	r24, 0x01	; 1
     10c:	a1 1d       	adc	r26, r1
     10e:	b1 1d       	adc	r27, r1
     110:	8d 87       	std	Y+13, r24	; 0x0d
     112:	9e 87       	std	Y+14, r25	; 0x0e
     114:	af 87       	std	Y+15, r26	; 0x0f
     116:	b8 8b       	std	Y+16, r27	; 0x10
			delay=delay/(row*0.2);
     118:	69 85       	ldd	r22, Y+9	; 0x09
     11a:	7a 85       	ldd	r23, Y+10	; 0x0a
     11c:	8b 85       	ldd	r24, Y+11	; 0x0b
     11e:	9c 85       	ldd	r25, Y+12	; 0x0c
     120:	0e 94 5d 0c 	call	0x18ba	; 0x18ba <__floatunsisf>
     124:	6b 01       	movw	r12, r22
     126:	7c 01       	movw	r14, r24
     128:	6d 85       	ldd	r22, Y+13	; 0x0d
     12a:	7e 85       	ldd	r23, Y+14	; 0x0e
     12c:	8f 85       	ldd	r24, Y+15	; 0x0f
     12e:	98 89       	ldd	r25, Y+16	; 0x10
     130:	0e 94 5d 0c 	call	0x18ba	; 0x18ba <__floatunsisf>
     134:	dc 01       	movw	r26, r24
     136:	cb 01       	movw	r24, r22
     138:	2d ec       	ldi	r18, 0xCD	; 205
     13a:	3c ec       	ldi	r19, 0xCC	; 204
     13c:	4c e4       	ldi	r20, 0x4C	; 76
     13e:	5e e3       	ldi	r21, 0x3E	; 62
     140:	bc 01       	movw	r22, r24
     142:	cd 01       	movw	r24, r26
     144:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <__mulsf3>
     148:	dc 01       	movw	r26, r24
     14a:	cb 01       	movw	r24, r22
     14c:	9c 01       	movw	r18, r24
     14e:	ad 01       	movw	r20, r26
     150:	c7 01       	movw	r24, r14
     152:	b6 01       	movw	r22, r12
     154:	0e 94 bc 0b 	call	0x1778	; 0x1778 <__divsf3>
     158:	dc 01       	movw	r26, r24
     15a:	cb 01       	movw	r24, r22
     15c:	bc 01       	movw	r22, r24
     15e:	cd 01       	movw	r24, r26
     160:	0e 94 2e 0c 	call	0x185c	; 0x185c <__fixunssfsi>
     164:	dc 01       	movw	r26, r24
     166:	cb 01       	movw	r24, r22
     168:	89 87       	std	Y+9, r24	; 0x09
     16a:	9a 87       	std	Y+10, r25	; 0x0a
     16c:	ab 87       	std	Y+11, r26	; 0x0b
     16e:	bc 87       	std	Y+12, r27	; 0x0c
			if (delay<20)
     170:	89 85       	ldd	r24, Y+9	; 0x09
     172:	9a 85       	ldd	r25, Y+10	; 0x0a
     174:	ab 85       	ldd	r26, Y+11	; 0x0b
     176:	bc 85       	ldd	r27, Y+12	; 0x0c
     178:	44 97       	sbiw	r24, 0x14	; 20
     17a:	a1 05       	cpc	r26, r1
     17c:	b1 05       	cpc	r27, r1
     17e:	40 f4       	brcc	.+16     	; 0x190 <main+0x10e>
			{
				delay=20;
     180:	84 e1       	ldi	r24, 0x14	; 20
     182:	90 e0       	ldi	r25, 0x00	; 0
     184:	a0 e0       	ldi	r26, 0x00	; 0
     186:	b0 e0       	ldi	r27, 0x00	; 0
     188:	89 87       	std	Y+9, r24	; 0x09
     18a:	9a 87       	std	Y+10, r25	; 0x0a
     18c:	ab 87       	std	Y+11, r26	; 0x0b
     18e:	bc 87       	std	Y+12, r27	; 0x0c
			}
			disp_strXY(1,11,"    ");
     190:	4b e6       	ldi	r20, 0x6B	; 107
     192:	50 e0       	ldi	r21, 0x00	; 0
     194:	6b e0       	ldi	r22, 0x0B	; 11
     196:	81 e0       	ldi	r24, 0x01	; 1
     198:	0e 94 83 08 	call	0x1106	; 0x1106 <disp_strXY>
			disp_intXY(1,11,count++);
     19c:	89 81       	ldd	r24, Y+1	; 0x01
     19e:	9a 81       	ldd	r25, Y+2	; 0x02
     1a0:	ab 81       	ldd	r26, Y+3	; 0x03
     1a2:	bc 81       	ldd	r27, Y+4	; 0x04
     1a4:	9c 01       	movw	r18, r24
     1a6:	ad 01       	movw	r20, r26
     1a8:	2f 5f       	subi	r18, 0xFF	; 255
     1aa:	3f 4f       	sbci	r19, 0xFF	; 255
     1ac:	4f 4f       	sbci	r20, 0xFF	; 255
     1ae:	5f 4f       	sbci	r21, 0xFF	; 255
     1b0:	29 83       	std	Y+1, r18	; 0x01
     1b2:	3a 83       	std	Y+2, r19	; 0x02
     1b4:	4b 83       	std	Y+3, r20	; 0x03
     1b6:	5c 83       	std	Y+4, r21	; 0x04
     1b8:	9c 01       	movw	r18, r24
     1ba:	ad 01       	movw	r20, r26
     1bc:	6b e0       	ldi	r22, 0x0B	; 11
     1be:	81 e0       	ldi	r24, 0x01	; 1
     1c0:	0e 94 dc 08 	call	0x11b8	; 0x11b8 <disp_intXY>
			for (i=0;i<=delay;i++)
     1c4:	1d 82       	std	Y+5, r1	; 0x05
     1c6:	1e 82       	std	Y+6, r1	; 0x06
     1c8:	1f 82       	std	Y+7, r1	; 0x07
     1ca:	18 86       	std	Y+8, r1	; 0x08
     1cc:	7d c0       	rjmp	.+250    	; 0x2c8 <main+0x246>
     1ce:	80 e0       	ldi	r24, 0x00	; 0
     1d0:	90 e0       	ldi	r25, 0x00	; 0
     1d2:	a0 e8       	ldi	r26, 0x80	; 128
     1d4:	bf e3       	ldi	r27, 0x3F	; 63
     1d6:	89 8b       	std	Y+17, r24	; 0x11
     1d8:	9a 8b       	std	Y+18, r25	; 0x12
     1da:	ab 8b       	std	Y+19, r26	; 0x13
     1dc:	bc 8b       	std	Y+20, r27	; 0x14

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     1de:	20 e0       	ldi	r18, 0x00	; 0
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	4a e7       	ldi	r20, 0x7A	; 122
     1e4:	55 e4       	ldi	r21, 0x45	; 69
     1e6:	69 89       	ldd	r22, Y+17	; 0x11
     1e8:	7a 89       	ldd	r23, Y+18	; 0x12
     1ea:	8b 89       	ldd	r24, Y+19	; 0x13
     1ec:	9c 89       	ldd	r25, Y+20	; 0x14
     1ee:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <__mulsf3>
     1f2:	dc 01       	movw	r26, r24
     1f4:	cb 01       	movw	r24, r22
     1f6:	8d 8b       	std	Y+21, r24	; 0x15
     1f8:	9e 8b       	std	Y+22, r25	; 0x16
     1fa:	af 8b       	std	Y+23, r26	; 0x17
     1fc:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     1fe:	20 e0       	ldi	r18, 0x00	; 0
     200:	30 e0       	ldi	r19, 0x00	; 0
     202:	40 e8       	ldi	r20, 0x80	; 128
     204:	5f e3       	ldi	r21, 0x3F	; 63
     206:	6d 89       	ldd	r22, Y+21	; 0x15
     208:	7e 89       	ldd	r23, Y+22	; 0x16
     20a:	8f 89       	ldd	r24, Y+23	; 0x17
     20c:	98 8d       	ldd	r25, Y+24	; 0x18
     20e:	0e 94 b7 0b 	call	0x176e	; 0x176e <__cmpsf2>
     212:	88 23       	and	r24, r24
     214:	2c f4       	brge	.+10     	; 0x220 <main+0x19e>
		__ticks = 1;
     216:	81 e0       	ldi	r24, 0x01	; 1
     218:	90 e0       	ldi	r25, 0x00	; 0
     21a:	9a 8f       	std	Y+26, r25	; 0x1a
     21c:	89 8f       	std	Y+25, r24	; 0x19
     21e:	3f c0       	rjmp	.+126    	; 0x29e <main+0x21c>
	else if (__tmp > 65535)
     220:	20 e0       	ldi	r18, 0x00	; 0
     222:	3f ef       	ldi	r19, 0xFF	; 255
     224:	4f e7       	ldi	r20, 0x7F	; 127
     226:	57 e4       	ldi	r21, 0x47	; 71
     228:	6d 89       	ldd	r22, Y+21	; 0x15
     22a:	7e 89       	ldd	r23, Y+22	; 0x16
     22c:	8f 89       	ldd	r24, Y+23	; 0x17
     22e:	98 8d       	ldd	r25, Y+24	; 0x18
     230:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__gesf2>
     234:	18 16       	cp	r1, r24
     236:	4c f5       	brge	.+82     	; 0x28a <main+0x208>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     238:	20 e0       	ldi	r18, 0x00	; 0
     23a:	30 e0       	ldi	r19, 0x00	; 0
     23c:	40 e2       	ldi	r20, 0x20	; 32
     23e:	51 e4       	ldi	r21, 0x41	; 65
     240:	69 89       	ldd	r22, Y+17	; 0x11
     242:	7a 89       	ldd	r23, Y+18	; 0x12
     244:	8b 89       	ldd	r24, Y+19	; 0x13
     246:	9c 89       	ldd	r25, Y+20	; 0x14
     248:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <__mulsf3>
     24c:	dc 01       	movw	r26, r24
     24e:	cb 01       	movw	r24, r22
     250:	bc 01       	movw	r22, r24
     252:	cd 01       	movw	r24, r26
     254:	0e 94 2e 0c 	call	0x185c	; 0x185c <__fixunssfsi>
     258:	dc 01       	movw	r26, r24
     25a:	cb 01       	movw	r24, r22
     25c:	9a 8f       	std	Y+26, r25	; 0x1a
     25e:	89 8f       	std	Y+25, r24	; 0x19
     260:	0f c0       	rjmp	.+30     	; 0x280 <main+0x1fe>
     262:	80 e9       	ldi	r24, 0x90	; 144
     264:	91 e0       	ldi	r25, 0x01	; 1
     266:	9c 8f       	std	Y+28, r25	; 0x1c
     268:	8b 8f       	std	Y+27, r24	; 0x1b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     26a:	8b 8d       	ldd	r24, Y+27	; 0x1b
     26c:	9c 8d       	ldd	r25, Y+28	; 0x1c
     26e:	01 97       	sbiw	r24, 0x01	; 1
     270:	f1 f7       	brne	.-4      	; 0x26e <main+0x1ec>
     272:	9c 8f       	std	Y+28, r25	; 0x1c
     274:	8b 8f       	std	Y+27, r24	; 0x1b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     276:	89 8d       	ldd	r24, Y+25	; 0x19
     278:	9a 8d       	ldd	r25, Y+26	; 0x1a
     27a:	01 97       	sbiw	r24, 0x01	; 1
     27c:	9a 8f       	std	Y+26, r25	; 0x1a
     27e:	89 8f       	std	Y+25, r24	; 0x19
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     280:	89 8d       	ldd	r24, Y+25	; 0x19
     282:	9a 8d       	ldd	r25, Y+26	; 0x1a
     284:	89 2b       	or	r24, r25
     286:	69 f7       	brne	.-38     	; 0x262 <main+0x1e0>
     288:	14 c0       	rjmp	.+40     	; 0x2b2 <main+0x230>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     28a:	6d 89       	ldd	r22, Y+21	; 0x15
     28c:	7e 89       	ldd	r23, Y+22	; 0x16
     28e:	8f 89       	ldd	r24, Y+23	; 0x17
     290:	98 8d       	ldd	r25, Y+24	; 0x18
     292:	0e 94 2e 0c 	call	0x185c	; 0x185c <__fixunssfsi>
     296:	dc 01       	movw	r26, r24
     298:	cb 01       	movw	r24, r22
     29a:	9a 8f       	std	Y+26, r25	; 0x1a
     29c:	89 8f       	std	Y+25, r24	; 0x19
     29e:	89 8d       	ldd	r24, Y+25	; 0x19
     2a0:	9a 8d       	ldd	r25, Y+26	; 0x1a
     2a2:	9e 8f       	std	Y+30, r25	; 0x1e
     2a4:	8d 8f       	std	Y+29, r24	; 0x1d
     2a6:	8d 8d       	ldd	r24, Y+29	; 0x1d
     2a8:	9e 8d       	ldd	r25, Y+30	; 0x1e
     2aa:	01 97       	sbiw	r24, 0x01	; 1
     2ac:	f1 f7       	brne	.-4      	; 0x2aa <main+0x228>
     2ae:	9e 8f       	std	Y+30, r25	; 0x1e
     2b0:	8d 8f       	std	Y+29, r24	; 0x1d
     2b2:	8d 81       	ldd	r24, Y+5	; 0x05
     2b4:	9e 81       	ldd	r25, Y+6	; 0x06
     2b6:	af 81       	ldd	r26, Y+7	; 0x07
     2b8:	b8 85       	ldd	r27, Y+8	; 0x08
     2ba:	01 96       	adiw	r24, 0x01	; 1
     2bc:	a1 1d       	adc	r26, r1
     2be:	b1 1d       	adc	r27, r1
     2c0:	8d 83       	std	Y+5, r24	; 0x05
     2c2:	9e 83       	std	Y+6, r25	; 0x06
     2c4:	af 83       	std	Y+7, r26	; 0x07
     2c6:	b8 87       	std	Y+8, r27	; 0x08
     2c8:	2d 81       	ldd	r18, Y+5	; 0x05
     2ca:	3e 81       	ldd	r19, Y+6	; 0x06
     2cc:	4f 81       	ldd	r20, Y+7	; 0x07
     2ce:	58 85       	ldd	r21, Y+8	; 0x08
     2d0:	89 85       	ldd	r24, Y+9	; 0x09
     2d2:	9a 85       	ldd	r25, Y+10	; 0x0a
     2d4:	ab 85       	ldd	r26, Y+11	; 0x0b
     2d6:	bc 85       	ldd	r27, Y+12	; 0x0c
     2d8:	82 17       	cp	r24, r18
     2da:	93 07       	cpc	r25, r19
     2dc:	a4 07       	cpc	r26, r20
     2de:	b5 07       	cpc	r27, r21
     2e0:	08 f0       	brcs	.+2      	; 0x2e4 <main+0x262>
     2e2:	75 cf       	rjmp	.-278    	; 0x1ce <main+0x14c>
     2e4:	ba c0       	rjmp	.+372    	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
			}
			
		}
		else
		{
			row=1;
     2e6:	81 e0       	ldi	r24, 0x01	; 1
     2e8:	90 e0       	ldi	r25, 0x00	; 0
     2ea:	a0 e0       	ldi	r26, 0x00	; 0
     2ec:	b0 e0       	ldi	r27, 0x00	; 0
     2ee:	8d 87       	std	Y+13, r24	; 0x0d
     2f0:	9e 87       	std	Y+14, r25	; 0x0e
     2f2:	af 87       	std	Y+15, r26	; 0x0f
     2f4:	b8 8b       	std	Y+16, r27	; 0x10
			delay =1000;
     2f6:	88 ee       	ldi	r24, 0xE8	; 232
     2f8:	93 e0       	ldi	r25, 0x03	; 3
     2fa:	a0 e0       	ldi	r26, 0x00	; 0
     2fc:	b0 e0       	ldi	r27, 0x00	; 0
     2fe:	89 87       	std	Y+9, r24	; 0x09
     300:	9a 87       	std	Y+10, r25	; 0x0a
     302:	ab 87       	std	Y+11, r26	; 0x0b
     304:	bc 87       	std	Y+12, r27	; 0x0c
			disp_strXY(1,11,"    ");
     306:	4b e6       	ldi	r20, 0x6B	; 107
     308:	50 e0       	ldi	r21, 0x00	; 0
     30a:	6b e0       	ldi	r22, 0x0B	; 11
     30c:	81 e0       	ldi	r24, 0x01	; 1
     30e:	0e 94 83 08 	call	0x1106	; 0x1106 <disp_strXY>
			disp_intXY(1,11,count++);
     312:	89 81       	ldd	r24, Y+1	; 0x01
     314:	9a 81       	ldd	r25, Y+2	; 0x02
     316:	ab 81       	ldd	r26, Y+3	; 0x03
     318:	bc 81       	ldd	r27, Y+4	; 0x04
     31a:	9c 01       	movw	r18, r24
     31c:	ad 01       	movw	r20, r26
     31e:	2f 5f       	subi	r18, 0xFF	; 255
     320:	3f 4f       	sbci	r19, 0xFF	; 255
     322:	4f 4f       	sbci	r20, 0xFF	; 255
     324:	5f 4f       	sbci	r21, 0xFF	; 255
     326:	29 83       	std	Y+1, r18	; 0x01
     328:	3a 83       	std	Y+2, r19	; 0x02
     32a:	4b 83       	std	Y+3, r20	; 0x03
     32c:	5c 83       	std	Y+4, r21	; 0x04
     32e:	9c 01       	movw	r18, r24
     330:	ad 01       	movw	r20, r26
     332:	6b e0       	ldi	r22, 0x0B	; 11
     334:	81 e0       	ldi	r24, 0x01	; 1
     336:	0e 94 dc 08 	call	0x11b8	; 0x11b8 <disp_intXY>
			for (i=0;i<=delay;i++)
     33a:	1d 82       	std	Y+5, r1	; 0x05
     33c:	1e 82       	std	Y+6, r1	; 0x06
     33e:	1f 82       	std	Y+7, r1	; 0x07
     340:	18 86       	std	Y+8, r1	; 0x08
     342:	7d c0       	rjmp	.+250    	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     344:	80 e0       	ldi	r24, 0x00	; 0
     346:	90 e0       	ldi	r25, 0x00	; 0
     348:	a0 e8       	ldi	r26, 0x80	; 128
     34a:	bf e3       	ldi	r27, 0x3F	; 63
     34c:	8f 8f       	std	Y+31, r24	; 0x1f
     34e:	98 a3       	std	Y+32, r25	; 0x20
     350:	a9 a3       	std	Y+33, r26	; 0x21
     352:	ba a3       	std	Y+34, r27	; 0x22

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     354:	20 e0       	ldi	r18, 0x00	; 0
     356:	30 e0       	ldi	r19, 0x00	; 0
     358:	4a e7       	ldi	r20, 0x7A	; 122
     35a:	55 e4       	ldi	r21, 0x45	; 69
     35c:	6f 8d       	ldd	r22, Y+31	; 0x1f
     35e:	78 a1       	ldd	r23, Y+32	; 0x20
     360:	89 a1       	ldd	r24, Y+33	; 0x21
     362:	9a a1       	ldd	r25, Y+34	; 0x22
     364:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <__mulsf3>
     368:	dc 01       	movw	r26, r24
     36a:	cb 01       	movw	r24, r22
     36c:	8b a3       	std	Y+35, r24	; 0x23
     36e:	9c a3       	std	Y+36, r25	; 0x24
     370:	ad a3       	std	Y+37, r26	; 0x25
     372:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     374:	20 e0       	ldi	r18, 0x00	; 0
     376:	30 e0       	ldi	r19, 0x00	; 0
     378:	40 e8       	ldi	r20, 0x80	; 128
     37a:	5f e3       	ldi	r21, 0x3F	; 63
     37c:	6b a1       	ldd	r22, Y+35	; 0x23
     37e:	7c a1       	ldd	r23, Y+36	; 0x24
     380:	8d a1       	ldd	r24, Y+37	; 0x25
     382:	9e a1       	ldd	r25, Y+38	; 0x26
     384:	0e 94 b7 0b 	call	0x176e	; 0x176e <__cmpsf2>
     388:	88 23       	and	r24, r24
     38a:	2c f4       	brge	.+10     	; 0x396 <main+0x314>
		__ticks = 1;
     38c:	81 e0       	ldi	r24, 0x01	; 1
     38e:	90 e0       	ldi	r25, 0x00	; 0
     390:	98 a7       	std	Y+40, r25	; 0x28
     392:	8f a3       	std	Y+39, r24	; 0x27
     394:	3f c0       	rjmp	.+126    	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
	else if (__tmp > 65535)
     396:	20 e0       	ldi	r18, 0x00	; 0
     398:	3f ef       	ldi	r19, 0xFF	; 255
     39a:	4f e7       	ldi	r20, 0x7F	; 127
     39c:	57 e4       	ldi	r21, 0x47	; 71
     39e:	6b a1       	ldd	r22, Y+35	; 0x23
     3a0:	7c a1       	ldd	r23, Y+36	; 0x24
     3a2:	8d a1       	ldd	r24, Y+37	; 0x25
     3a4:	9e a1       	ldd	r25, Y+38	; 0x26
     3a6:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__gesf2>
     3aa:	18 16       	cp	r1, r24
     3ac:	4c f5       	brge	.+82     	; 0x400 <__LOCK_REGION_LENGTH__>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     3ae:	20 e0       	ldi	r18, 0x00	; 0
     3b0:	30 e0       	ldi	r19, 0x00	; 0
     3b2:	40 e2       	ldi	r20, 0x20	; 32
     3b4:	51 e4       	ldi	r21, 0x41	; 65
     3b6:	6f 8d       	ldd	r22, Y+31	; 0x1f
     3b8:	78 a1       	ldd	r23, Y+32	; 0x20
     3ba:	89 a1       	ldd	r24, Y+33	; 0x21
     3bc:	9a a1       	ldd	r25, Y+34	; 0x22
     3be:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <__mulsf3>
     3c2:	dc 01       	movw	r26, r24
     3c4:	cb 01       	movw	r24, r22
     3c6:	bc 01       	movw	r22, r24
     3c8:	cd 01       	movw	r24, r26
     3ca:	0e 94 2e 0c 	call	0x185c	; 0x185c <__fixunssfsi>
     3ce:	dc 01       	movw	r26, r24
     3d0:	cb 01       	movw	r24, r22
     3d2:	98 a7       	std	Y+40, r25	; 0x28
     3d4:	8f a3       	std	Y+39, r24	; 0x27
     3d6:	0f c0       	rjmp	.+30     	; 0x3f6 <main+0x374>
     3d8:	80 e9       	ldi	r24, 0x90	; 144
     3da:	91 e0       	ldi	r25, 0x01	; 1
     3dc:	9a a7       	std	Y+42, r25	; 0x2a
     3de:	89 a7       	std	Y+41, r24	; 0x29
     3e0:	89 a5       	ldd	r24, Y+41	; 0x29
     3e2:	9a a5       	ldd	r25, Y+42	; 0x2a
     3e4:	01 97       	sbiw	r24, 0x01	; 1
     3e6:	f1 f7       	brne	.-4      	; 0x3e4 <main+0x362>
     3e8:	9a a7       	std	Y+42, r25	; 0x2a
     3ea:	89 a7       	std	Y+41, r24	; 0x29
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     3ec:	8f a1       	ldd	r24, Y+39	; 0x27
     3ee:	98 a5       	ldd	r25, Y+40	; 0x28
     3f0:	01 97       	sbiw	r24, 0x01	; 1
     3f2:	98 a7       	std	Y+40, r25	; 0x28
     3f4:	8f a3       	std	Y+39, r24	; 0x27
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     3f6:	8f a1       	ldd	r24, Y+39	; 0x27
     3f8:	98 a5       	ldd	r25, Y+40	; 0x28
     3fa:	89 2b       	or	r24, r25
     3fc:	69 f7       	brne	.-38     	; 0x3d8 <main+0x356>
     3fe:	14 c0       	rjmp	.+40     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     400:	6b a1       	ldd	r22, Y+35	; 0x23
     402:	7c a1       	ldd	r23, Y+36	; 0x24
     404:	8d a1       	ldd	r24, Y+37	; 0x25
     406:	9e a1       	ldd	r25, Y+38	; 0x26
     408:	0e 94 2e 0c 	call	0x185c	; 0x185c <__fixunssfsi>
     40c:	dc 01       	movw	r26, r24
     40e:	cb 01       	movw	r24, r22
     410:	98 a7       	std	Y+40, r25	; 0x28
     412:	8f a3       	std	Y+39, r24	; 0x27
     414:	8f a1       	ldd	r24, Y+39	; 0x27
     416:	98 a5       	ldd	r25, Y+40	; 0x28
     418:	9c a7       	std	Y+44, r25	; 0x2c
     41a:	8b a7       	std	Y+43, r24	; 0x2b
     41c:	8b a5       	ldd	r24, Y+43	; 0x2b
     41e:	9c a5       	ldd	r25, Y+44	; 0x2c
     420:	01 97       	sbiw	r24, 0x01	; 1
     422:	f1 f7       	brne	.-4      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
     424:	9c a7       	std	Y+44, r25	; 0x2c
     426:	8b a7       	std	Y+43, r24	; 0x2b
     428:	8d 81       	ldd	r24, Y+5	; 0x05
     42a:	9e 81       	ldd	r25, Y+6	; 0x06
     42c:	af 81       	ldd	r26, Y+7	; 0x07
     42e:	b8 85       	ldd	r27, Y+8	; 0x08
     430:	01 96       	adiw	r24, 0x01	; 1
     432:	a1 1d       	adc	r26, r1
     434:	b1 1d       	adc	r27, r1
     436:	8d 83       	std	Y+5, r24	; 0x05
     438:	9e 83       	std	Y+6, r25	; 0x06
     43a:	af 83       	std	Y+7, r26	; 0x07
     43c:	b8 87       	std	Y+8, r27	; 0x08
     43e:	2d 81       	ldd	r18, Y+5	; 0x05
     440:	3e 81       	ldd	r19, Y+6	; 0x06
     442:	4f 81       	ldd	r20, Y+7	; 0x07
     444:	58 85       	ldd	r21, Y+8	; 0x08
     446:	89 85       	ldd	r24, Y+9	; 0x09
     448:	9a 85       	ldd	r25, Y+10	; 0x0a
     44a:	ab 85       	ldd	r26, Y+11	; 0x0b
     44c:	bc 85       	ldd	r27, Y+12	; 0x0c
     44e:	82 17       	cp	r24, r18
     450:	93 07       	cpc	r25, r19
     452:	a4 07       	cpc	r26, r20
     454:	b5 07       	cpc	r27, r21
     456:	08 f0       	brcs	.+2      	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
     458:	75 cf       	rjmp	.-278    	; 0x344 <main+0x2c2>
			
		}
		
	
	
    }
     45a:	45 ce       	rjmp	.-886    	; 0xe6 <main+0x64>

0000045c <LCD_init>:

void disp_charXY(u8 row,u8 col,u8 letter)
{
	LCD_GOTXY(row,col);
	disp_char(letter);	
}
     45c:	cf 93       	push	r28
     45e:	df 93       	push	r29
     460:	cd b7       	in	r28, 0x3d	; 61
     462:	de b7       	in	r29, 0x3e	; 62
     464:	6c 97       	sbiw	r28, 0x1c	; 28
     466:	0f b6       	in	r0, 0x3f	; 63
     468:	f8 94       	cli
     46a:	de bf       	out	0x3e, r29	; 62
     46c:	0f be       	out	0x3f, r0	; 63
     46e:	cd bf       	out	0x3d, r28	; 61
     470:	41 e0       	ldi	r20, 0x01	; 1
     472:	60 ef       	ldi	r22, 0xF0	; 240
     474:	8a e3       	ldi	r24, 0x3A	; 58
     476:	90 e0       	ldi	r25, 0x00	; 0
     478:	0e 94 87 0b 	call	0x170e	; 0x170e <pinsDirection>
     47c:	41 e0       	ldi	r20, 0x01	; 1
     47e:	6e e0       	ldi	r22, 0x0E	; 14
     480:	87 e3       	ldi	r24, 0x37	; 55
     482:	90 e0       	ldi	r25, 0x00	; 0
     484:	0e 94 87 0b 	call	0x170e	; 0x170e <pinsDirection>
     488:	60 e0       	ldi	r22, 0x00	; 0
     48a:	8a e0       	ldi	r24, 0x0A	; 10
     48c:	0e 94 fe 08 	call	0x11fc	; 0x11fc <writePin>
     490:	80 e0       	ldi	r24, 0x00	; 0
     492:	90 e0       	ldi	r25, 0x00	; 0
     494:	a0 e2       	ldi	r26, 0x20	; 32
     496:	b2 e4       	ldi	r27, 0x42	; 66
     498:	89 83       	std	Y+1, r24	; 0x01
     49a:	9a 83       	std	Y+2, r25	; 0x02
     49c:	ab 83       	std	Y+3, r26	; 0x03
     49e:	bc 83       	std	Y+4, r27	; 0x04
     4a0:	20 e0       	ldi	r18, 0x00	; 0
     4a2:	30 e0       	ldi	r19, 0x00	; 0
     4a4:	4a e7       	ldi	r20, 0x7A	; 122
     4a6:	55 e4       	ldi	r21, 0x45	; 69
     4a8:	69 81       	ldd	r22, Y+1	; 0x01
     4aa:	7a 81       	ldd	r23, Y+2	; 0x02
     4ac:	8b 81       	ldd	r24, Y+3	; 0x03
     4ae:	9c 81       	ldd	r25, Y+4	; 0x04
     4b0:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <__mulsf3>
     4b4:	dc 01       	movw	r26, r24
     4b6:	cb 01       	movw	r24, r22
     4b8:	8d 83       	std	Y+5, r24	; 0x05
     4ba:	9e 83       	std	Y+6, r25	; 0x06
     4bc:	af 83       	std	Y+7, r26	; 0x07
     4be:	b8 87       	std	Y+8, r27	; 0x08
     4c0:	20 e0       	ldi	r18, 0x00	; 0
     4c2:	30 e0       	ldi	r19, 0x00	; 0
     4c4:	40 e8       	ldi	r20, 0x80	; 128
     4c6:	5f e3       	ldi	r21, 0x3F	; 63
     4c8:	6d 81       	ldd	r22, Y+5	; 0x05
     4ca:	7e 81       	ldd	r23, Y+6	; 0x06
     4cc:	8f 81       	ldd	r24, Y+7	; 0x07
     4ce:	98 85       	ldd	r25, Y+8	; 0x08
     4d0:	0e 94 b7 0b 	call	0x176e	; 0x176e <__cmpsf2>
     4d4:	88 23       	and	r24, r24
     4d6:	2c f4       	brge	.+10     	; 0x4e2 <LCD_init+0x86>
     4d8:	81 e0       	ldi	r24, 0x01	; 1
     4da:	90 e0       	ldi	r25, 0x00	; 0
     4dc:	9a 87       	std	Y+10, r25	; 0x0a
     4de:	89 87       	std	Y+9, r24	; 0x09
     4e0:	3f c0       	rjmp	.+126    	; 0x560 <LCD_init+0x104>
     4e2:	20 e0       	ldi	r18, 0x00	; 0
     4e4:	3f ef       	ldi	r19, 0xFF	; 255
     4e6:	4f e7       	ldi	r20, 0x7F	; 127
     4e8:	57 e4       	ldi	r21, 0x47	; 71
     4ea:	6d 81       	ldd	r22, Y+5	; 0x05
     4ec:	7e 81       	ldd	r23, Y+6	; 0x06
     4ee:	8f 81       	ldd	r24, Y+7	; 0x07
     4f0:	98 85       	ldd	r25, Y+8	; 0x08
     4f2:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__gesf2>
     4f6:	18 16       	cp	r1, r24
     4f8:	4c f5       	brge	.+82     	; 0x54c <LCD_init+0xf0>
     4fa:	20 e0       	ldi	r18, 0x00	; 0
     4fc:	30 e0       	ldi	r19, 0x00	; 0
     4fe:	40 e2       	ldi	r20, 0x20	; 32
     500:	51 e4       	ldi	r21, 0x41	; 65
     502:	69 81       	ldd	r22, Y+1	; 0x01
     504:	7a 81       	ldd	r23, Y+2	; 0x02
     506:	8b 81       	ldd	r24, Y+3	; 0x03
     508:	9c 81       	ldd	r25, Y+4	; 0x04
     50a:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <__mulsf3>
     50e:	dc 01       	movw	r26, r24
     510:	cb 01       	movw	r24, r22
     512:	bc 01       	movw	r22, r24
     514:	cd 01       	movw	r24, r26
     516:	0e 94 2e 0c 	call	0x185c	; 0x185c <__fixunssfsi>
     51a:	dc 01       	movw	r26, r24
     51c:	cb 01       	movw	r24, r22
     51e:	9a 87       	std	Y+10, r25	; 0x0a
     520:	89 87       	std	Y+9, r24	; 0x09
     522:	0f c0       	rjmp	.+30     	; 0x542 <LCD_init+0xe6>
     524:	80 e9       	ldi	r24, 0x90	; 144
     526:	91 e0       	ldi	r25, 0x01	; 1
     528:	9c 87       	std	Y+12, r25	; 0x0c
     52a:	8b 87       	std	Y+11, r24	; 0x0b
     52c:	8b 85       	ldd	r24, Y+11	; 0x0b
     52e:	9c 85       	ldd	r25, Y+12	; 0x0c
     530:	01 97       	sbiw	r24, 0x01	; 1
     532:	f1 f7       	brne	.-4      	; 0x530 <LCD_init+0xd4>
     534:	9c 87       	std	Y+12, r25	; 0x0c
     536:	8b 87       	std	Y+11, r24	; 0x0b
     538:	89 85       	ldd	r24, Y+9	; 0x09
     53a:	9a 85       	ldd	r25, Y+10	; 0x0a
     53c:	01 97       	sbiw	r24, 0x01	; 1
     53e:	9a 87       	std	Y+10, r25	; 0x0a
     540:	89 87       	std	Y+9, r24	; 0x09
     542:	89 85       	ldd	r24, Y+9	; 0x09
     544:	9a 85       	ldd	r25, Y+10	; 0x0a
     546:	89 2b       	or	r24, r25
     548:	69 f7       	brne	.-38     	; 0x524 <LCD_init+0xc8>
     54a:	14 c0       	rjmp	.+40     	; 0x574 <LCD_init+0x118>
     54c:	6d 81       	ldd	r22, Y+5	; 0x05
     54e:	7e 81       	ldd	r23, Y+6	; 0x06
     550:	8f 81       	ldd	r24, Y+7	; 0x07
     552:	98 85       	ldd	r25, Y+8	; 0x08
     554:	0e 94 2e 0c 	call	0x185c	; 0x185c <__fixunssfsi>
     558:	dc 01       	movw	r26, r24
     55a:	cb 01       	movw	r24, r22
     55c:	9a 87       	std	Y+10, r25	; 0x0a
     55e:	89 87       	std	Y+9, r24	; 0x09
     560:	89 85       	ldd	r24, Y+9	; 0x09
     562:	9a 85       	ldd	r25, Y+10	; 0x0a
     564:	9e 87       	std	Y+14, r25	; 0x0e
     566:	8d 87       	std	Y+13, r24	; 0x0d
     568:	8d 85       	ldd	r24, Y+13	; 0x0d
     56a:	9e 85       	ldd	r25, Y+14	; 0x0e
     56c:	01 97       	sbiw	r24, 0x01	; 1
     56e:	f1 f7       	brne	.-4      	; 0x56c <LCD_init+0x110>
     570:	9e 87       	std	Y+14, r25	; 0x0e
     572:	8d 87       	std	Y+13, r24	; 0x0d
     574:	82 e0       	ldi	r24, 0x02	; 2
     576:	0e 94 ce 03 	call	0x79c	; 0x79c <LCD_send_cmd>
     57a:	80 e0       	ldi	r24, 0x00	; 0
     57c:	90 e0       	ldi	r25, 0x00	; 0
     57e:	a0 e2       	ldi	r26, 0x20	; 32
     580:	b2 e4       	ldi	r27, 0x42	; 66
     582:	8f 87       	std	Y+15, r24	; 0x0f
     584:	98 8b       	std	Y+16, r25	; 0x10
     586:	a9 8b       	std	Y+17, r26	; 0x11
     588:	ba 8b       	std	Y+18, r27	; 0x12
     58a:	20 e0       	ldi	r18, 0x00	; 0
     58c:	30 e0       	ldi	r19, 0x00	; 0
     58e:	4a e7       	ldi	r20, 0x7A	; 122
     590:	55 e4       	ldi	r21, 0x45	; 69
     592:	6f 85       	ldd	r22, Y+15	; 0x0f
     594:	78 89       	ldd	r23, Y+16	; 0x10
     596:	89 89       	ldd	r24, Y+17	; 0x11
     598:	9a 89       	ldd	r25, Y+18	; 0x12
     59a:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <__mulsf3>
     59e:	dc 01       	movw	r26, r24
     5a0:	cb 01       	movw	r24, r22
     5a2:	8b 8b       	std	Y+19, r24	; 0x13
     5a4:	9c 8b       	std	Y+20, r25	; 0x14
     5a6:	ad 8b       	std	Y+21, r26	; 0x15
     5a8:	be 8b       	std	Y+22, r27	; 0x16
     5aa:	20 e0       	ldi	r18, 0x00	; 0
     5ac:	30 e0       	ldi	r19, 0x00	; 0
     5ae:	40 e8       	ldi	r20, 0x80	; 128
     5b0:	5f e3       	ldi	r21, 0x3F	; 63
     5b2:	6b 89       	ldd	r22, Y+19	; 0x13
     5b4:	7c 89       	ldd	r23, Y+20	; 0x14
     5b6:	8d 89       	ldd	r24, Y+21	; 0x15
     5b8:	9e 89       	ldd	r25, Y+22	; 0x16
     5ba:	0e 94 b7 0b 	call	0x176e	; 0x176e <__cmpsf2>
     5be:	88 23       	and	r24, r24
     5c0:	2c f4       	brge	.+10     	; 0x5cc <LCD_init+0x170>
     5c2:	81 e0       	ldi	r24, 0x01	; 1
     5c4:	90 e0       	ldi	r25, 0x00	; 0
     5c6:	98 8f       	std	Y+24, r25	; 0x18
     5c8:	8f 8b       	std	Y+23, r24	; 0x17
     5ca:	3f c0       	rjmp	.+126    	; 0x64a <LCD_init+0x1ee>
     5cc:	20 e0       	ldi	r18, 0x00	; 0
     5ce:	3f ef       	ldi	r19, 0xFF	; 255
     5d0:	4f e7       	ldi	r20, 0x7F	; 127
     5d2:	57 e4       	ldi	r21, 0x47	; 71
     5d4:	6b 89       	ldd	r22, Y+19	; 0x13
     5d6:	7c 89       	ldd	r23, Y+20	; 0x14
     5d8:	8d 89       	ldd	r24, Y+21	; 0x15
     5da:	9e 89       	ldd	r25, Y+22	; 0x16
     5dc:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__gesf2>
     5e0:	18 16       	cp	r1, r24
     5e2:	4c f5       	brge	.+82     	; 0x636 <LCD_init+0x1da>
     5e4:	20 e0       	ldi	r18, 0x00	; 0
     5e6:	30 e0       	ldi	r19, 0x00	; 0
     5e8:	40 e2       	ldi	r20, 0x20	; 32
     5ea:	51 e4       	ldi	r21, 0x41	; 65
     5ec:	6f 85       	ldd	r22, Y+15	; 0x0f
     5ee:	78 89       	ldd	r23, Y+16	; 0x10
     5f0:	89 89       	ldd	r24, Y+17	; 0x11
     5f2:	9a 89       	ldd	r25, Y+18	; 0x12
     5f4:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <__mulsf3>
     5f8:	dc 01       	movw	r26, r24
     5fa:	cb 01       	movw	r24, r22
     5fc:	bc 01       	movw	r22, r24
     5fe:	cd 01       	movw	r24, r26
     600:	0e 94 2e 0c 	call	0x185c	; 0x185c <__fixunssfsi>
     604:	dc 01       	movw	r26, r24
     606:	cb 01       	movw	r24, r22
     608:	98 8f       	std	Y+24, r25	; 0x18
     60a:	8f 8b       	std	Y+23, r24	; 0x17
     60c:	0f c0       	rjmp	.+30     	; 0x62c <LCD_init+0x1d0>
     60e:	80 e9       	ldi	r24, 0x90	; 144
     610:	91 e0       	ldi	r25, 0x01	; 1
     612:	9a 8f       	std	Y+26, r25	; 0x1a
     614:	89 8f       	std	Y+25, r24	; 0x19
     616:	89 8d       	ldd	r24, Y+25	; 0x19
     618:	9a 8d       	ldd	r25, Y+26	; 0x1a
     61a:	01 97       	sbiw	r24, 0x01	; 1
     61c:	f1 f7       	brne	.-4      	; 0x61a <LCD_init+0x1be>
     61e:	9a 8f       	std	Y+26, r25	; 0x1a
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	8f 89       	ldd	r24, Y+23	; 0x17
     624:	98 8d       	ldd	r25, Y+24	; 0x18
     626:	01 97       	sbiw	r24, 0x01	; 1
     628:	98 8f       	std	Y+24, r25	; 0x18
     62a:	8f 8b       	std	Y+23, r24	; 0x17
     62c:	8f 89       	ldd	r24, Y+23	; 0x17
     62e:	98 8d       	ldd	r25, Y+24	; 0x18
     630:	89 2b       	or	r24, r25
     632:	69 f7       	brne	.-38     	; 0x60e <LCD_init+0x1b2>
     634:	14 c0       	rjmp	.+40     	; 0x65e <LCD_init+0x202>
     636:	6b 89       	ldd	r22, Y+19	; 0x13
     638:	7c 89       	ldd	r23, Y+20	; 0x14
     63a:	8d 89       	ldd	r24, Y+21	; 0x15
     63c:	9e 89       	ldd	r25, Y+22	; 0x16
     63e:	0e 94 2e 0c 	call	0x185c	; 0x185c <__fixunssfsi>
     642:	dc 01       	movw	r26, r24
     644:	cb 01       	movw	r24, r22
     646:	98 8f       	std	Y+24, r25	; 0x18
     648:	8f 8b       	std	Y+23, r24	; 0x17
     64a:	8f 89       	ldd	r24, Y+23	; 0x17
     64c:	98 8d       	ldd	r25, Y+24	; 0x18
     64e:	9c 8f       	std	Y+28, r25	; 0x1c
     650:	8b 8f       	std	Y+27, r24	; 0x1b
     652:	8b 8d       	ldd	r24, Y+27	; 0x1b
     654:	9c 8d       	ldd	r25, Y+28	; 0x1c
     656:	01 97       	sbiw	r24, 0x01	; 1
     658:	f1 f7       	brne	.-4      	; 0x656 <LCD_init+0x1fa>
     65a:	9c 8f       	std	Y+28, r25	; 0x1c
     65c:	8b 8f       	std	Y+27, r24	; 0x1b
     65e:	86 e0       	ldi	r24, 0x06	; 6
     660:	0e 94 ce 03 	call	0x79c	; 0x79c <LCD_send_cmd>
     664:	8f e0       	ldi	r24, 0x0F	; 15
     666:	0e 94 ce 03 	call	0x79c	; 0x79c <LCD_send_cmd>
     66a:	80 e1       	ldi	r24, 0x10	; 16
     66c:	0e 94 ce 03 	call	0x79c	; 0x79c <LCD_send_cmd>
     670:	88 e2       	ldi	r24, 0x28	; 40
     672:	0e 94 ce 03 	call	0x79c	; 0x79c <LCD_send_cmd>
     676:	0e 94 46 03 	call	0x68c	; 0x68c <LCD_CLEAR>
     67a:	6c 96       	adiw	r28, 0x1c	; 28
     67c:	0f b6       	in	r0, 0x3f	; 63
     67e:	f8 94       	cli
     680:	de bf       	out	0x3e, r29	; 62
     682:	0f be       	out	0x3f, r0	; 63
     684:	cd bf       	out	0x3d, r28	; 61
     686:	df 91       	pop	r29
     688:	cf 91       	pop	r28
     68a:	08 95       	ret

0000068c <LCD_CLEAR>:
     68c:	cf 93       	push	r28
     68e:	df 93       	push	r29
     690:	cd b7       	in	r28, 0x3d	; 61
     692:	de b7       	in	r29, 0x3e	; 62
     694:	2e 97       	sbiw	r28, 0x0e	; 14
     696:	0f b6       	in	r0, 0x3f	; 63
     698:	f8 94       	cli
     69a:	de bf       	out	0x3e, r29	; 62
     69c:	0f be       	out	0x3f, r0	; 63
     69e:	cd bf       	out	0x3d, r28	; 61
     6a0:	81 e0       	ldi	r24, 0x01	; 1
     6a2:	0e 94 ce 03 	call	0x79c	; 0x79c <LCD_send_cmd>
     6a6:	80 e0       	ldi	r24, 0x00	; 0
     6a8:	90 e0       	ldi	r25, 0x00	; 0
     6aa:	a0 e0       	ldi	r26, 0x00	; 0
     6ac:	b0 e4       	ldi	r27, 0x40	; 64
     6ae:	89 83       	std	Y+1, r24	; 0x01
     6b0:	9a 83       	std	Y+2, r25	; 0x02
     6b2:	ab 83       	std	Y+3, r26	; 0x03
     6b4:	bc 83       	std	Y+4, r27	; 0x04
     6b6:	20 e0       	ldi	r18, 0x00	; 0
     6b8:	30 e0       	ldi	r19, 0x00	; 0
     6ba:	4a e7       	ldi	r20, 0x7A	; 122
     6bc:	55 e4       	ldi	r21, 0x45	; 69
     6be:	69 81       	ldd	r22, Y+1	; 0x01
     6c0:	7a 81       	ldd	r23, Y+2	; 0x02
     6c2:	8b 81       	ldd	r24, Y+3	; 0x03
     6c4:	9c 81       	ldd	r25, Y+4	; 0x04
     6c6:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <__mulsf3>
     6ca:	dc 01       	movw	r26, r24
     6cc:	cb 01       	movw	r24, r22
     6ce:	8d 83       	std	Y+5, r24	; 0x05
     6d0:	9e 83       	std	Y+6, r25	; 0x06
     6d2:	af 83       	std	Y+7, r26	; 0x07
     6d4:	b8 87       	std	Y+8, r27	; 0x08
     6d6:	20 e0       	ldi	r18, 0x00	; 0
     6d8:	30 e0       	ldi	r19, 0x00	; 0
     6da:	40 e8       	ldi	r20, 0x80	; 128
     6dc:	5f e3       	ldi	r21, 0x3F	; 63
     6de:	6d 81       	ldd	r22, Y+5	; 0x05
     6e0:	7e 81       	ldd	r23, Y+6	; 0x06
     6e2:	8f 81       	ldd	r24, Y+7	; 0x07
     6e4:	98 85       	ldd	r25, Y+8	; 0x08
     6e6:	0e 94 b7 0b 	call	0x176e	; 0x176e <__cmpsf2>
     6ea:	88 23       	and	r24, r24
     6ec:	2c f4       	brge	.+10     	; 0x6f8 <LCD_CLEAR+0x6c>
     6ee:	81 e0       	ldi	r24, 0x01	; 1
     6f0:	90 e0       	ldi	r25, 0x00	; 0
     6f2:	9a 87       	std	Y+10, r25	; 0x0a
     6f4:	89 87       	std	Y+9, r24	; 0x09
     6f6:	3f c0       	rjmp	.+126    	; 0x776 <LCD_CLEAR+0xea>
     6f8:	20 e0       	ldi	r18, 0x00	; 0
     6fa:	3f ef       	ldi	r19, 0xFF	; 255
     6fc:	4f e7       	ldi	r20, 0x7F	; 127
     6fe:	57 e4       	ldi	r21, 0x47	; 71
     700:	6d 81       	ldd	r22, Y+5	; 0x05
     702:	7e 81       	ldd	r23, Y+6	; 0x06
     704:	8f 81       	ldd	r24, Y+7	; 0x07
     706:	98 85       	ldd	r25, Y+8	; 0x08
     708:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__gesf2>
     70c:	18 16       	cp	r1, r24
     70e:	4c f5       	brge	.+82     	; 0x762 <LCD_CLEAR+0xd6>
     710:	20 e0       	ldi	r18, 0x00	; 0
     712:	30 e0       	ldi	r19, 0x00	; 0
     714:	40 e2       	ldi	r20, 0x20	; 32
     716:	51 e4       	ldi	r21, 0x41	; 65
     718:	69 81       	ldd	r22, Y+1	; 0x01
     71a:	7a 81       	ldd	r23, Y+2	; 0x02
     71c:	8b 81       	ldd	r24, Y+3	; 0x03
     71e:	9c 81       	ldd	r25, Y+4	; 0x04
     720:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <__mulsf3>
     724:	dc 01       	movw	r26, r24
     726:	cb 01       	movw	r24, r22
     728:	bc 01       	movw	r22, r24
     72a:	cd 01       	movw	r24, r26
     72c:	0e 94 2e 0c 	call	0x185c	; 0x185c <__fixunssfsi>
     730:	dc 01       	movw	r26, r24
     732:	cb 01       	movw	r24, r22
     734:	9a 87       	std	Y+10, r25	; 0x0a
     736:	89 87       	std	Y+9, r24	; 0x09
     738:	0f c0       	rjmp	.+30     	; 0x758 <LCD_CLEAR+0xcc>
     73a:	80 e9       	ldi	r24, 0x90	; 144
     73c:	91 e0       	ldi	r25, 0x01	; 1
     73e:	9c 87       	std	Y+12, r25	; 0x0c
     740:	8b 87       	std	Y+11, r24	; 0x0b
     742:	8b 85       	ldd	r24, Y+11	; 0x0b
     744:	9c 85       	ldd	r25, Y+12	; 0x0c
     746:	01 97       	sbiw	r24, 0x01	; 1
     748:	f1 f7       	brne	.-4      	; 0x746 <LCD_CLEAR+0xba>
     74a:	9c 87       	std	Y+12, r25	; 0x0c
     74c:	8b 87       	std	Y+11, r24	; 0x0b
     74e:	89 85       	ldd	r24, Y+9	; 0x09
     750:	9a 85       	ldd	r25, Y+10	; 0x0a
     752:	01 97       	sbiw	r24, 0x01	; 1
     754:	9a 87       	std	Y+10, r25	; 0x0a
     756:	89 87       	std	Y+9, r24	; 0x09
     758:	89 85       	ldd	r24, Y+9	; 0x09
     75a:	9a 85       	ldd	r25, Y+10	; 0x0a
     75c:	89 2b       	or	r24, r25
     75e:	69 f7       	brne	.-38     	; 0x73a <LCD_CLEAR+0xae>
     760:	14 c0       	rjmp	.+40     	; 0x78a <LCD_CLEAR+0xfe>
     762:	6d 81       	ldd	r22, Y+5	; 0x05
     764:	7e 81       	ldd	r23, Y+6	; 0x06
     766:	8f 81       	ldd	r24, Y+7	; 0x07
     768:	98 85       	ldd	r25, Y+8	; 0x08
     76a:	0e 94 2e 0c 	call	0x185c	; 0x185c <__fixunssfsi>
     76e:	dc 01       	movw	r26, r24
     770:	cb 01       	movw	r24, r22
     772:	9a 87       	std	Y+10, r25	; 0x0a
     774:	89 87       	std	Y+9, r24	; 0x09
     776:	89 85       	ldd	r24, Y+9	; 0x09
     778:	9a 85       	ldd	r25, Y+10	; 0x0a
     77a:	9e 87       	std	Y+14, r25	; 0x0e
     77c:	8d 87       	std	Y+13, r24	; 0x0d
     77e:	8d 85       	ldd	r24, Y+13	; 0x0d
     780:	9e 85       	ldd	r25, Y+14	; 0x0e
     782:	01 97       	sbiw	r24, 0x01	; 1
     784:	f1 f7       	brne	.-4      	; 0x782 <LCD_CLEAR+0xf6>
     786:	9e 87       	std	Y+14, r25	; 0x0e
     788:	8d 87       	std	Y+13, r24	; 0x0d
     78a:	2e 96       	adiw	r28, 0x0e	; 14
     78c:	0f b6       	in	r0, 0x3f	; 63
     78e:	f8 94       	cli
     790:	de bf       	out	0x3e, r29	; 62
     792:	0f be       	out	0x3f, r0	; 63
     794:	cd bf       	out	0x3d, r28	; 61
     796:	df 91       	pop	r29
     798:	cf 91       	pop	r28
     79a:	08 95       	ret

0000079c <LCD_send_cmd>:
     79c:	cf 93       	push	r28
     79e:	df 93       	push	r29
     7a0:	cd b7       	in	r28, 0x3d	; 61
     7a2:	de b7       	in	r29, 0x3e	; 62
     7a4:	a1 97       	sbiw	r28, 0x21	; 33
     7a6:	0f b6       	in	r0, 0x3f	; 63
     7a8:	f8 94       	cli
     7aa:	de bf       	out	0x3e, r29	; 62
     7ac:	0f be       	out	0x3f, r0	; 63
     7ae:	cd bf       	out	0x3d, r28	; 61
     7b0:	89 a3       	std	Y+33, r24	; 0x21
     7b2:	60 e0       	ldi	r22, 0x00	; 0
     7b4:	89 e0       	ldi	r24, 0x09	; 9
     7b6:	0e 94 fe 08 	call	0x11fc	; 0x11fc <writePin>
     7ba:	40 e0       	ldi	r20, 0x00	; 0
     7bc:	60 ef       	ldi	r22, 0xF0	; 240
     7be:	8b e3       	ldi	r24, 0x3B	; 59
     7c0:	90 e0       	ldi	r25, 0x00	; 0
     7c2:	0e 94 57 0b 	call	0x16ae	; 0x16ae <writePins>
     7c6:	89 a1       	ldd	r24, Y+33	; 0x21
     7c8:	80 7f       	andi	r24, 0xF0	; 240
     7ca:	41 e0       	ldi	r20, 0x01	; 1
     7cc:	68 2f       	mov	r22, r24
     7ce:	8b e3       	ldi	r24, 0x3B	; 59
     7d0:	90 e0       	ldi	r25, 0x00	; 0
     7d2:	0e 94 57 0b 	call	0x16ae	; 0x16ae <writePins>
     7d6:	0e 94 2a 06 	call	0xc54	; 0xc54 <LCD_latch>
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	60 ef       	ldi	r22, 0xF0	; 240
     7de:	8b e3       	ldi	r24, 0x3B	; 59
     7e0:	90 e0       	ldi	r25, 0x00	; 0
     7e2:	0e 94 57 0b 	call	0x16ae	; 0x16ae <writePins>
     7e6:	89 a1       	ldd	r24, Y+33	; 0x21
     7e8:	88 2f       	mov	r24, r24
     7ea:	90 e0       	ldi	r25, 0x00	; 0
     7ec:	82 95       	swap	r24
     7ee:	92 95       	swap	r25
     7f0:	90 7f       	andi	r25, 0xF0	; 240
     7f2:	98 27       	eor	r25, r24
     7f4:	80 7f       	andi	r24, 0xF0	; 240
     7f6:	98 27       	eor	r25, r24
     7f8:	41 e0       	ldi	r20, 0x01	; 1
     7fa:	68 2f       	mov	r22, r24
     7fc:	8b e3       	ldi	r24, 0x3B	; 59
     7fe:	90 e0       	ldi	r25, 0x00	; 0
     800:	0e 94 57 0b 	call	0x16ae	; 0x16ae <writePins>
     804:	0e 94 2a 06 	call	0xc54	; 0xc54 <LCD_latch>
     808:	80 e0       	ldi	r24, 0x00	; 0
     80a:	90 e0       	ldi	r25, 0x00	; 0
     80c:	a0 e2       	ldi	r26, 0x20	; 32
     80e:	b2 e4       	ldi	r27, 0x42	; 66
     810:	89 83       	std	Y+1, r24	; 0x01
     812:	9a 83       	std	Y+2, r25	; 0x02
     814:	ab 83       	std	Y+3, r26	; 0x03
     816:	bc 83       	std	Y+4, r27	; 0x04
     818:	2b ea       	ldi	r18, 0xAB	; 171
     81a:	3a ea       	ldi	r19, 0xAA	; 170
     81c:	4a ea       	ldi	r20, 0xAA	; 170
     81e:	50 e4       	ldi	r21, 0x40	; 64
     820:	69 81       	ldd	r22, Y+1	; 0x01
     822:	7a 81       	ldd	r23, Y+2	; 0x02
     824:	8b 81       	ldd	r24, Y+3	; 0x03
     826:	9c 81       	ldd	r25, Y+4	; 0x04
     828:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <__mulsf3>
     82c:	dc 01       	movw	r26, r24
     82e:	cb 01       	movw	r24, r22
     830:	8d 83       	std	Y+5, r24	; 0x05
     832:	9e 83       	std	Y+6, r25	; 0x06
     834:	af 83       	std	Y+7, r26	; 0x07
     836:	b8 87       	std	Y+8, r27	; 0x08
     838:	20 e0       	ldi	r18, 0x00	; 0
     83a:	30 e0       	ldi	r19, 0x00	; 0
     83c:	40 e8       	ldi	r20, 0x80	; 128
     83e:	50 e4       	ldi	r21, 0x40	; 64
     840:	69 81       	ldd	r22, Y+1	; 0x01
     842:	7a 81       	ldd	r23, Y+2	; 0x02
     844:	8b 81       	ldd	r24, Y+3	; 0x03
     846:	9c 81       	ldd	r25, Y+4	; 0x04
     848:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <__mulsf3>
     84c:	dc 01       	movw	r26, r24
     84e:	cb 01       	movw	r24, r22
     850:	89 87       	std	Y+9, r24	; 0x09
     852:	9a 87       	std	Y+10, r25	; 0x0a
     854:	ab 87       	std	Y+11, r26	; 0x0b
     856:	bc 87       	std	Y+12, r27	; 0x0c
     858:	20 e0       	ldi	r18, 0x00	; 0
     85a:	30 e0       	ldi	r19, 0x00	; 0
     85c:	40 e8       	ldi	r20, 0x80	; 128
     85e:	5f e3       	ldi	r21, 0x3F	; 63
     860:	6d 81       	ldd	r22, Y+5	; 0x05
     862:	7e 81       	ldd	r23, Y+6	; 0x06
     864:	8f 81       	ldd	r24, Y+7	; 0x07
     866:	98 85       	ldd	r25, Y+8	; 0x08
     868:	0e 94 b7 0b 	call	0x176e	; 0x176e <__cmpsf2>
     86c:	88 23       	and	r24, r24
     86e:	1c f4       	brge	.+6      	; 0x876 <__stack+0x17>
     870:	81 e0       	ldi	r24, 0x01	; 1
     872:	8d 87       	std	Y+13, r24	; 0x0d
     874:	b2 c0       	rjmp	.+356    	; 0x9da <__stack+0x17b>
     876:	20 e0       	ldi	r18, 0x00	; 0
     878:	3f ef       	ldi	r19, 0xFF	; 255
     87a:	4f e7       	ldi	r20, 0x7F	; 127
     87c:	57 e4       	ldi	r21, 0x47	; 71
     87e:	69 85       	ldd	r22, Y+9	; 0x09
     880:	7a 85       	ldd	r23, Y+10	; 0x0a
     882:	8b 85       	ldd	r24, Y+11	; 0x0b
     884:	9c 85       	ldd	r25, Y+12	; 0x0c
     886:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__gesf2>
     88a:	18 16       	cp	r1, r24
     88c:	0c f0       	brlt	.+2      	; 0x890 <__stack+0x31>
     88e:	7b c0       	rjmp	.+246    	; 0x986 <__stack+0x127>
     890:	20 e0       	ldi	r18, 0x00	; 0
     892:	30 e0       	ldi	r19, 0x00	; 0
     894:	4a e7       	ldi	r20, 0x7A	; 122
     896:	54 e4       	ldi	r21, 0x44	; 68
     898:	69 81       	ldd	r22, Y+1	; 0x01
     89a:	7a 81       	ldd	r23, Y+2	; 0x02
     89c:	8b 81       	ldd	r24, Y+3	; 0x03
     89e:	9c 81       	ldd	r25, Y+4	; 0x04
     8a0:	0e 94 bc 0b 	call	0x1778	; 0x1778 <__divsf3>
     8a4:	dc 01       	movw	r26, r24
     8a6:	cb 01       	movw	r24, r22
     8a8:	8e 87       	std	Y+14, r24	; 0x0e
     8aa:	9f 87       	std	Y+15, r25	; 0x0f
     8ac:	a8 8b       	std	Y+16, r26	; 0x10
     8ae:	b9 8b       	std	Y+17, r27	; 0x11
     8b0:	20 e0       	ldi	r18, 0x00	; 0
     8b2:	30 e0       	ldi	r19, 0x00	; 0
     8b4:	4a e7       	ldi	r20, 0x7A	; 122
     8b6:	55 e4       	ldi	r21, 0x45	; 69
     8b8:	6e 85       	ldd	r22, Y+14	; 0x0e
     8ba:	7f 85       	ldd	r23, Y+15	; 0x0f
     8bc:	88 89       	ldd	r24, Y+16	; 0x10
     8be:	99 89       	ldd	r25, Y+17	; 0x11
     8c0:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <__mulsf3>
     8c4:	dc 01       	movw	r26, r24
     8c6:	cb 01       	movw	r24, r22
     8c8:	8a 8b       	std	Y+18, r24	; 0x12
     8ca:	9b 8b       	std	Y+19, r25	; 0x13
     8cc:	ac 8b       	std	Y+20, r26	; 0x14
     8ce:	bd 8b       	std	Y+21, r27	; 0x15
     8d0:	20 e0       	ldi	r18, 0x00	; 0
     8d2:	30 e0       	ldi	r19, 0x00	; 0
     8d4:	40 e8       	ldi	r20, 0x80	; 128
     8d6:	5f e3       	ldi	r21, 0x3F	; 63
     8d8:	6a 89       	ldd	r22, Y+18	; 0x12
     8da:	7b 89       	ldd	r23, Y+19	; 0x13
     8dc:	8c 89       	ldd	r24, Y+20	; 0x14
     8de:	9d 89       	ldd	r25, Y+21	; 0x15
     8e0:	0e 94 b7 0b 	call	0x176e	; 0x176e <__cmpsf2>
     8e4:	88 23       	and	r24, r24
     8e6:	2c f4       	brge	.+10     	; 0x8f2 <__stack+0x93>
     8e8:	81 e0       	ldi	r24, 0x01	; 1
     8ea:	90 e0       	ldi	r25, 0x00	; 0
     8ec:	9f 8b       	std	Y+23, r25	; 0x17
     8ee:	8e 8b       	std	Y+22, r24	; 0x16
     8f0:	3f c0       	rjmp	.+126    	; 0x970 <__stack+0x111>
     8f2:	20 e0       	ldi	r18, 0x00	; 0
     8f4:	3f ef       	ldi	r19, 0xFF	; 255
     8f6:	4f e7       	ldi	r20, 0x7F	; 127
     8f8:	57 e4       	ldi	r21, 0x47	; 71
     8fa:	6a 89       	ldd	r22, Y+18	; 0x12
     8fc:	7b 89       	ldd	r23, Y+19	; 0x13
     8fe:	8c 89       	ldd	r24, Y+20	; 0x14
     900:	9d 89       	ldd	r25, Y+21	; 0x15
     902:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__gesf2>
     906:	18 16       	cp	r1, r24
     908:	4c f5       	brge	.+82     	; 0x95c <__stack+0xfd>
     90a:	20 e0       	ldi	r18, 0x00	; 0
     90c:	30 e0       	ldi	r19, 0x00	; 0
     90e:	40 e2       	ldi	r20, 0x20	; 32
     910:	51 e4       	ldi	r21, 0x41	; 65
     912:	6e 85       	ldd	r22, Y+14	; 0x0e
     914:	7f 85       	ldd	r23, Y+15	; 0x0f
     916:	88 89       	ldd	r24, Y+16	; 0x10
     918:	99 89       	ldd	r25, Y+17	; 0x11
     91a:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <__mulsf3>
     91e:	dc 01       	movw	r26, r24
     920:	cb 01       	movw	r24, r22
     922:	bc 01       	movw	r22, r24
     924:	cd 01       	movw	r24, r26
     926:	0e 94 2e 0c 	call	0x185c	; 0x185c <__fixunssfsi>
     92a:	dc 01       	movw	r26, r24
     92c:	cb 01       	movw	r24, r22
     92e:	9f 8b       	std	Y+23, r25	; 0x17
     930:	8e 8b       	std	Y+22, r24	; 0x16
     932:	0f c0       	rjmp	.+30     	; 0x952 <__stack+0xf3>
     934:	80 e9       	ldi	r24, 0x90	; 144
     936:	91 e0       	ldi	r25, 0x01	; 1
     938:	99 8f       	std	Y+25, r25	; 0x19
     93a:	88 8f       	std	Y+24, r24	; 0x18
     93c:	88 8d       	ldd	r24, Y+24	; 0x18
     93e:	99 8d       	ldd	r25, Y+25	; 0x19
     940:	01 97       	sbiw	r24, 0x01	; 1
     942:	f1 f7       	brne	.-4      	; 0x940 <__stack+0xe1>
     944:	99 8f       	std	Y+25, r25	; 0x19
     946:	88 8f       	std	Y+24, r24	; 0x18
     948:	8e 89       	ldd	r24, Y+22	; 0x16
     94a:	9f 89       	ldd	r25, Y+23	; 0x17
     94c:	01 97       	sbiw	r24, 0x01	; 1
     94e:	9f 8b       	std	Y+23, r25	; 0x17
     950:	8e 8b       	std	Y+22, r24	; 0x16
     952:	8e 89       	ldd	r24, Y+22	; 0x16
     954:	9f 89       	ldd	r25, Y+23	; 0x17
     956:	89 2b       	or	r24, r25
     958:	69 f7       	brne	.-38     	; 0x934 <__stack+0xd5>
     95a:	3f c0       	rjmp	.+126    	; 0x9da <__stack+0x17b>
     95c:	6a 89       	ldd	r22, Y+18	; 0x12
     95e:	7b 89       	ldd	r23, Y+19	; 0x13
     960:	8c 89       	ldd	r24, Y+20	; 0x14
     962:	9d 89       	ldd	r25, Y+21	; 0x15
     964:	0e 94 2e 0c 	call	0x185c	; 0x185c <__fixunssfsi>
     968:	dc 01       	movw	r26, r24
     96a:	cb 01       	movw	r24, r22
     96c:	9f 8b       	std	Y+23, r25	; 0x17
     96e:	8e 8b       	std	Y+22, r24	; 0x16
     970:	8e 89       	ldd	r24, Y+22	; 0x16
     972:	9f 89       	ldd	r25, Y+23	; 0x17
     974:	9b 8f       	std	Y+27, r25	; 0x1b
     976:	8a 8f       	std	Y+26, r24	; 0x1a
     978:	8a 8d       	ldd	r24, Y+26	; 0x1a
     97a:	9b 8d       	ldd	r25, Y+27	; 0x1b
     97c:	01 97       	sbiw	r24, 0x01	; 1
     97e:	f1 f7       	brne	.-4      	; 0x97c <__stack+0x11d>
     980:	9b 8f       	std	Y+27, r25	; 0x1b
     982:	8a 8f       	std	Y+26, r24	; 0x1a
     984:	2a c0       	rjmp	.+84     	; 0x9da <__stack+0x17b>
     986:	20 e0       	ldi	r18, 0x00	; 0
     988:	30 e0       	ldi	r19, 0x00	; 0
     98a:	4f e7       	ldi	r20, 0x7F	; 127
     98c:	53 e4       	ldi	r21, 0x43	; 67
     98e:	6d 81       	ldd	r22, Y+5	; 0x05
     990:	7e 81       	ldd	r23, Y+6	; 0x06
     992:	8f 81       	ldd	r24, Y+7	; 0x07
     994:	98 85       	ldd	r25, Y+8	; 0x08
     996:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__gesf2>
     99a:	18 16       	cp	r1, r24
     99c:	ac f4       	brge	.+42     	; 0x9c8 <__stack+0x169>
     99e:	69 85       	ldd	r22, Y+9	; 0x09
     9a0:	7a 85       	ldd	r23, Y+10	; 0x0a
     9a2:	8b 85       	ldd	r24, Y+11	; 0x0b
     9a4:	9c 85       	ldd	r25, Y+12	; 0x0c
     9a6:	0e 94 2e 0c 	call	0x185c	; 0x185c <__fixunssfsi>
     9aa:	dc 01       	movw	r26, r24
     9ac:	cb 01       	movw	r24, r22
     9ae:	9d 8f       	std	Y+29, r25	; 0x1d
     9b0:	8c 8f       	std	Y+28, r24	; 0x1c
     9b2:	8c 8d       	ldd	r24, Y+28	; 0x1c
     9b4:	9d 8d       	ldd	r25, Y+29	; 0x1d
     9b6:	9f 8f       	std	Y+31, r25	; 0x1f
     9b8:	8e 8f       	std	Y+30, r24	; 0x1e
     9ba:	8e 8d       	ldd	r24, Y+30	; 0x1e
     9bc:	9f 8d       	ldd	r25, Y+31	; 0x1f
     9be:	01 97       	sbiw	r24, 0x01	; 1
     9c0:	f1 f7       	brne	.-4      	; 0x9be <__stack+0x15f>
     9c2:	9f 8f       	std	Y+31, r25	; 0x1f
     9c4:	8e 8f       	std	Y+30, r24	; 0x1e
     9c6:	0f c0       	rjmp	.+30     	; 0x9e6 <__stack+0x187>
     9c8:	6d 81       	ldd	r22, Y+5	; 0x05
     9ca:	7e 81       	ldd	r23, Y+6	; 0x06
     9cc:	8f 81       	ldd	r24, Y+7	; 0x07
     9ce:	98 85       	ldd	r25, Y+8	; 0x08
     9d0:	0e 94 2e 0c 	call	0x185c	; 0x185c <__fixunssfsi>
     9d4:	dc 01       	movw	r26, r24
     9d6:	cb 01       	movw	r24, r22
     9d8:	8d 87       	std	Y+13, r24	; 0x0d
     9da:	8d 85       	ldd	r24, Y+13	; 0x0d
     9dc:	88 a3       	std	Y+32, r24	; 0x20
     9de:	88 a1       	ldd	r24, Y+32	; 0x20
     9e0:	8a 95       	dec	r24
     9e2:	f1 f7       	brne	.-4      	; 0x9e0 <__stack+0x181>
     9e4:	88 a3       	std	Y+32, r24	; 0x20
     9e6:	a1 96       	adiw	r28, 0x21	; 33
     9e8:	0f b6       	in	r0, 0x3f	; 63
     9ea:	f8 94       	cli
     9ec:	de bf       	out	0x3e, r29	; 62
     9ee:	0f be       	out	0x3f, r0	; 63
     9f0:	cd bf       	out	0x3d, r28	; 61
     9f2:	df 91       	pop	r29
     9f4:	cf 91       	pop	r28
     9f6:	08 95       	ret

000009f8 <LCD_send_data>:
     9f8:	cf 93       	push	r28
     9fa:	df 93       	push	r29
     9fc:	cd b7       	in	r28, 0x3d	; 61
     9fe:	de b7       	in	r29, 0x3e	; 62
     a00:	a1 97       	sbiw	r28, 0x21	; 33
     a02:	0f b6       	in	r0, 0x3f	; 63
     a04:	f8 94       	cli
     a06:	de bf       	out	0x3e, r29	; 62
     a08:	0f be       	out	0x3f, r0	; 63
     a0a:	cd bf       	out	0x3d, r28	; 61
     a0c:	89 a3       	std	Y+33, r24	; 0x21
     a0e:	61 e0       	ldi	r22, 0x01	; 1
     a10:	89 e0       	ldi	r24, 0x09	; 9
     a12:	0e 94 fe 08 	call	0x11fc	; 0x11fc <writePin>
     a16:	40 e0       	ldi	r20, 0x00	; 0
     a18:	60 ef       	ldi	r22, 0xF0	; 240
     a1a:	8b e3       	ldi	r24, 0x3B	; 59
     a1c:	90 e0       	ldi	r25, 0x00	; 0
     a1e:	0e 94 57 0b 	call	0x16ae	; 0x16ae <writePins>
     a22:	89 a1       	ldd	r24, Y+33	; 0x21
     a24:	80 7f       	andi	r24, 0xF0	; 240
     a26:	41 e0       	ldi	r20, 0x01	; 1
     a28:	68 2f       	mov	r22, r24
     a2a:	8b e3       	ldi	r24, 0x3B	; 59
     a2c:	90 e0       	ldi	r25, 0x00	; 0
     a2e:	0e 94 57 0b 	call	0x16ae	; 0x16ae <writePins>
     a32:	0e 94 2a 06 	call	0xc54	; 0xc54 <LCD_latch>
     a36:	40 e0       	ldi	r20, 0x00	; 0
     a38:	60 ef       	ldi	r22, 0xF0	; 240
     a3a:	8b e3       	ldi	r24, 0x3B	; 59
     a3c:	90 e0       	ldi	r25, 0x00	; 0
     a3e:	0e 94 57 0b 	call	0x16ae	; 0x16ae <writePins>
     a42:	89 a1       	ldd	r24, Y+33	; 0x21
     a44:	88 2f       	mov	r24, r24
     a46:	90 e0       	ldi	r25, 0x00	; 0
     a48:	82 95       	swap	r24
     a4a:	92 95       	swap	r25
     a4c:	90 7f       	andi	r25, 0xF0	; 240
     a4e:	98 27       	eor	r25, r24
     a50:	80 7f       	andi	r24, 0xF0	; 240
     a52:	98 27       	eor	r25, r24
     a54:	41 e0       	ldi	r20, 0x01	; 1
     a56:	68 2f       	mov	r22, r24
     a58:	8b e3       	ldi	r24, 0x3B	; 59
     a5a:	90 e0       	ldi	r25, 0x00	; 0
     a5c:	0e 94 57 0b 	call	0x16ae	; 0x16ae <writePins>
     a60:	0e 94 2a 06 	call	0xc54	; 0xc54 <LCD_latch>
     a64:	80 e0       	ldi	r24, 0x00	; 0
     a66:	90 e0       	ldi	r25, 0x00	; 0
     a68:	a0 e2       	ldi	r26, 0x20	; 32
     a6a:	b2 e4       	ldi	r27, 0x42	; 66
     a6c:	89 83       	std	Y+1, r24	; 0x01
     a6e:	9a 83       	std	Y+2, r25	; 0x02
     a70:	ab 83       	std	Y+3, r26	; 0x03
     a72:	bc 83       	std	Y+4, r27	; 0x04
     a74:	2b ea       	ldi	r18, 0xAB	; 171
     a76:	3a ea       	ldi	r19, 0xAA	; 170
     a78:	4a ea       	ldi	r20, 0xAA	; 170
     a7a:	50 e4       	ldi	r21, 0x40	; 64
     a7c:	69 81       	ldd	r22, Y+1	; 0x01
     a7e:	7a 81       	ldd	r23, Y+2	; 0x02
     a80:	8b 81       	ldd	r24, Y+3	; 0x03
     a82:	9c 81       	ldd	r25, Y+4	; 0x04
     a84:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <__mulsf3>
     a88:	dc 01       	movw	r26, r24
     a8a:	cb 01       	movw	r24, r22
     a8c:	8d 83       	std	Y+5, r24	; 0x05
     a8e:	9e 83       	std	Y+6, r25	; 0x06
     a90:	af 83       	std	Y+7, r26	; 0x07
     a92:	b8 87       	std	Y+8, r27	; 0x08
     a94:	20 e0       	ldi	r18, 0x00	; 0
     a96:	30 e0       	ldi	r19, 0x00	; 0
     a98:	40 e8       	ldi	r20, 0x80	; 128
     a9a:	50 e4       	ldi	r21, 0x40	; 64
     a9c:	69 81       	ldd	r22, Y+1	; 0x01
     a9e:	7a 81       	ldd	r23, Y+2	; 0x02
     aa0:	8b 81       	ldd	r24, Y+3	; 0x03
     aa2:	9c 81       	ldd	r25, Y+4	; 0x04
     aa4:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <__mulsf3>
     aa8:	dc 01       	movw	r26, r24
     aaa:	cb 01       	movw	r24, r22
     aac:	89 87       	std	Y+9, r24	; 0x09
     aae:	9a 87       	std	Y+10, r25	; 0x0a
     ab0:	ab 87       	std	Y+11, r26	; 0x0b
     ab2:	bc 87       	std	Y+12, r27	; 0x0c
     ab4:	20 e0       	ldi	r18, 0x00	; 0
     ab6:	30 e0       	ldi	r19, 0x00	; 0
     ab8:	40 e8       	ldi	r20, 0x80	; 128
     aba:	5f e3       	ldi	r21, 0x3F	; 63
     abc:	6d 81       	ldd	r22, Y+5	; 0x05
     abe:	7e 81       	ldd	r23, Y+6	; 0x06
     ac0:	8f 81       	ldd	r24, Y+7	; 0x07
     ac2:	98 85       	ldd	r25, Y+8	; 0x08
     ac4:	0e 94 b7 0b 	call	0x176e	; 0x176e <__cmpsf2>
     ac8:	88 23       	and	r24, r24
     aca:	1c f4       	brge	.+6      	; 0xad2 <LCD_send_data+0xda>
     acc:	81 e0       	ldi	r24, 0x01	; 1
     ace:	8d 87       	std	Y+13, r24	; 0x0d
     ad0:	b2 c0       	rjmp	.+356    	; 0xc36 <LCD_send_data+0x23e>
     ad2:	20 e0       	ldi	r18, 0x00	; 0
     ad4:	3f ef       	ldi	r19, 0xFF	; 255
     ad6:	4f e7       	ldi	r20, 0x7F	; 127
     ad8:	57 e4       	ldi	r21, 0x47	; 71
     ada:	69 85       	ldd	r22, Y+9	; 0x09
     adc:	7a 85       	ldd	r23, Y+10	; 0x0a
     ade:	8b 85       	ldd	r24, Y+11	; 0x0b
     ae0:	9c 85       	ldd	r25, Y+12	; 0x0c
     ae2:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__gesf2>
     ae6:	18 16       	cp	r1, r24
     ae8:	0c f0       	brlt	.+2      	; 0xaec <LCD_send_data+0xf4>
     aea:	7b c0       	rjmp	.+246    	; 0xbe2 <LCD_send_data+0x1ea>
     aec:	20 e0       	ldi	r18, 0x00	; 0
     aee:	30 e0       	ldi	r19, 0x00	; 0
     af0:	4a e7       	ldi	r20, 0x7A	; 122
     af2:	54 e4       	ldi	r21, 0x44	; 68
     af4:	69 81       	ldd	r22, Y+1	; 0x01
     af6:	7a 81       	ldd	r23, Y+2	; 0x02
     af8:	8b 81       	ldd	r24, Y+3	; 0x03
     afa:	9c 81       	ldd	r25, Y+4	; 0x04
     afc:	0e 94 bc 0b 	call	0x1778	; 0x1778 <__divsf3>
     b00:	dc 01       	movw	r26, r24
     b02:	cb 01       	movw	r24, r22
     b04:	8e 87       	std	Y+14, r24	; 0x0e
     b06:	9f 87       	std	Y+15, r25	; 0x0f
     b08:	a8 8b       	std	Y+16, r26	; 0x10
     b0a:	b9 8b       	std	Y+17, r27	; 0x11
     b0c:	20 e0       	ldi	r18, 0x00	; 0
     b0e:	30 e0       	ldi	r19, 0x00	; 0
     b10:	4a e7       	ldi	r20, 0x7A	; 122
     b12:	55 e4       	ldi	r21, 0x45	; 69
     b14:	6e 85       	ldd	r22, Y+14	; 0x0e
     b16:	7f 85       	ldd	r23, Y+15	; 0x0f
     b18:	88 89       	ldd	r24, Y+16	; 0x10
     b1a:	99 89       	ldd	r25, Y+17	; 0x11
     b1c:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <__mulsf3>
     b20:	dc 01       	movw	r26, r24
     b22:	cb 01       	movw	r24, r22
     b24:	8a 8b       	std	Y+18, r24	; 0x12
     b26:	9b 8b       	std	Y+19, r25	; 0x13
     b28:	ac 8b       	std	Y+20, r26	; 0x14
     b2a:	bd 8b       	std	Y+21, r27	; 0x15
     b2c:	20 e0       	ldi	r18, 0x00	; 0
     b2e:	30 e0       	ldi	r19, 0x00	; 0
     b30:	40 e8       	ldi	r20, 0x80	; 128
     b32:	5f e3       	ldi	r21, 0x3F	; 63
     b34:	6a 89       	ldd	r22, Y+18	; 0x12
     b36:	7b 89       	ldd	r23, Y+19	; 0x13
     b38:	8c 89       	ldd	r24, Y+20	; 0x14
     b3a:	9d 89       	ldd	r25, Y+21	; 0x15
     b3c:	0e 94 b7 0b 	call	0x176e	; 0x176e <__cmpsf2>
     b40:	88 23       	and	r24, r24
     b42:	2c f4       	brge	.+10     	; 0xb4e <LCD_send_data+0x156>
     b44:	81 e0       	ldi	r24, 0x01	; 1
     b46:	90 e0       	ldi	r25, 0x00	; 0
     b48:	9f 8b       	std	Y+23, r25	; 0x17
     b4a:	8e 8b       	std	Y+22, r24	; 0x16
     b4c:	3f c0       	rjmp	.+126    	; 0xbcc <LCD_send_data+0x1d4>
     b4e:	20 e0       	ldi	r18, 0x00	; 0
     b50:	3f ef       	ldi	r19, 0xFF	; 255
     b52:	4f e7       	ldi	r20, 0x7F	; 127
     b54:	57 e4       	ldi	r21, 0x47	; 71
     b56:	6a 89       	ldd	r22, Y+18	; 0x12
     b58:	7b 89       	ldd	r23, Y+19	; 0x13
     b5a:	8c 89       	ldd	r24, Y+20	; 0x14
     b5c:	9d 89       	ldd	r25, Y+21	; 0x15
     b5e:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__gesf2>
     b62:	18 16       	cp	r1, r24
     b64:	4c f5       	brge	.+82     	; 0xbb8 <LCD_send_data+0x1c0>
     b66:	20 e0       	ldi	r18, 0x00	; 0
     b68:	30 e0       	ldi	r19, 0x00	; 0
     b6a:	40 e2       	ldi	r20, 0x20	; 32
     b6c:	51 e4       	ldi	r21, 0x41	; 65
     b6e:	6e 85       	ldd	r22, Y+14	; 0x0e
     b70:	7f 85       	ldd	r23, Y+15	; 0x0f
     b72:	88 89       	ldd	r24, Y+16	; 0x10
     b74:	99 89       	ldd	r25, Y+17	; 0x11
     b76:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <__mulsf3>
     b7a:	dc 01       	movw	r26, r24
     b7c:	cb 01       	movw	r24, r22
     b7e:	bc 01       	movw	r22, r24
     b80:	cd 01       	movw	r24, r26
     b82:	0e 94 2e 0c 	call	0x185c	; 0x185c <__fixunssfsi>
     b86:	dc 01       	movw	r26, r24
     b88:	cb 01       	movw	r24, r22
     b8a:	9f 8b       	std	Y+23, r25	; 0x17
     b8c:	8e 8b       	std	Y+22, r24	; 0x16
     b8e:	0f c0       	rjmp	.+30     	; 0xbae <LCD_send_data+0x1b6>
     b90:	80 e9       	ldi	r24, 0x90	; 144
     b92:	91 e0       	ldi	r25, 0x01	; 1
     b94:	99 8f       	std	Y+25, r25	; 0x19
     b96:	88 8f       	std	Y+24, r24	; 0x18
     b98:	88 8d       	ldd	r24, Y+24	; 0x18
     b9a:	99 8d       	ldd	r25, Y+25	; 0x19
     b9c:	01 97       	sbiw	r24, 0x01	; 1
     b9e:	f1 f7       	brne	.-4      	; 0xb9c <LCD_send_data+0x1a4>
     ba0:	99 8f       	std	Y+25, r25	; 0x19
     ba2:	88 8f       	std	Y+24, r24	; 0x18
     ba4:	8e 89       	ldd	r24, Y+22	; 0x16
     ba6:	9f 89       	ldd	r25, Y+23	; 0x17
     ba8:	01 97       	sbiw	r24, 0x01	; 1
     baa:	9f 8b       	std	Y+23, r25	; 0x17
     bac:	8e 8b       	std	Y+22, r24	; 0x16
     bae:	8e 89       	ldd	r24, Y+22	; 0x16
     bb0:	9f 89       	ldd	r25, Y+23	; 0x17
     bb2:	89 2b       	or	r24, r25
     bb4:	69 f7       	brne	.-38     	; 0xb90 <LCD_send_data+0x198>
     bb6:	3f c0       	rjmp	.+126    	; 0xc36 <LCD_send_data+0x23e>
     bb8:	6a 89       	ldd	r22, Y+18	; 0x12
     bba:	7b 89       	ldd	r23, Y+19	; 0x13
     bbc:	8c 89       	ldd	r24, Y+20	; 0x14
     bbe:	9d 89       	ldd	r25, Y+21	; 0x15
     bc0:	0e 94 2e 0c 	call	0x185c	; 0x185c <__fixunssfsi>
     bc4:	dc 01       	movw	r26, r24
     bc6:	cb 01       	movw	r24, r22
     bc8:	9f 8b       	std	Y+23, r25	; 0x17
     bca:	8e 8b       	std	Y+22, r24	; 0x16
     bcc:	8e 89       	ldd	r24, Y+22	; 0x16
     bce:	9f 89       	ldd	r25, Y+23	; 0x17
     bd0:	9b 8f       	std	Y+27, r25	; 0x1b
     bd2:	8a 8f       	std	Y+26, r24	; 0x1a
     bd4:	8a 8d       	ldd	r24, Y+26	; 0x1a
     bd6:	9b 8d       	ldd	r25, Y+27	; 0x1b
     bd8:	01 97       	sbiw	r24, 0x01	; 1
     bda:	f1 f7       	brne	.-4      	; 0xbd8 <LCD_send_data+0x1e0>
     bdc:	9b 8f       	std	Y+27, r25	; 0x1b
     bde:	8a 8f       	std	Y+26, r24	; 0x1a
     be0:	2a c0       	rjmp	.+84     	; 0xc36 <LCD_send_data+0x23e>
     be2:	20 e0       	ldi	r18, 0x00	; 0
     be4:	30 e0       	ldi	r19, 0x00	; 0
     be6:	4f e7       	ldi	r20, 0x7F	; 127
     be8:	53 e4       	ldi	r21, 0x43	; 67
     bea:	6d 81       	ldd	r22, Y+5	; 0x05
     bec:	7e 81       	ldd	r23, Y+6	; 0x06
     bee:	8f 81       	ldd	r24, Y+7	; 0x07
     bf0:	98 85       	ldd	r25, Y+8	; 0x08
     bf2:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__gesf2>
     bf6:	18 16       	cp	r1, r24
     bf8:	ac f4       	brge	.+42     	; 0xc24 <LCD_send_data+0x22c>
     bfa:	69 85       	ldd	r22, Y+9	; 0x09
     bfc:	7a 85       	ldd	r23, Y+10	; 0x0a
     bfe:	8b 85       	ldd	r24, Y+11	; 0x0b
     c00:	9c 85       	ldd	r25, Y+12	; 0x0c
     c02:	0e 94 2e 0c 	call	0x185c	; 0x185c <__fixunssfsi>
     c06:	dc 01       	movw	r26, r24
     c08:	cb 01       	movw	r24, r22
     c0a:	9d 8f       	std	Y+29, r25	; 0x1d
     c0c:	8c 8f       	std	Y+28, r24	; 0x1c
     c0e:	8c 8d       	ldd	r24, Y+28	; 0x1c
     c10:	9d 8d       	ldd	r25, Y+29	; 0x1d
     c12:	9f 8f       	std	Y+31, r25	; 0x1f
     c14:	8e 8f       	std	Y+30, r24	; 0x1e
     c16:	8e 8d       	ldd	r24, Y+30	; 0x1e
     c18:	9f 8d       	ldd	r25, Y+31	; 0x1f
     c1a:	01 97       	sbiw	r24, 0x01	; 1
     c1c:	f1 f7       	brne	.-4      	; 0xc1a <LCD_send_data+0x222>
     c1e:	9f 8f       	std	Y+31, r25	; 0x1f
     c20:	8e 8f       	std	Y+30, r24	; 0x1e
     c22:	0f c0       	rjmp	.+30     	; 0xc42 <LCD_send_data+0x24a>
     c24:	6d 81       	ldd	r22, Y+5	; 0x05
     c26:	7e 81       	ldd	r23, Y+6	; 0x06
     c28:	8f 81       	ldd	r24, Y+7	; 0x07
     c2a:	98 85       	ldd	r25, Y+8	; 0x08
     c2c:	0e 94 2e 0c 	call	0x185c	; 0x185c <__fixunssfsi>
     c30:	dc 01       	movw	r26, r24
     c32:	cb 01       	movw	r24, r22
     c34:	8d 87       	std	Y+13, r24	; 0x0d
     c36:	8d 85       	ldd	r24, Y+13	; 0x0d
     c38:	88 a3       	std	Y+32, r24	; 0x20
     c3a:	88 a1       	ldd	r24, Y+32	; 0x20
     c3c:	8a 95       	dec	r24
     c3e:	f1 f7       	brne	.-4      	; 0xc3c <LCD_send_data+0x244>
     c40:	88 a3       	std	Y+32, r24	; 0x20
     c42:	a1 96       	adiw	r28, 0x21	; 33
     c44:	0f b6       	in	r0, 0x3f	; 63
     c46:	f8 94       	cli
     c48:	de bf       	out	0x3e, r29	; 62
     c4a:	0f be       	out	0x3f, r0	; 63
     c4c:	cd bf       	out	0x3d, r28	; 61
     c4e:	df 91       	pop	r29
     c50:	cf 91       	pop	r28
     c52:	08 95       	ret

00000c54 <LCD_latch>:
     c54:	cf 93       	push	r28
     c56:	df 93       	push	r29
     c58:	cd b7       	in	r28, 0x3d	; 61
     c5a:	de b7       	in	r29, 0x3e	; 62
     c5c:	c0 54       	subi	r28, 0x40	; 64
     c5e:	d1 09       	sbc	r29, r1
     c60:	0f b6       	in	r0, 0x3f	; 63
     c62:	f8 94       	cli
     c64:	de bf       	out	0x3e, r29	; 62
     c66:	0f be       	out	0x3f, r0	; 63
     c68:	cd bf       	out	0x3d, r28	; 61
     c6a:	61 e0       	ldi	r22, 0x01	; 1
     c6c:	8b e0       	ldi	r24, 0x0B	; 11
     c6e:	0e 94 fe 08 	call	0x11fc	; 0x11fc <writePin>
     c72:	80 e0       	ldi	r24, 0x00	; 0
     c74:	90 e0       	ldi	r25, 0x00	; 0
     c76:	a0 e2       	ldi	r26, 0x20	; 32
     c78:	b2 e4       	ldi	r27, 0x42	; 66
     c7a:	89 83       	std	Y+1, r24	; 0x01
     c7c:	9a 83       	std	Y+2, r25	; 0x02
     c7e:	ab 83       	std	Y+3, r26	; 0x03
     c80:	bc 83       	std	Y+4, r27	; 0x04
     c82:	2b ea       	ldi	r18, 0xAB	; 171
     c84:	3a ea       	ldi	r19, 0xAA	; 170
     c86:	4a ea       	ldi	r20, 0xAA	; 170
     c88:	50 e4       	ldi	r21, 0x40	; 64
     c8a:	69 81       	ldd	r22, Y+1	; 0x01
     c8c:	7a 81       	ldd	r23, Y+2	; 0x02
     c8e:	8b 81       	ldd	r24, Y+3	; 0x03
     c90:	9c 81       	ldd	r25, Y+4	; 0x04
     c92:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <__mulsf3>
     c96:	dc 01       	movw	r26, r24
     c98:	cb 01       	movw	r24, r22
     c9a:	8d 83       	std	Y+5, r24	; 0x05
     c9c:	9e 83       	std	Y+6, r25	; 0x06
     c9e:	af 83       	std	Y+7, r26	; 0x07
     ca0:	b8 87       	std	Y+8, r27	; 0x08
     ca2:	20 e0       	ldi	r18, 0x00	; 0
     ca4:	30 e0       	ldi	r19, 0x00	; 0
     ca6:	40 e8       	ldi	r20, 0x80	; 128
     ca8:	50 e4       	ldi	r21, 0x40	; 64
     caa:	69 81       	ldd	r22, Y+1	; 0x01
     cac:	7a 81       	ldd	r23, Y+2	; 0x02
     cae:	8b 81       	ldd	r24, Y+3	; 0x03
     cb0:	9c 81       	ldd	r25, Y+4	; 0x04
     cb2:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <__mulsf3>
     cb6:	dc 01       	movw	r26, r24
     cb8:	cb 01       	movw	r24, r22
     cba:	89 87       	std	Y+9, r24	; 0x09
     cbc:	9a 87       	std	Y+10, r25	; 0x0a
     cbe:	ab 87       	std	Y+11, r26	; 0x0b
     cc0:	bc 87       	std	Y+12, r27	; 0x0c
     cc2:	20 e0       	ldi	r18, 0x00	; 0
     cc4:	30 e0       	ldi	r19, 0x00	; 0
     cc6:	40 e8       	ldi	r20, 0x80	; 128
     cc8:	5f e3       	ldi	r21, 0x3F	; 63
     cca:	6d 81       	ldd	r22, Y+5	; 0x05
     ccc:	7e 81       	ldd	r23, Y+6	; 0x06
     cce:	8f 81       	ldd	r24, Y+7	; 0x07
     cd0:	98 85       	ldd	r25, Y+8	; 0x08
     cd2:	0e 94 b7 0b 	call	0x176e	; 0x176e <__cmpsf2>
     cd6:	88 23       	and	r24, r24
     cd8:	1c f4       	brge	.+6      	; 0xce0 <LCD_latch+0x8c>
     cda:	81 e0       	ldi	r24, 0x01	; 1
     cdc:	8d 87       	std	Y+13, r24	; 0x0d
     cde:	b2 c0       	rjmp	.+356    	; 0xe44 <LCD_latch+0x1f0>
     ce0:	20 e0       	ldi	r18, 0x00	; 0
     ce2:	3f ef       	ldi	r19, 0xFF	; 255
     ce4:	4f e7       	ldi	r20, 0x7F	; 127
     ce6:	57 e4       	ldi	r21, 0x47	; 71
     ce8:	69 85       	ldd	r22, Y+9	; 0x09
     cea:	7a 85       	ldd	r23, Y+10	; 0x0a
     cec:	8b 85       	ldd	r24, Y+11	; 0x0b
     cee:	9c 85       	ldd	r25, Y+12	; 0x0c
     cf0:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__gesf2>
     cf4:	18 16       	cp	r1, r24
     cf6:	0c f0       	brlt	.+2      	; 0xcfa <LCD_latch+0xa6>
     cf8:	7b c0       	rjmp	.+246    	; 0xdf0 <LCD_latch+0x19c>
     cfa:	20 e0       	ldi	r18, 0x00	; 0
     cfc:	30 e0       	ldi	r19, 0x00	; 0
     cfe:	4a e7       	ldi	r20, 0x7A	; 122
     d00:	54 e4       	ldi	r21, 0x44	; 68
     d02:	69 81       	ldd	r22, Y+1	; 0x01
     d04:	7a 81       	ldd	r23, Y+2	; 0x02
     d06:	8b 81       	ldd	r24, Y+3	; 0x03
     d08:	9c 81       	ldd	r25, Y+4	; 0x04
     d0a:	0e 94 bc 0b 	call	0x1778	; 0x1778 <__divsf3>
     d0e:	dc 01       	movw	r26, r24
     d10:	cb 01       	movw	r24, r22
     d12:	8e 87       	std	Y+14, r24	; 0x0e
     d14:	9f 87       	std	Y+15, r25	; 0x0f
     d16:	a8 8b       	std	Y+16, r26	; 0x10
     d18:	b9 8b       	std	Y+17, r27	; 0x11
     d1a:	20 e0       	ldi	r18, 0x00	; 0
     d1c:	30 e0       	ldi	r19, 0x00	; 0
     d1e:	4a e7       	ldi	r20, 0x7A	; 122
     d20:	55 e4       	ldi	r21, 0x45	; 69
     d22:	6e 85       	ldd	r22, Y+14	; 0x0e
     d24:	7f 85       	ldd	r23, Y+15	; 0x0f
     d26:	88 89       	ldd	r24, Y+16	; 0x10
     d28:	99 89       	ldd	r25, Y+17	; 0x11
     d2a:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <__mulsf3>
     d2e:	dc 01       	movw	r26, r24
     d30:	cb 01       	movw	r24, r22
     d32:	8a 8b       	std	Y+18, r24	; 0x12
     d34:	9b 8b       	std	Y+19, r25	; 0x13
     d36:	ac 8b       	std	Y+20, r26	; 0x14
     d38:	bd 8b       	std	Y+21, r27	; 0x15
     d3a:	20 e0       	ldi	r18, 0x00	; 0
     d3c:	30 e0       	ldi	r19, 0x00	; 0
     d3e:	40 e8       	ldi	r20, 0x80	; 128
     d40:	5f e3       	ldi	r21, 0x3F	; 63
     d42:	6a 89       	ldd	r22, Y+18	; 0x12
     d44:	7b 89       	ldd	r23, Y+19	; 0x13
     d46:	8c 89       	ldd	r24, Y+20	; 0x14
     d48:	9d 89       	ldd	r25, Y+21	; 0x15
     d4a:	0e 94 b7 0b 	call	0x176e	; 0x176e <__cmpsf2>
     d4e:	88 23       	and	r24, r24
     d50:	2c f4       	brge	.+10     	; 0xd5c <LCD_latch+0x108>
     d52:	81 e0       	ldi	r24, 0x01	; 1
     d54:	90 e0       	ldi	r25, 0x00	; 0
     d56:	9f 8b       	std	Y+23, r25	; 0x17
     d58:	8e 8b       	std	Y+22, r24	; 0x16
     d5a:	3f c0       	rjmp	.+126    	; 0xdda <LCD_latch+0x186>
     d5c:	20 e0       	ldi	r18, 0x00	; 0
     d5e:	3f ef       	ldi	r19, 0xFF	; 255
     d60:	4f e7       	ldi	r20, 0x7F	; 127
     d62:	57 e4       	ldi	r21, 0x47	; 71
     d64:	6a 89       	ldd	r22, Y+18	; 0x12
     d66:	7b 89       	ldd	r23, Y+19	; 0x13
     d68:	8c 89       	ldd	r24, Y+20	; 0x14
     d6a:	9d 89       	ldd	r25, Y+21	; 0x15
     d6c:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__gesf2>
     d70:	18 16       	cp	r1, r24
     d72:	4c f5       	brge	.+82     	; 0xdc6 <LCD_latch+0x172>
     d74:	20 e0       	ldi	r18, 0x00	; 0
     d76:	30 e0       	ldi	r19, 0x00	; 0
     d78:	40 e2       	ldi	r20, 0x20	; 32
     d7a:	51 e4       	ldi	r21, 0x41	; 65
     d7c:	6e 85       	ldd	r22, Y+14	; 0x0e
     d7e:	7f 85       	ldd	r23, Y+15	; 0x0f
     d80:	88 89       	ldd	r24, Y+16	; 0x10
     d82:	99 89       	ldd	r25, Y+17	; 0x11
     d84:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <__mulsf3>
     d88:	dc 01       	movw	r26, r24
     d8a:	cb 01       	movw	r24, r22
     d8c:	bc 01       	movw	r22, r24
     d8e:	cd 01       	movw	r24, r26
     d90:	0e 94 2e 0c 	call	0x185c	; 0x185c <__fixunssfsi>
     d94:	dc 01       	movw	r26, r24
     d96:	cb 01       	movw	r24, r22
     d98:	9f 8b       	std	Y+23, r25	; 0x17
     d9a:	8e 8b       	std	Y+22, r24	; 0x16
     d9c:	0f c0       	rjmp	.+30     	; 0xdbc <LCD_latch+0x168>
     d9e:	80 e9       	ldi	r24, 0x90	; 144
     da0:	91 e0       	ldi	r25, 0x01	; 1
     da2:	99 8f       	std	Y+25, r25	; 0x19
     da4:	88 8f       	std	Y+24, r24	; 0x18
     da6:	88 8d       	ldd	r24, Y+24	; 0x18
     da8:	99 8d       	ldd	r25, Y+25	; 0x19
     daa:	01 97       	sbiw	r24, 0x01	; 1
     dac:	f1 f7       	brne	.-4      	; 0xdaa <LCD_latch+0x156>
     dae:	99 8f       	std	Y+25, r25	; 0x19
     db0:	88 8f       	std	Y+24, r24	; 0x18
     db2:	8e 89       	ldd	r24, Y+22	; 0x16
     db4:	9f 89       	ldd	r25, Y+23	; 0x17
     db6:	01 97       	sbiw	r24, 0x01	; 1
     db8:	9f 8b       	std	Y+23, r25	; 0x17
     dba:	8e 8b       	std	Y+22, r24	; 0x16
     dbc:	8e 89       	ldd	r24, Y+22	; 0x16
     dbe:	9f 89       	ldd	r25, Y+23	; 0x17
     dc0:	89 2b       	or	r24, r25
     dc2:	69 f7       	brne	.-38     	; 0xd9e <LCD_latch+0x14a>
     dc4:	3f c0       	rjmp	.+126    	; 0xe44 <LCD_latch+0x1f0>
     dc6:	6a 89       	ldd	r22, Y+18	; 0x12
     dc8:	7b 89       	ldd	r23, Y+19	; 0x13
     dca:	8c 89       	ldd	r24, Y+20	; 0x14
     dcc:	9d 89       	ldd	r25, Y+21	; 0x15
     dce:	0e 94 2e 0c 	call	0x185c	; 0x185c <__fixunssfsi>
     dd2:	dc 01       	movw	r26, r24
     dd4:	cb 01       	movw	r24, r22
     dd6:	9f 8b       	std	Y+23, r25	; 0x17
     dd8:	8e 8b       	std	Y+22, r24	; 0x16
     dda:	8e 89       	ldd	r24, Y+22	; 0x16
     ddc:	9f 89       	ldd	r25, Y+23	; 0x17
     dde:	9b 8f       	std	Y+27, r25	; 0x1b
     de0:	8a 8f       	std	Y+26, r24	; 0x1a
     de2:	8a 8d       	ldd	r24, Y+26	; 0x1a
     de4:	9b 8d       	ldd	r25, Y+27	; 0x1b
     de6:	01 97       	sbiw	r24, 0x01	; 1
     de8:	f1 f7       	brne	.-4      	; 0xde6 <LCD_latch+0x192>
     dea:	9b 8f       	std	Y+27, r25	; 0x1b
     dec:	8a 8f       	std	Y+26, r24	; 0x1a
     dee:	2a c0       	rjmp	.+84     	; 0xe44 <LCD_latch+0x1f0>
     df0:	20 e0       	ldi	r18, 0x00	; 0
     df2:	30 e0       	ldi	r19, 0x00	; 0
     df4:	4f e7       	ldi	r20, 0x7F	; 127
     df6:	53 e4       	ldi	r21, 0x43	; 67
     df8:	6d 81       	ldd	r22, Y+5	; 0x05
     dfa:	7e 81       	ldd	r23, Y+6	; 0x06
     dfc:	8f 81       	ldd	r24, Y+7	; 0x07
     dfe:	98 85       	ldd	r25, Y+8	; 0x08
     e00:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__gesf2>
     e04:	18 16       	cp	r1, r24
     e06:	ac f4       	brge	.+42     	; 0xe32 <LCD_latch+0x1de>
     e08:	69 85       	ldd	r22, Y+9	; 0x09
     e0a:	7a 85       	ldd	r23, Y+10	; 0x0a
     e0c:	8b 85       	ldd	r24, Y+11	; 0x0b
     e0e:	9c 85       	ldd	r25, Y+12	; 0x0c
     e10:	0e 94 2e 0c 	call	0x185c	; 0x185c <__fixunssfsi>
     e14:	dc 01       	movw	r26, r24
     e16:	cb 01       	movw	r24, r22
     e18:	9d 8f       	std	Y+29, r25	; 0x1d
     e1a:	8c 8f       	std	Y+28, r24	; 0x1c
     e1c:	8c 8d       	ldd	r24, Y+28	; 0x1c
     e1e:	9d 8d       	ldd	r25, Y+29	; 0x1d
     e20:	9f 8f       	std	Y+31, r25	; 0x1f
     e22:	8e 8f       	std	Y+30, r24	; 0x1e
     e24:	8e 8d       	ldd	r24, Y+30	; 0x1e
     e26:	9f 8d       	ldd	r25, Y+31	; 0x1f
     e28:	01 97       	sbiw	r24, 0x01	; 1
     e2a:	f1 f7       	brne	.-4      	; 0xe28 <LCD_latch+0x1d4>
     e2c:	9f 8f       	std	Y+31, r25	; 0x1f
     e2e:	8e 8f       	std	Y+30, r24	; 0x1e
     e30:	0f c0       	rjmp	.+30     	; 0xe50 <LCD_latch+0x1fc>
     e32:	6d 81       	ldd	r22, Y+5	; 0x05
     e34:	7e 81       	ldd	r23, Y+6	; 0x06
     e36:	8f 81       	ldd	r24, Y+7	; 0x07
     e38:	98 85       	ldd	r25, Y+8	; 0x08
     e3a:	0e 94 2e 0c 	call	0x185c	; 0x185c <__fixunssfsi>
     e3e:	dc 01       	movw	r26, r24
     e40:	cb 01       	movw	r24, r22
     e42:	8d 87       	std	Y+13, r24	; 0x0d
     e44:	8d 85       	ldd	r24, Y+13	; 0x0d
     e46:	88 a3       	std	Y+32, r24	; 0x20
     e48:	88 a1       	ldd	r24, Y+32	; 0x20
     e4a:	8a 95       	dec	r24
     e4c:	f1 f7       	brne	.-4      	; 0xe4a <LCD_latch+0x1f6>
     e4e:	88 a3       	std	Y+32, r24	; 0x20
     e50:	60 e0       	ldi	r22, 0x00	; 0
     e52:	8b e0       	ldi	r24, 0x0B	; 11
     e54:	0e 94 fe 08 	call	0x11fc	; 0x11fc <writePin>
     e58:	80 e0       	ldi	r24, 0x00	; 0
     e5a:	90 e0       	ldi	r25, 0x00	; 0
     e5c:	a0 e2       	ldi	r26, 0x20	; 32
     e5e:	b2 e4       	ldi	r27, 0x42	; 66
     e60:	89 a3       	std	Y+33, r24	; 0x21
     e62:	9a a3       	std	Y+34, r25	; 0x22
     e64:	ab a3       	std	Y+35, r26	; 0x23
     e66:	bc a3       	std	Y+36, r27	; 0x24
     e68:	2b ea       	ldi	r18, 0xAB	; 171
     e6a:	3a ea       	ldi	r19, 0xAA	; 170
     e6c:	4a ea       	ldi	r20, 0xAA	; 170
     e6e:	50 e4       	ldi	r21, 0x40	; 64
     e70:	69 a1       	ldd	r22, Y+33	; 0x21
     e72:	7a a1       	ldd	r23, Y+34	; 0x22
     e74:	8b a1       	ldd	r24, Y+35	; 0x23
     e76:	9c a1       	ldd	r25, Y+36	; 0x24
     e78:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <__mulsf3>
     e7c:	dc 01       	movw	r26, r24
     e7e:	cb 01       	movw	r24, r22
     e80:	8d a3       	std	Y+37, r24	; 0x25
     e82:	9e a3       	std	Y+38, r25	; 0x26
     e84:	af a3       	std	Y+39, r26	; 0x27
     e86:	b8 a7       	std	Y+40, r27	; 0x28
     e88:	20 e0       	ldi	r18, 0x00	; 0
     e8a:	30 e0       	ldi	r19, 0x00	; 0
     e8c:	40 e8       	ldi	r20, 0x80	; 128
     e8e:	50 e4       	ldi	r21, 0x40	; 64
     e90:	69 a1       	ldd	r22, Y+33	; 0x21
     e92:	7a a1       	ldd	r23, Y+34	; 0x22
     e94:	8b a1       	ldd	r24, Y+35	; 0x23
     e96:	9c a1       	ldd	r25, Y+36	; 0x24
     e98:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <__mulsf3>
     e9c:	dc 01       	movw	r26, r24
     e9e:	cb 01       	movw	r24, r22
     ea0:	89 a7       	std	Y+41, r24	; 0x29
     ea2:	9a a7       	std	Y+42, r25	; 0x2a
     ea4:	ab a7       	std	Y+43, r26	; 0x2b
     ea6:	bc a7       	std	Y+44, r27	; 0x2c
     ea8:	20 e0       	ldi	r18, 0x00	; 0
     eaa:	30 e0       	ldi	r19, 0x00	; 0
     eac:	40 e8       	ldi	r20, 0x80	; 128
     eae:	5f e3       	ldi	r21, 0x3F	; 63
     eb0:	6d a1       	ldd	r22, Y+37	; 0x25
     eb2:	7e a1       	ldd	r23, Y+38	; 0x26
     eb4:	8f a1       	ldd	r24, Y+39	; 0x27
     eb6:	98 a5       	ldd	r25, Y+40	; 0x28
     eb8:	0e 94 b7 0b 	call	0x176e	; 0x176e <__cmpsf2>
     ebc:	88 23       	and	r24, r24
     ebe:	1c f4       	brge	.+6      	; 0xec6 <LCD_latch+0x272>
     ec0:	81 e0       	ldi	r24, 0x01	; 1
     ec2:	8d a7       	std	Y+45, r24	; 0x2d
     ec4:	b2 c0       	rjmp	.+356    	; 0x102a <LCD_latch+0x3d6>
     ec6:	20 e0       	ldi	r18, 0x00	; 0
     ec8:	3f ef       	ldi	r19, 0xFF	; 255
     eca:	4f e7       	ldi	r20, 0x7F	; 127
     ecc:	57 e4       	ldi	r21, 0x47	; 71
     ece:	69 a5       	ldd	r22, Y+41	; 0x29
     ed0:	7a a5       	ldd	r23, Y+42	; 0x2a
     ed2:	8b a5       	ldd	r24, Y+43	; 0x2b
     ed4:	9c a5       	ldd	r25, Y+44	; 0x2c
     ed6:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__gesf2>
     eda:	18 16       	cp	r1, r24
     edc:	0c f0       	brlt	.+2      	; 0xee0 <LCD_latch+0x28c>
     ede:	7b c0       	rjmp	.+246    	; 0xfd6 <LCD_latch+0x382>
     ee0:	20 e0       	ldi	r18, 0x00	; 0
     ee2:	30 e0       	ldi	r19, 0x00	; 0
     ee4:	4a e7       	ldi	r20, 0x7A	; 122
     ee6:	54 e4       	ldi	r21, 0x44	; 68
     ee8:	69 a1       	ldd	r22, Y+33	; 0x21
     eea:	7a a1       	ldd	r23, Y+34	; 0x22
     eec:	8b a1       	ldd	r24, Y+35	; 0x23
     eee:	9c a1       	ldd	r25, Y+36	; 0x24
     ef0:	0e 94 bc 0b 	call	0x1778	; 0x1778 <__divsf3>
     ef4:	dc 01       	movw	r26, r24
     ef6:	cb 01       	movw	r24, r22
     ef8:	8e a7       	std	Y+46, r24	; 0x2e
     efa:	9f a7       	std	Y+47, r25	; 0x2f
     efc:	a8 ab       	std	Y+48, r26	; 0x30
     efe:	b9 ab       	std	Y+49, r27	; 0x31
     f00:	20 e0       	ldi	r18, 0x00	; 0
     f02:	30 e0       	ldi	r19, 0x00	; 0
     f04:	4a e7       	ldi	r20, 0x7A	; 122
     f06:	55 e4       	ldi	r21, 0x45	; 69
     f08:	6e a5       	ldd	r22, Y+46	; 0x2e
     f0a:	7f a5       	ldd	r23, Y+47	; 0x2f
     f0c:	88 a9       	ldd	r24, Y+48	; 0x30
     f0e:	99 a9       	ldd	r25, Y+49	; 0x31
     f10:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <__mulsf3>
     f14:	dc 01       	movw	r26, r24
     f16:	cb 01       	movw	r24, r22
     f18:	8a ab       	std	Y+50, r24	; 0x32
     f1a:	9b ab       	std	Y+51, r25	; 0x33
     f1c:	ac ab       	std	Y+52, r26	; 0x34
     f1e:	bd ab       	std	Y+53, r27	; 0x35
     f20:	20 e0       	ldi	r18, 0x00	; 0
     f22:	30 e0       	ldi	r19, 0x00	; 0
     f24:	40 e8       	ldi	r20, 0x80	; 128
     f26:	5f e3       	ldi	r21, 0x3F	; 63
     f28:	6a a9       	ldd	r22, Y+50	; 0x32
     f2a:	7b a9       	ldd	r23, Y+51	; 0x33
     f2c:	8c a9       	ldd	r24, Y+52	; 0x34
     f2e:	9d a9       	ldd	r25, Y+53	; 0x35
     f30:	0e 94 b7 0b 	call	0x176e	; 0x176e <__cmpsf2>
     f34:	88 23       	and	r24, r24
     f36:	2c f4       	brge	.+10     	; 0xf42 <LCD_latch+0x2ee>
     f38:	81 e0       	ldi	r24, 0x01	; 1
     f3a:	90 e0       	ldi	r25, 0x00	; 0
     f3c:	9f ab       	std	Y+55, r25	; 0x37
     f3e:	8e ab       	std	Y+54, r24	; 0x36
     f40:	3f c0       	rjmp	.+126    	; 0xfc0 <LCD_latch+0x36c>
     f42:	20 e0       	ldi	r18, 0x00	; 0
     f44:	3f ef       	ldi	r19, 0xFF	; 255
     f46:	4f e7       	ldi	r20, 0x7F	; 127
     f48:	57 e4       	ldi	r21, 0x47	; 71
     f4a:	6a a9       	ldd	r22, Y+50	; 0x32
     f4c:	7b a9       	ldd	r23, Y+51	; 0x33
     f4e:	8c a9       	ldd	r24, Y+52	; 0x34
     f50:	9d a9       	ldd	r25, Y+53	; 0x35
     f52:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__gesf2>
     f56:	18 16       	cp	r1, r24
     f58:	4c f5       	brge	.+82     	; 0xfac <LCD_latch+0x358>
     f5a:	20 e0       	ldi	r18, 0x00	; 0
     f5c:	30 e0       	ldi	r19, 0x00	; 0
     f5e:	40 e2       	ldi	r20, 0x20	; 32
     f60:	51 e4       	ldi	r21, 0x41	; 65
     f62:	6e a5       	ldd	r22, Y+46	; 0x2e
     f64:	7f a5       	ldd	r23, Y+47	; 0x2f
     f66:	88 a9       	ldd	r24, Y+48	; 0x30
     f68:	99 a9       	ldd	r25, Y+49	; 0x31
     f6a:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <__mulsf3>
     f6e:	dc 01       	movw	r26, r24
     f70:	cb 01       	movw	r24, r22
     f72:	bc 01       	movw	r22, r24
     f74:	cd 01       	movw	r24, r26
     f76:	0e 94 2e 0c 	call	0x185c	; 0x185c <__fixunssfsi>
     f7a:	dc 01       	movw	r26, r24
     f7c:	cb 01       	movw	r24, r22
     f7e:	9f ab       	std	Y+55, r25	; 0x37
     f80:	8e ab       	std	Y+54, r24	; 0x36
     f82:	0f c0       	rjmp	.+30     	; 0xfa2 <LCD_latch+0x34e>
     f84:	80 e9       	ldi	r24, 0x90	; 144
     f86:	91 e0       	ldi	r25, 0x01	; 1
     f88:	99 af       	std	Y+57, r25	; 0x39
     f8a:	88 af       	std	Y+56, r24	; 0x38
     f8c:	88 ad       	ldd	r24, Y+56	; 0x38
     f8e:	99 ad       	ldd	r25, Y+57	; 0x39
     f90:	01 97       	sbiw	r24, 0x01	; 1
     f92:	f1 f7       	brne	.-4      	; 0xf90 <LCD_latch+0x33c>
     f94:	99 af       	std	Y+57, r25	; 0x39
     f96:	88 af       	std	Y+56, r24	; 0x38
     f98:	8e a9       	ldd	r24, Y+54	; 0x36
     f9a:	9f a9       	ldd	r25, Y+55	; 0x37
     f9c:	01 97       	sbiw	r24, 0x01	; 1
     f9e:	9f ab       	std	Y+55, r25	; 0x37
     fa0:	8e ab       	std	Y+54, r24	; 0x36
     fa2:	8e a9       	ldd	r24, Y+54	; 0x36
     fa4:	9f a9       	ldd	r25, Y+55	; 0x37
     fa6:	89 2b       	or	r24, r25
     fa8:	69 f7       	brne	.-38     	; 0xf84 <LCD_latch+0x330>
     faa:	3f c0       	rjmp	.+126    	; 0x102a <LCD_latch+0x3d6>
     fac:	6a a9       	ldd	r22, Y+50	; 0x32
     fae:	7b a9       	ldd	r23, Y+51	; 0x33
     fb0:	8c a9       	ldd	r24, Y+52	; 0x34
     fb2:	9d a9       	ldd	r25, Y+53	; 0x35
     fb4:	0e 94 2e 0c 	call	0x185c	; 0x185c <__fixunssfsi>
     fb8:	dc 01       	movw	r26, r24
     fba:	cb 01       	movw	r24, r22
     fbc:	9f ab       	std	Y+55, r25	; 0x37
     fbe:	8e ab       	std	Y+54, r24	; 0x36
     fc0:	8e a9       	ldd	r24, Y+54	; 0x36
     fc2:	9f a9       	ldd	r25, Y+55	; 0x37
     fc4:	9b af       	std	Y+59, r25	; 0x3b
     fc6:	8a af       	std	Y+58, r24	; 0x3a
     fc8:	8a ad       	ldd	r24, Y+58	; 0x3a
     fca:	9b ad       	ldd	r25, Y+59	; 0x3b
     fcc:	01 97       	sbiw	r24, 0x01	; 1
     fce:	f1 f7       	brne	.-4      	; 0xfcc <LCD_latch+0x378>
     fd0:	9b af       	std	Y+59, r25	; 0x3b
     fd2:	8a af       	std	Y+58, r24	; 0x3a
     fd4:	2a c0       	rjmp	.+84     	; 0x102a <LCD_latch+0x3d6>
     fd6:	20 e0       	ldi	r18, 0x00	; 0
     fd8:	30 e0       	ldi	r19, 0x00	; 0
     fda:	4f e7       	ldi	r20, 0x7F	; 127
     fdc:	53 e4       	ldi	r21, 0x43	; 67
     fde:	6d a1       	ldd	r22, Y+37	; 0x25
     fe0:	7e a1       	ldd	r23, Y+38	; 0x26
     fe2:	8f a1       	ldd	r24, Y+39	; 0x27
     fe4:	98 a5       	ldd	r25, Y+40	; 0x28
     fe6:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__gesf2>
     fea:	18 16       	cp	r1, r24
     fec:	ac f4       	brge	.+42     	; 0x1018 <LCD_latch+0x3c4>
     fee:	69 a5       	ldd	r22, Y+41	; 0x29
     ff0:	7a a5       	ldd	r23, Y+42	; 0x2a
     ff2:	8b a5       	ldd	r24, Y+43	; 0x2b
     ff4:	9c a5       	ldd	r25, Y+44	; 0x2c
     ff6:	0e 94 2e 0c 	call	0x185c	; 0x185c <__fixunssfsi>
     ffa:	dc 01       	movw	r26, r24
     ffc:	cb 01       	movw	r24, r22
     ffe:	9d af       	std	Y+61, r25	; 0x3d
    1000:	8c af       	std	Y+60, r24	; 0x3c
    1002:	8c ad       	ldd	r24, Y+60	; 0x3c
    1004:	9d ad       	ldd	r25, Y+61	; 0x3d
    1006:	9f af       	std	Y+63, r25	; 0x3f
    1008:	8e af       	std	Y+62, r24	; 0x3e
    100a:	8e ad       	ldd	r24, Y+62	; 0x3e
    100c:	9f ad       	ldd	r25, Y+63	; 0x3f
    100e:	01 97       	sbiw	r24, 0x01	; 1
    1010:	f1 f7       	brne	.-4      	; 0x100e <LCD_latch+0x3ba>
    1012:	9f af       	std	Y+63, r25	; 0x3f
    1014:	8e af       	std	Y+62, r24	; 0x3e
    1016:	1c c0       	rjmp	.+56     	; 0x1050 <LCD_latch+0x3fc>
    1018:	6d a1       	ldd	r22, Y+37	; 0x25
    101a:	7e a1       	ldd	r23, Y+38	; 0x26
    101c:	8f a1       	ldd	r24, Y+39	; 0x27
    101e:	98 a5       	ldd	r25, Y+40	; 0x28
    1020:	0e 94 2e 0c 	call	0x185c	; 0x185c <__fixunssfsi>
    1024:	dc 01       	movw	r26, r24
    1026:	cb 01       	movw	r24, r22
    1028:	8d a7       	std	Y+45, r24	; 0x2d
    102a:	2d a5       	ldd	r18, Y+45	; 0x2d
    102c:	ce 01       	movw	r24, r28
    102e:	80 5c       	subi	r24, 0xC0	; 192
    1030:	9f 4f       	sbci	r25, 0xFF	; 255
    1032:	fc 01       	movw	r30, r24
    1034:	20 83       	st	Z, r18
    1036:	ce 01       	movw	r24, r28
    1038:	80 5c       	subi	r24, 0xC0	; 192
    103a:	9f 4f       	sbci	r25, 0xFF	; 255
    103c:	fc 01       	movw	r30, r24
    103e:	80 81       	ld	r24, Z
    1040:	28 2f       	mov	r18, r24
    1042:	2a 95       	dec	r18
    1044:	f1 f7       	brne	.-4      	; 0x1042 <LCD_latch+0x3ee>
    1046:	ce 01       	movw	r24, r28
    1048:	80 5c       	subi	r24, 0xC0	; 192
    104a:	9f 4f       	sbci	r25, 0xFF	; 255
    104c:	fc 01       	movw	r30, r24
    104e:	20 83       	st	Z, r18
    1050:	c0 5c       	subi	r28, 0xC0	; 192
    1052:	df 4f       	sbci	r29, 0xFF	; 255
    1054:	0f b6       	in	r0, 0x3f	; 63
    1056:	f8 94       	cli
    1058:	de bf       	out	0x3e, r29	; 62
    105a:	0f be       	out	0x3f, r0	; 63
    105c:	cd bf       	out	0x3d, r28	; 61
    105e:	df 91       	pop	r29
    1060:	cf 91       	pop	r28
    1062:	08 95       	ret

00001064 <disp_char>:
    1064:	cf 93       	push	r28
    1066:	df 93       	push	r29
    1068:	1f 92       	push	r1
    106a:	cd b7       	in	r28, 0x3d	; 61
    106c:	de b7       	in	r29, 0x3e	; 62
    106e:	89 83       	std	Y+1, r24	; 0x01
    1070:	89 81       	ldd	r24, Y+1	; 0x01
    1072:	0e 94 fc 04 	call	0x9f8	; 0x9f8 <LCD_send_data>
    1076:	0f 90       	pop	r0
    1078:	df 91       	pop	r29
    107a:	cf 91       	pop	r28
    107c:	08 95       	ret

0000107e <disp_str>:
void disp_str(u8* str)
{
    107e:	cf 93       	push	r28
    1080:	df 93       	push	r29
    1082:	00 d0       	rcall	.+0      	; 0x1084 <disp_str+0x6>
    1084:	1f 92       	push	r1
    1086:	cd b7       	in	r28, 0x3d	; 61
    1088:	de b7       	in	r29, 0x3e	; 62
    108a:	9b 83       	std	Y+3, r25	; 0x03
    108c:	8a 83       	std	Y+2, r24	; 0x02
	u8 indx=0;
    108e:	19 82       	std	Y+1, r1	; 0x01
	while(str[indx]!='\0')
    1090:	0e c0       	rjmp	.+28     	; 0x10ae <disp_str+0x30>
	{
		disp_char(indx[str]);
    1092:	89 81       	ldd	r24, Y+1	; 0x01
    1094:	88 2f       	mov	r24, r24
    1096:	90 e0       	ldi	r25, 0x00	; 0
    1098:	2a 81       	ldd	r18, Y+2	; 0x02
    109a:	3b 81       	ldd	r19, Y+3	; 0x03
    109c:	82 0f       	add	r24, r18
    109e:	93 1f       	adc	r25, r19
    10a0:	fc 01       	movw	r30, r24
    10a2:	80 81       	ld	r24, Z
    10a4:	0e 94 32 08 	call	0x1064	; 0x1064 <disp_char>
		indx++;
    10a8:	89 81       	ldd	r24, Y+1	; 0x01
    10aa:	8f 5f       	subi	r24, 0xFF	; 255
    10ac:	89 83       	std	Y+1, r24	; 0x01
	disp_char(letter);	
}
void disp_str(u8* str)
{
	u8 indx=0;
	while(str[indx]!='\0')
    10ae:	89 81       	ldd	r24, Y+1	; 0x01
    10b0:	88 2f       	mov	r24, r24
    10b2:	90 e0       	ldi	r25, 0x00	; 0
    10b4:	2a 81       	ldd	r18, Y+2	; 0x02
    10b6:	3b 81       	ldd	r19, Y+3	; 0x03
    10b8:	82 0f       	add	r24, r18
    10ba:	93 1f       	adc	r25, r19
    10bc:	fc 01       	movw	r30, r24
    10be:	80 81       	ld	r24, Z
    10c0:	88 23       	and	r24, r24
    10c2:	39 f7       	brne	.-50     	; 0x1092 <disp_str+0x14>
	{
		disp_char(indx[str]);
		indx++;
	}
}
    10c4:	0f 90       	pop	r0
    10c6:	0f 90       	pop	r0
    10c8:	0f 90       	pop	r0
    10ca:	df 91       	pop	r29
    10cc:	cf 91       	pop	r28
    10ce:	08 95       	ret

000010d0 <LCD_GOTXY>:
void LCD_GOTXY(u8 row,u8 col)
{
    10d0:	cf 93       	push	r28
    10d2:	df 93       	push	r29
    10d4:	00 d0       	rcall	.+0      	; 0x10d6 <LCD_GOTXY+0x6>
    10d6:	cd b7       	in	r28, 0x3d	; 61
    10d8:	de b7       	in	r29, 0x3e	; 62
    10da:	89 83       	std	Y+1, r24	; 0x01
    10dc:	6a 83       	std	Y+2, r22	; 0x02
	if (row==1)
    10de:	89 81       	ldd	r24, Y+1	; 0x01
    10e0:	81 30       	cpi	r24, 0x01	; 1
    10e2:	29 f4       	brne	.+10     	; 0x10ee <LCD_GOTXY+0x1e>
	{
		LCD_send_cmd(DDRAM_ADD+0x00+col-1);
    10e4:	8a 81       	ldd	r24, Y+2	; 0x02
    10e6:	81 58       	subi	r24, 0x81	; 129
    10e8:	0e 94 ce 03 	call	0x79c	; 0x79c <LCD_send_cmd>
    10ec:	07 c0       	rjmp	.+14     	; 0x10fc <LCD_GOTXY+0x2c>
	}
	else if(row==2)
    10ee:	89 81       	ldd	r24, Y+1	; 0x01
    10f0:	82 30       	cpi	r24, 0x02	; 2
    10f2:	21 f4       	brne	.+8      	; 0x10fc <LCD_GOTXY+0x2c>
	{
		LCD_send_cmd(DDRAM_ADD+0x40+col-1);	
    10f4:	8a 81       	ldd	r24, Y+2	; 0x02
    10f6:	81 54       	subi	r24, 0x41	; 65
    10f8:	0e 94 ce 03 	call	0x79c	; 0x79c <LCD_send_cmd>
	}
	else{}
	
}
    10fc:	0f 90       	pop	r0
    10fe:	0f 90       	pop	r0
    1100:	df 91       	pop	r29
    1102:	cf 91       	pop	r28
    1104:	08 95       	ret

00001106 <disp_strXY>:

void disp_strXY(u8 row,u8 col,u8* str)
{
    1106:	cf 93       	push	r28
    1108:	df 93       	push	r29
    110a:	00 d0       	rcall	.+0      	; 0x110c <disp_strXY+0x6>
    110c:	00 d0       	rcall	.+0      	; 0x110e <disp_strXY+0x8>
    110e:	cd b7       	in	r28, 0x3d	; 61
    1110:	de b7       	in	r29, 0x3e	; 62
    1112:	89 83       	std	Y+1, r24	; 0x01
    1114:	6a 83       	std	Y+2, r22	; 0x02
    1116:	5c 83       	std	Y+4, r21	; 0x04
    1118:	4b 83       	std	Y+3, r20	; 0x03
	LCD_GOTXY(row,col);
    111a:	6a 81       	ldd	r22, Y+2	; 0x02
    111c:	89 81       	ldd	r24, Y+1	; 0x01
    111e:	0e 94 68 08 	call	0x10d0	; 0x10d0 <LCD_GOTXY>
	disp_str(str);
    1122:	8b 81       	ldd	r24, Y+3	; 0x03
    1124:	9c 81       	ldd	r25, Y+4	; 0x04
    1126:	0e 94 3f 08 	call	0x107e	; 0x107e <disp_str>
}
    112a:	0f 90       	pop	r0
    112c:	0f 90       	pop	r0
    112e:	0f 90       	pop	r0
    1130:	0f 90       	pop	r0
    1132:	df 91       	pop	r29
    1134:	cf 91       	pop	r28
    1136:	08 95       	ret

00001138 <disp_int>:


void disp_int(u32 intvalue)
{
    1138:	cf 93       	push	r28
    113a:	df 93       	push	r29
    113c:	cd b7       	in	r28, 0x3d	; 61
    113e:	de b7       	in	r29, 0x3e	; 62
    1140:	2f 97       	sbiw	r28, 0x0f	; 15
    1142:	0f b6       	in	r0, 0x3f	; 63
    1144:	f8 94       	cli
    1146:	de bf       	out	0x3e, r29	; 62
    1148:	0f be       	out	0x3f, r0	; 63
    114a:	cd bf       	out	0x3d, r28	; 61
    114c:	6c 87       	std	Y+12, r22	; 0x0c
    114e:	7d 87       	std	Y+13, r23	; 0x0d
    1150:	8e 87       	std	Y+14, r24	; 0x0e
    1152:	9f 87       	std	Y+15, r25	; 0x0f
	u8 string[11]={0};
    1154:	2b e0       	ldi	r18, 0x0B	; 11
    1156:	ce 01       	movw	r24, r28
    1158:	01 96       	adiw	r24, 0x01	; 1
    115a:	fc 01       	movw	r30, r24
    115c:	32 2f       	mov	r19, r18
    115e:	11 92       	st	Z+, r1
    1160:	3a 95       	dec	r19
    1162:	e9 f7       	brne	.-6      	; 0x115e <disp_int+0x26>
		sprintf(string,"%u",intvalue);
    1164:	8f 85       	ldd	r24, Y+15	; 0x0f
    1166:	8f 93       	push	r24
    1168:	8e 85       	ldd	r24, Y+14	; 0x0e
    116a:	8f 93       	push	r24
    116c:	8d 85       	ldd	r24, Y+13	; 0x0d
    116e:	8f 93       	push	r24
    1170:	8c 85       	ldd	r24, Y+12	; 0x0c
    1172:	8f 93       	push	r24
    1174:	80 e7       	ldi	r24, 0x70	; 112
    1176:	90 e0       	ldi	r25, 0x00	; 0
    1178:	89 2f       	mov	r24, r25
    117a:	8f 93       	push	r24
    117c:	80 e7       	ldi	r24, 0x70	; 112
    117e:	90 e0       	ldi	r25, 0x00	; 0
    1180:	8f 93       	push	r24
    1182:	ce 01       	movw	r24, r28
    1184:	01 96       	adiw	r24, 0x01	; 1
    1186:	9f 93       	push	r25
    1188:	8f 93       	push	r24
    118a:	0e 94 81 0d 	call	0x1b02	; 0x1b02 <sprintf>
    118e:	8d b7       	in	r24, 0x3d	; 61
    1190:	9e b7       	in	r25, 0x3e	; 62
    1192:	08 96       	adiw	r24, 0x08	; 8
    1194:	0f b6       	in	r0, 0x3f	; 63
    1196:	f8 94       	cli
    1198:	de bf       	out	0x3e, r29	; 62
    119a:	0f be       	out	0x3f, r0	; 63
    119c:	cd bf       	out	0x3d, r28	; 61
		disp_str(string);
    119e:	ce 01       	movw	r24, r28
    11a0:	01 96       	adiw	r24, 0x01	; 1
    11a2:	0e 94 3f 08 	call	0x107e	; 0x107e <disp_str>
}
    11a6:	2f 96       	adiw	r28, 0x0f	; 15
    11a8:	0f b6       	in	r0, 0x3f	; 63
    11aa:	f8 94       	cli
    11ac:	de bf       	out	0x3e, r29	; 62
    11ae:	0f be       	out	0x3f, r0	; 63
    11b0:	cd bf       	out	0x3d, r28	; 61
    11b2:	df 91       	pop	r29
    11b4:	cf 91       	pop	r28
    11b6:	08 95       	ret

000011b8 <disp_intXY>:
void disp_intXY(u8 row,u8 col,u32 intvalue)
{
    11b8:	cf 93       	push	r28
    11ba:	df 93       	push	r29
    11bc:	00 d0       	rcall	.+0      	; 0x11be <disp_intXY+0x6>
    11be:	00 d0       	rcall	.+0      	; 0x11c0 <disp_intXY+0x8>
    11c0:	00 d0       	rcall	.+0      	; 0x11c2 <disp_intXY+0xa>
    11c2:	cd b7       	in	r28, 0x3d	; 61
    11c4:	de b7       	in	r29, 0x3e	; 62
    11c6:	89 83       	std	Y+1, r24	; 0x01
    11c8:	6a 83       	std	Y+2, r22	; 0x02
    11ca:	2b 83       	std	Y+3, r18	; 0x03
    11cc:	3c 83       	std	Y+4, r19	; 0x04
    11ce:	4d 83       	std	Y+5, r20	; 0x05
    11d0:	5e 83       	std	Y+6, r21	; 0x06
	LCD_GOTXY(row,col);
    11d2:	6a 81       	ldd	r22, Y+2	; 0x02
    11d4:	89 81       	ldd	r24, Y+1	; 0x01
    11d6:	0e 94 68 08 	call	0x10d0	; 0x10d0 <LCD_GOTXY>
	disp_int(intvalue);
    11da:	8b 81       	ldd	r24, Y+3	; 0x03
    11dc:	9c 81       	ldd	r25, Y+4	; 0x04
    11de:	ad 81       	ldd	r26, Y+5	; 0x05
    11e0:	be 81       	ldd	r27, Y+6	; 0x06
    11e2:	bc 01       	movw	r22, r24
    11e4:	cd 01       	movw	r24, r26
    11e6:	0e 94 9c 08 	call	0x1138	; 0x1138 <disp_int>
}
    11ea:	26 96       	adiw	r28, 0x06	; 6
    11ec:	0f b6       	in	r0, 0x3f	; 63
    11ee:	f8 94       	cli
    11f0:	de bf       	out	0x3e, r29	; 62
    11f2:	0f be       	out	0x3f, r0	; 63
    11f4:	cd bf       	out	0x3d, r28	; 61
    11f6:	df 91       	pop	r29
    11f8:	cf 91       	pop	r28
    11fa:	08 95       	ret

000011fc <writePin>:
 *  Author: Mohamed
 */ 
#include "includes.h"

/*for single bit*/
void writePin(u8 pinNo,u8 logic){
    11fc:	cf 93       	push	r28
    11fe:	df 93       	push	r29
    1200:	00 d0       	rcall	.+0      	; 0x1202 <writePin+0x6>
    1202:	cd b7       	in	r28, 0x3d	; 61
    1204:	de b7       	in	r29, 0x3e	; 62
    1206:	89 83       	std	Y+1, r24	; 0x01
    1208:	6a 83       	std	Y+2, r22	; 0x02
	if((pinNo>=PA0)&&(pinNo<=PA7)){
    120a:	89 81       	ldd	r24, Y+1	; 0x01
    120c:	88 30       	cpi	r24, 0x08	; 8
    120e:	90 f5       	brcc	.+100    	; 0x1274 <writePin+0x78>
		if(logic==HIGH)
    1210:	8a 81       	ldd	r24, Y+2	; 0x02
    1212:	81 30       	cpi	r24, 0x01	; 1
    1214:	a9 f4       	brne	.+42     	; 0x1240 <writePin+0x44>
			SETBit(PORTA,pinNo);
    1216:	8b e3       	ldi	r24, 0x3B	; 59
    1218:	90 e0       	ldi	r25, 0x00	; 0
    121a:	2b e3       	ldi	r18, 0x3B	; 59
    121c:	30 e0       	ldi	r19, 0x00	; 0
    121e:	f9 01       	movw	r30, r18
    1220:	20 81       	ld	r18, Z
    1222:	62 2f       	mov	r22, r18
    1224:	29 81       	ldd	r18, Y+1	; 0x01
    1226:	42 2f       	mov	r20, r18
    1228:	50 e0       	ldi	r21, 0x00	; 0
    122a:	21 e0       	ldi	r18, 0x01	; 1
    122c:	30 e0       	ldi	r19, 0x00	; 0
    122e:	02 c0       	rjmp	.+4      	; 0x1234 <writePin+0x38>
    1230:	22 0f       	add	r18, r18
    1232:	33 1f       	adc	r19, r19
    1234:	4a 95       	dec	r20
    1236:	e2 f7       	brpl	.-8      	; 0x1230 <writePin+0x34>
    1238:	26 2b       	or	r18, r22
    123a:	fc 01       	movw	r30, r24
    123c:	20 83       	st	Z, r18
    123e:	d0 c0       	rjmp	.+416    	; 0x13e0 <writePin+0x1e4>
		else if(logic==LOW)
    1240:	8a 81       	ldd	r24, Y+2	; 0x02
    1242:	88 23       	and	r24, r24
    1244:	09 f0       	breq	.+2      	; 0x1248 <writePin+0x4c>
    1246:	cc c0       	rjmp	.+408    	; 0x13e0 <writePin+0x1e4>
			CLRBit(PORTA,pinNo);
    1248:	8b e3       	ldi	r24, 0x3B	; 59
    124a:	90 e0       	ldi	r25, 0x00	; 0
    124c:	2b e3       	ldi	r18, 0x3B	; 59
    124e:	30 e0       	ldi	r19, 0x00	; 0
    1250:	f9 01       	movw	r30, r18
    1252:	20 81       	ld	r18, Z
    1254:	62 2f       	mov	r22, r18
    1256:	29 81       	ldd	r18, Y+1	; 0x01
    1258:	42 2f       	mov	r20, r18
    125a:	50 e0       	ldi	r21, 0x00	; 0
    125c:	21 e0       	ldi	r18, 0x01	; 1
    125e:	30 e0       	ldi	r19, 0x00	; 0
    1260:	02 c0       	rjmp	.+4      	; 0x1266 <writePin+0x6a>
    1262:	22 0f       	add	r18, r18
    1264:	33 1f       	adc	r19, r19
    1266:	4a 95       	dec	r20
    1268:	e2 f7       	brpl	.-8      	; 0x1262 <writePin+0x66>
    126a:	20 95       	com	r18
    126c:	26 23       	and	r18, r22
    126e:	fc 01       	movw	r30, r24
    1270:	20 83       	st	Z, r18
    1272:	b6 c0       	rjmp	.+364    	; 0x13e0 <writePin+0x1e4>
		else{}
}

	else if((pinNo>=PB0)&&(pinNo<=PB7)){
    1274:	89 81       	ldd	r24, Y+1	; 0x01
    1276:	88 30       	cpi	r24, 0x08	; 8
    1278:	d0 f1       	brcs	.+116    	; 0x12ee <writePin+0xf2>
    127a:	89 81       	ldd	r24, Y+1	; 0x01
    127c:	80 31       	cpi	r24, 0x10	; 16
    127e:	b8 f5       	brcc	.+110    	; 0x12ee <writePin+0xf2>
		if(logic==HIGH)
    1280:	8a 81       	ldd	r24, Y+2	; 0x02
    1282:	81 30       	cpi	r24, 0x01	; 1
    1284:	c1 f4       	brne	.+48     	; 0x12b6 <writePin+0xba>
			SETBit(PORTB,(pinNo-8));
    1286:	88 e3       	ldi	r24, 0x38	; 56
    1288:	90 e0       	ldi	r25, 0x00	; 0
    128a:	28 e3       	ldi	r18, 0x38	; 56
    128c:	30 e0       	ldi	r19, 0x00	; 0
    128e:	f9 01       	movw	r30, r18
    1290:	20 81       	ld	r18, Z
    1292:	62 2f       	mov	r22, r18
    1294:	29 81       	ldd	r18, Y+1	; 0x01
    1296:	22 2f       	mov	r18, r18
    1298:	30 e0       	ldi	r19, 0x00	; 0
    129a:	a9 01       	movw	r20, r18
    129c:	48 50       	subi	r20, 0x08	; 8
    129e:	51 09       	sbc	r21, r1
    12a0:	21 e0       	ldi	r18, 0x01	; 1
    12a2:	30 e0       	ldi	r19, 0x00	; 0
    12a4:	02 c0       	rjmp	.+4      	; 0x12aa <writePin+0xae>
    12a6:	22 0f       	add	r18, r18
    12a8:	33 1f       	adc	r19, r19
    12aa:	4a 95       	dec	r20
    12ac:	e2 f7       	brpl	.-8      	; 0x12a6 <writePin+0xaa>
    12ae:	26 2b       	or	r18, r22
    12b0:	fc 01       	movw	r30, r24
    12b2:	20 83       	st	Z, r18
    12b4:	1b c0       	rjmp	.+54     	; 0x12ec <writePin+0xf0>
		else if(logic==LOW)
    12b6:	8a 81       	ldd	r24, Y+2	; 0x02
    12b8:	88 23       	and	r24, r24
    12ba:	c1 f4       	brne	.+48     	; 0x12ec <writePin+0xf0>
			CLRBit(PORTB,(pinNo-8));
    12bc:	88 e3       	ldi	r24, 0x38	; 56
    12be:	90 e0       	ldi	r25, 0x00	; 0
    12c0:	28 e3       	ldi	r18, 0x38	; 56
    12c2:	30 e0       	ldi	r19, 0x00	; 0
    12c4:	f9 01       	movw	r30, r18
    12c6:	20 81       	ld	r18, Z
    12c8:	62 2f       	mov	r22, r18
    12ca:	29 81       	ldd	r18, Y+1	; 0x01
    12cc:	22 2f       	mov	r18, r18
    12ce:	30 e0       	ldi	r19, 0x00	; 0
    12d0:	a9 01       	movw	r20, r18
    12d2:	48 50       	subi	r20, 0x08	; 8
    12d4:	51 09       	sbc	r21, r1
    12d6:	21 e0       	ldi	r18, 0x01	; 1
    12d8:	30 e0       	ldi	r19, 0x00	; 0
    12da:	02 c0       	rjmp	.+4      	; 0x12e0 <writePin+0xe4>
    12dc:	22 0f       	add	r18, r18
    12de:	33 1f       	adc	r19, r19
    12e0:	4a 95       	dec	r20
    12e2:	e2 f7       	brpl	.-8      	; 0x12dc <writePin+0xe0>
    12e4:	20 95       	com	r18
    12e6:	26 23       	and	r18, r22
    12e8:	fc 01       	movw	r30, r24
    12ea:	20 83       	st	Z, r18
			CLRBit(PORTA,pinNo);
		else{}
}

	else if((pinNo>=PB0)&&(pinNo<=PB7)){
		if(logic==HIGH)
    12ec:	79 c0       	rjmp	.+242    	; 0x13e0 <writePin+0x1e4>
		else if(logic==LOW)
			CLRBit(PORTB,(pinNo-8));
		else{}
	}
	
	else if((pinNo>=PC0)&&(pinNo<=PC7)){
    12ee:	89 81       	ldd	r24, Y+1	; 0x01
    12f0:	80 31       	cpi	r24, 0x10	; 16
    12f2:	d0 f1       	brcs	.+116    	; 0x1368 <writePin+0x16c>
    12f4:	89 81       	ldd	r24, Y+1	; 0x01
    12f6:	88 31       	cpi	r24, 0x18	; 24
    12f8:	b8 f5       	brcc	.+110    	; 0x1368 <writePin+0x16c>
		if(logic==HIGH)
    12fa:	8a 81       	ldd	r24, Y+2	; 0x02
    12fc:	81 30       	cpi	r24, 0x01	; 1
    12fe:	c1 f4       	brne	.+48     	; 0x1330 <writePin+0x134>
			SETBit(PORTC,(pinNo-16));
    1300:	85 e3       	ldi	r24, 0x35	; 53
    1302:	90 e0       	ldi	r25, 0x00	; 0
    1304:	25 e3       	ldi	r18, 0x35	; 53
    1306:	30 e0       	ldi	r19, 0x00	; 0
    1308:	f9 01       	movw	r30, r18
    130a:	20 81       	ld	r18, Z
    130c:	62 2f       	mov	r22, r18
    130e:	29 81       	ldd	r18, Y+1	; 0x01
    1310:	22 2f       	mov	r18, r18
    1312:	30 e0       	ldi	r19, 0x00	; 0
    1314:	a9 01       	movw	r20, r18
    1316:	40 51       	subi	r20, 0x10	; 16
    1318:	51 09       	sbc	r21, r1
    131a:	21 e0       	ldi	r18, 0x01	; 1
    131c:	30 e0       	ldi	r19, 0x00	; 0
    131e:	02 c0       	rjmp	.+4      	; 0x1324 <writePin+0x128>
    1320:	22 0f       	add	r18, r18
    1322:	33 1f       	adc	r19, r19
    1324:	4a 95       	dec	r20
    1326:	e2 f7       	brpl	.-8      	; 0x1320 <writePin+0x124>
    1328:	26 2b       	or	r18, r22
    132a:	fc 01       	movw	r30, r24
    132c:	20 83       	st	Z, r18
    132e:	1b c0       	rjmp	.+54     	; 0x1366 <writePin+0x16a>
		else if(logic==LOW)
    1330:	8a 81       	ldd	r24, Y+2	; 0x02
    1332:	88 23       	and	r24, r24
    1334:	c1 f4       	brne	.+48     	; 0x1366 <writePin+0x16a>
			CLRBit(PORTC,(pinNo-16));
    1336:	85 e3       	ldi	r24, 0x35	; 53
    1338:	90 e0       	ldi	r25, 0x00	; 0
    133a:	25 e3       	ldi	r18, 0x35	; 53
    133c:	30 e0       	ldi	r19, 0x00	; 0
    133e:	f9 01       	movw	r30, r18
    1340:	20 81       	ld	r18, Z
    1342:	62 2f       	mov	r22, r18
    1344:	29 81       	ldd	r18, Y+1	; 0x01
    1346:	22 2f       	mov	r18, r18
    1348:	30 e0       	ldi	r19, 0x00	; 0
    134a:	a9 01       	movw	r20, r18
    134c:	40 51       	subi	r20, 0x10	; 16
    134e:	51 09       	sbc	r21, r1
    1350:	21 e0       	ldi	r18, 0x01	; 1
    1352:	30 e0       	ldi	r19, 0x00	; 0
    1354:	02 c0       	rjmp	.+4      	; 0x135a <writePin+0x15e>
    1356:	22 0f       	add	r18, r18
    1358:	33 1f       	adc	r19, r19
    135a:	4a 95       	dec	r20
    135c:	e2 f7       	brpl	.-8      	; 0x1356 <writePin+0x15a>
    135e:	20 95       	com	r18
    1360:	26 23       	and	r18, r22
    1362:	fc 01       	movw	r30, r24
    1364:	20 83       	st	Z, r18
			CLRBit(PORTB,(pinNo-8));
		else{}
	}
	
	else if((pinNo>=PC0)&&(pinNo<=PC7)){
		if(logic==HIGH)
    1366:	3c c0       	rjmp	.+120    	; 0x13e0 <writePin+0x1e4>
		else if(logic==LOW)
			CLRBit(PORTC,(pinNo-16));
		else{}
	}
	
	else if((pinNo>=PD0)&&(pinNo<=PD7)){
    1368:	89 81       	ldd	r24, Y+1	; 0x01
    136a:	88 31       	cpi	r24, 0x18	; 24
    136c:	c8 f1       	brcs	.+114    	; 0x13e0 <writePin+0x1e4>
    136e:	89 81       	ldd	r24, Y+1	; 0x01
    1370:	80 32       	cpi	r24, 0x20	; 32
    1372:	b0 f5       	brcc	.+108    	; 0x13e0 <writePin+0x1e4>
		if(logic==HIGH)
    1374:	8a 81       	ldd	r24, Y+2	; 0x02
    1376:	81 30       	cpi	r24, 0x01	; 1
    1378:	c1 f4       	brne	.+48     	; 0x13aa <writePin+0x1ae>
			SETBit(PORTD,(pinNo-24));
    137a:	82 e3       	ldi	r24, 0x32	; 50
    137c:	90 e0       	ldi	r25, 0x00	; 0
    137e:	22 e3       	ldi	r18, 0x32	; 50
    1380:	30 e0       	ldi	r19, 0x00	; 0
    1382:	f9 01       	movw	r30, r18
    1384:	20 81       	ld	r18, Z
    1386:	62 2f       	mov	r22, r18
    1388:	29 81       	ldd	r18, Y+1	; 0x01
    138a:	22 2f       	mov	r18, r18
    138c:	30 e0       	ldi	r19, 0x00	; 0
    138e:	a9 01       	movw	r20, r18
    1390:	48 51       	subi	r20, 0x18	; 24
    1392:	51 09       	sbc	r21, r1
    1394:	21 e0       	ldi	r18, 0x01	; 1
    1396:	30 e0       	ldi	r19, 0x00	; 0
    1398:	02 c0       	rjmp	.+4      	; 0x139e <writePin+0x1a2>
    139a:	22 0f       	add	r18, r18
    139c:	33 1f       	adc	r19, r19
    139e:	4a 95       	dec	r20
    13a0:	e2 f7       	brpl	.-8      	; 0x139a <writePin+0x19e>
    13a2:	26 2b       	or	r18, r22
    13a4:	fc 01       	movw	r30, r24
    13a6:	20 83       	st	Z, r18
    13a8:	1b c0       	rjmp	.+54     	; 0x13e0 <writePin+0x1e4>
		else if(logic==LOW)
    13aa:	8a 81       	ldd	r24, Y+2	; 0x02
    13ac:	88 23       	and	r24, r24
    13ae:	c1 f4       	brne	.+48     	; 0x13e0 <writePin+0x1e4>
			CLRBit(PORTD,(pinNo-24));
    13b0:	82 e3       	ldi	r24, 0x32	; 50
    13b2:	90 e0       	ldi	r25, 0x00	; 0
    13b4:	22 e3       	ldi	r18, 0x32	; 50
    13b6:	30 e0       	ldi	r19, 0x00	; 0
    13b8:	f9 01       	movw	r30, r18
    13ba:	20 81       	ld	r18, Z
    13bc:	62 2f       	mov	r22, r18
    13be:	29 81       	ldd	r18, Y+1	; 0x01
    13c0:	22 2f       	mov	r18, r18
    13c2:	30 e0       	ldi	r19, 0x00	; 0
    13c4:	a9 01       	movw	r20, r18
    13c6:	48 51       	subi	r20, 0x18	; 24
    13c8:	51 09       	sbc	r21, r1
    13ca:	21 e0       	ldi	r18, 0x01	; 1
    13cc:	30 e0       	ldi	r19, 0x00	; 0
    13ce:	02 c0       	rjmp	.+4      	; 0x13d4 <writePin+0x1d8>
    13d0:	22 0f       	add	r18, r18
    13d2:	33 1f       	adc	r19, r19
    13d4:	4a 95       	dec	r20
    13d6:	e2 f7       	brpl	.-8      	; 0x13d0 <writePin+0x1d4>
    13d8:	20 95       	com	r18
    13da:	26 23       	and	r18, r22
    13dc:	fc 01       	movw	r30, r24
    13de:	20 83       	st	Z, r18
		else{}
	}
	else{}
}
    13e0:	0f 90       	pop	r0
    13e2:	0f 90       	pop	r0
    13e4:	df 91       	pop	r29
    13e6:	cf 91       	pop	r28
    13e8:	08 95       	ret

000013ea <pinDirection>:
void pinDirection(u8 pinNo, u8 direction){
    13ea:	cf 93       	push	r28
    13ec:	df 93       	push	r29
    13ee:	00 d0       	rcall	.+0      	; 0x13f0 <pinDirection+0x6>
    13f0:	cd b7       	in	r28, 0x3d	; 61
    13f2:	de b7       	in	r29, 0x3e	; 62
    13f4:	89 83       	std	Y+1, r24	; 0x01
    13f6:	6a 83       	std	Y+2, r22	; 0x02
	if((pinNo >= PA0) && (pinNo <= PA7)){
    13f8:	89 81       	ldd	r24, Y+1	; 0x01
    13fa:	88 30       	cpi	r24, 0x08	; 8
    13fc:	90 f5       	brcc	.+100    	; 0x1462 <pinDirection+0x78>
		if(direction == OUTPUT)
    13fe:	8a 81       	ldd	r24, Y+2	; 0x02
    1400:	81 30       	cpi	r24, 0x01	; 1
    1402:	a9 f4       	brne	.+42     	; 0x142e <pinDirection+0x44>
			SETBit(DDRA,pinNo);
    1404:	8a e3       	ldi	r24, 0x3A	; 58
    1406:	90 e0       	ldi	r25, 0x00	; 0
    1408:	2a e3       	ldi	r18, 0x3A	; 58
    140a:	30 e0       	ldi	r19, 0x00	; 0
    140c:	f9 01       	movw	r30, r18
    140e:	20 81       	ld	r18, Z
    1410:	62 2f       	mov	r22, r18
    1412:	29 81       	ldd	r18, Y+1	; 0x01
    1414:	42 2f       	mov	r20, r18
    1416:	50 e0       	ldi	r21, 0x00	; 0
    1418:	21 e0       	ldi	r18, 0x01	; 1
    141a:	30 e0       	ldi	r19, 0x00	; 0
    141c:	02 c0       	rjmp	.+4      	; 0x1422 <pinDirection+0x38>
    141e:	22 0f       	add	r18, r18
    1420:	33 1f       	adc	r19, r19
    1422:	4a 95       	dec	r20
    1424:	e2 f7       	brpl	.-8      	; 0x141e <pinDirection+0x34>
    1426:	26 2b       	or	r18, r22
    1428:	fc 01       	movw	r30, r24
    142a:	20 83       	st	Z, r18
    142c:	d0 c0       	rjmp	.+416    	; 0x15ce <pinDirection+0x1e4>
		else if(direction == INPUT)
    142e:	8a 81       	ldd	r24, Y+2	; 0x02
    1430:	88 23       	and	r24, r24
    1432:	09 f0       	breq	.+2      	; 0x1436 <pinDirection+0x4c>
    1434:	cc c0       	rjmp	.+408    	; 0x15ce <pinDirection+0x1e4>
			CLRBit(DDRA,pinNo);
    1436:	8a e3       	ldi	r24, 0x3A	; 58
    1438:	90 e0       	ldi	r25, 0x00	; 0
    143a:	2a e3       	ldi	r18, 0x3A	; 58
    143c:	30 e0       	ldi	r19, 0x00	; 0
    143e:	f9 01       	movw	r30, r18
    1440:	20 81       	ld	r18, Z
    1442:	62 2f       	mov	r22, r18
    1444:	29 81       	ldd	r18, Y+1	; 0x01
    1446:	42 2f       	mov	r20, r18
    1448:	50 e0       	ldi	r21, 0x00	; 0
    144a:	21 e0       	ldi	r18, 0x01	; 1
    144c:	30 e0       	ldi	r19, 0x00	; 0
    144e:	02 c0       	rjmp	.+4      	; 0x1454 <pinDirection+0x6a>
    1450:	22 0f       	add	r18, r18
    1452:	33 1f       	adc	r19, r19
    1454:	4a 95       	dec	r20
    1456:	e2 f7       	brpl	.-8      	; 0x1450 <pinDirection+0x66>
    1458:	20 95       	com	r18
    145a:	26 23       	and	r18, r22
    145c:	fc 01       	movw	r30, r24
    145e:	20 83       	st	Z, r18
    1460:	b6 c0       	rjmp	.+364    	; 0x15ce <pinDirection+0x1e4>
		else{}
	}
	else if((pinNo >= PB0) && (pinNo <= PB7)){
    1462:	89 81       	ldd	r24, Y+1	; 0x01
    1464:	88 30       	cpi	r24, 0x08	; 8
    1466:	d0 f1       	brcs	.+116    	; 0x14dc <pinDirection+0xf2>
    1468:	89 81       	ldd	r24, Y+1	; 0x01
    146a:	80 31       	cpi	r24, 0x10	; 16
    146c:	b8 f5       	brcc	.+110    	; 0x14dc <pinDirection+0xf2>
		if(direction == OUTPUT)
    146e:	8a 81       	ldd	r24, Y+2	; 0x02
    1470:	81 30       	cpi	r24, 0x01	; 1
    1472:	c1 f4       	brne	.+48     	; 0x14a4 <pinDirection+0xba>
			SETBit(DDRB,(pinNo-8));
    1474:	87 e3       	ldi	r24, 0x37	; 55
    1476:	90 e0       	ldi	r25, 0x00	; 0
    1478:	27 e3       	ldi	r18, 0x37	; 55
    147a:	30 e0       	ldi	r19, 0x00	; 0
    147c:	f9 01       	movw	r30, r18
    147e:	20 81       	ld	r18, Z
    1480:	62 2f       	mov	r22, r18
    1482:	29 81       	ldd	r18, Y+1	; 0x01
    1484:	22 2f       	mov	r18, r18
    1486:	30 e0       	ldi	r19, 0x00	; 0
    1488:	a9 01       	movw	r20, r18
    148a:	48 50       	subi	r20, 0x08	; 8
    148c:	51 09       	sbc	r21, r1
    148e:	21 e0       	ldi	r18, 0x01	; 1
    1490:	30 e0       	ldi	r19, 0x00	; 0
    1492:	02 c0       	rjmp	.+4      	; 0x1498 <pinDirection+0xae>
    1494:	22 0f       	add	r18, r18
    1496:	33 1f       	adc	r19, r19
    1498:	4a 95       	dec	r20
    149a:	e2 f7       	brpl	.-8      	; 0x1494 <pinDirection+0xaa>
    149c:	26 2b       	or	r18, r22
    149e:	fc 01       	movw	r30, r24
    14a0:	20 83       	st	Z, r18
    14a2:	1b c0       	rjmp	.+54     	; 0x14da <pinDirection+0xf0>
		else if(direction == LOW)
    14a4:	8a 81       	ldd	r24, Y+2	; 0x02
    14a6:	88 23       	and	r24, r24
    14a8:	c1 f4       	brne	.+48     	; 0x14da <pinDirection+0xf0>
			CLRBit(DDRB,(pinNo-8));
    14aa:	87 e3       	ldi	r24, 0x37	; 55
    14ac:	90 e0       	ldi	r25, 0x00	; 0
    14ae:	27 e3       	ldi	r18, 0x37	; 55
    14b0:	30 e0       	ldi	r19, 0x00	; 0
    14b2:	f9 01       	movw	r30, r18
    14b4:	20 81       	ld	r18, Z
    14b6:	62 2f       	mov	r22, r18
    14b8:	29 81       	ldd	r18, Y+1	; 0x01
    14ba:	22 2f       	mov	r18, r18
    14bc:	30 e0       	ldi	r19, 0x00	; 0
    14be:	a9 01       	movw	r20, r18
    14c0:	48 50       	subi	r20, 0x08	; 8
    14c2:	51 09       	sbc	r21, r1
    14c4:	21 e0       	ldi	r18, 0x01	; 1
    14c6:	30 e0       	ldi	r19, 0x00	; 0
    14c8:	02 c0       	rjmp	.+4      	; 0x14ce <pinDirection+0xe4>
    14ca:	22 0f       	add	r18, r18
    14cc:	33 1f       	adc	r19, r19
    14ce:	4a 95       	dec	r20
    14d0:	e2 f7       	brpl	.-8      	; 0x14ca <pinDirection+0xe0>
    14d2:	20 95       	com	r18
    14d4:	26 23       	and	r18, r22
    14d6:	fc 01       	movw	r30, r24
    14d8:	20 83       	st	Z, r18
		else if(direction == INPUT)
			CLRBit(DDRA,pinNo);
		else{}
	}
	else if((pinNo >= PB0) && (pinNo <= PB7)){
		if(direction == OUTPUT)
    14da:	79 c0       	rjmp	.+242    	; 0x15ce <pinDirection+0x1e4>
			SETBit(DDRB,(pinNo-8));
		else if(direction == LOW)
			CLRBit(DDRB,(pinNo-8));
		else{}
	}
	else if((pinNo >= PC0) && (pinNo <= PC7)){
    14dc:	89 81       	ldd	r24, Y+1	; 0x01
    14de:	80 31       	cpi	r24, 0x10	; 16
    14e0:	d0 f1       	brcs	.+116    	; 0x1556 <pinDirection+0x16c>
    14e2:	89 81       	ldd	r24, Y+1	; 0x01
    14e4:	88 31       	cpi	r24, 0x18	; 24
    14e6:	b8 f5       	brcc	.+110    	; 0x1556 <pinDirection+0x16c>
		if(direction == OUTPUT)
    14e8:	8a 81       	ldd	r24, Y+2	; 0x02
    14ea:	81 30       	cpi	r24, 0x01	; 1
    14ec:	c1 f4       	brne	.+48     	; 0x151e <pinDirection+0x134>
			SETBit(DDRC,(pinNo-16));
    14ee:	84 e3       	ldi	r24, 0x34	; 52
    14f0:	90 e0       	ldi	r25, 0x00	; 0
    14f2:	24 e3       	ldi	r18, 0x34	; 52
    14f4:	30 e0       	ldi	r19, 0x00	; 0
    14f6:	f9 01       	movw	r30, r18
    14f8:	20 81       	ld	r18, Z
    14fa:	62 2f       	mov	r22, r18
    14fc:	29 81       	ldd	r18, Y+1	; 0x01
    14fe:	22 2f       	mov	r18, r18
    1500:	30 e0       	ldi	r19, 0x00	; 0
    1502:	a9 01       	movw	r20, r18
    1504:	40 51       	subi	r20, 0x10	; 16
    1506:	51 09       	sbc	r21, r1
    1508:	21 e0       	ldi	r18, 0x01	; 1
    150a:	30 e0       	ldi	r19, 0x00	; 0
    150c:	02 c0       	rjmp	.+4      	; 0x1512 <pinDirection+0x128>
    150e:	22 0f       	add	r18, r18
    1510:	33 1f       	adc	r19, r19
    1512:	4a 95       	dec	r20
    1514:	e2 f7       	brpl	.-8      	; 0x150e <pinDirection+0x124>
    1516:	26 2b       	or	r18, r22
    1518:	fc 01       	movw	r30, r24
    151a:	20 83       	st	Z, r18
    151c:	1b c0       	rjmp	.+54     	; 0x1554 <pinDirection+0x16a>
		else if(direction==INPUT)
    151e:	8a 81       	ldd	r24, Y+2	; 0x02
    1520:	88 23       	and	r24, r24
    1522:	c1 f4       	brne	.+48     	; 0x1554 <pinDirection+0x16a>
			CLRBit(DDRC,(pinNo-16));
    1524:	84 e3       	ldi	r24, 0x34	; 52
    1526:	90 e0       	ldi	r25, 0x00	; 0
    1528:	24 e3       	ldi	r18, 0x34	; 52
    152a:	30 e0       	ldi	r19, 0x00	; 0
    152c:	f9 01       	movw	r30, r18
    152e:	20 81       	ld	r18, Z
    1530:	62 2f       	mov	r22, r18
    1532:	29 81       	ldd	r18, Y+1	; 0x01
    1534:	22 2f       	mov	r18, r18
    1536:	30 e0       	ldi	r19, 0x00	; 0
    1538:	a9 01       	movw	r20, r18
    153a:	40 51       	subi	r20, 0x10	; 16
    153c:	51 09       	sbc	r21, r1
    153e:	21 e0       	ldi	r18, 0x01	; 1
    1540:	30 e0       	ldi	r19, 0x00	; 0
    1542:	02 c0       	rjmp	.+4      	; 0x1548 <pinDirection+0x15e>
    1544:	22 0f       	add	r18, r18
    1546:	33 1f       	adc	r19, r19
    1548:	4a 95       	dec	r20
    154a:	e2 f7       	brpl	.-8      	; 0x1544 <pinDirection+0x15a>
    154c:	20 95       	com	r18
    154e:	26 23       	and	r18, r22
    1550:	fc 01       	movw	r30, r24
    1552:	20 83       	st	Z, r18
		else if(direction == LOW)
			CLRBit(DDRB,(pinNo-8));
		else{}
	}
	else if((pinNo >= PC0) && (pinNo <= PC7)){
		if(direction == OUTPUT)
    1554:	3c c0       	rjmp	.+120    	; 0x15ce <pinDirection+0x1e4>
			SETBit(DDRC,(pinNo-16));
		else if(direction==INPUT)
			CLRBit(DDRC,(pinNo-16));
		else{}
	}
	else if((pinNo >= PD0) && (pinNo <= PD7)){
    1556:	89 81       	ldd	r24, Y+1	; 0x01
    1558:	88 31       	cpi	r24, 0x18	; 24
    155a:	c8 f1       	brcs	.+114    	; 0x15ce <pinDirection+0x1e4>
    155c:	89 81       	ldd	r24, Y+1	; 0x01
    155e:	80 32       	cpi	r24, 0x20	; 32
    1560:	b0 f5       	brcc	.+108    	; 0x15ce <pinDirection+0x1e4>
		if(direction == OUTPUT)
    1562:	8a 81       	ldd	r24, Y+2	; 0x02
    1564:	81 30       	cpi	r24, 0x01	; 1
    1566:	c1 f4       	brne	.+48     	; 0x1598 <pinDirection+0x1ae>
			SETBit(DDRD,(pinNo-24));
    1568:	81 e3       	ldi	r24, 0x31	; 49
    156a:	90 e0       	ldi	r25, 0x00	; 0
    156c:	21 e3       	ldi	r18, 0x31	; 49
    156e:	30 e0       	ldi	r19, 0x00	; 0
    1570:	f9 01       	movw	r30, r18
    1572:	20 81       	ld	r18, Z
    1574:	62 2f       	mov	r22, r18
    1576:	29 81       	ldd	r18, Y+1	; 0x01
    1578:	22 2f       	mov	r18, r18
    157a:	30 e0       	ldi	r19, 0x00	; 0
    157c:	a9 01       	movw	r20, r18
    157e:	48 51       	subi	r20, 0x18	; 24
    1580:	51 09       	sbc	r21, r1
    1582:	21 e0       	ldi	r18, 0x01	; 1
    1584:	30 e0       	ldi	r19, 0x00	; 0
    1586:	02 c0       	rjmp	.+4      	; 0x158c <pinDirection+0x1a2>
    1588:	22 0f       	add	r18, r18
    158a:	33 1f       	adc	r19, r19
    158c:	4a 95       	dec	r20
    158e:	e2 f7       	brpl	.-8      	; 0x1588 <pinDirection+0x19e>
    1590:	26 2b       	or	r18, r22
    1592:	fc 01       	movw	r30, r24
    1594:	20 83       	st	Z, r18
    1596:	1b c0       	rjmp	.+54     	; 0x15ce <pinDirection+0x1e4>
		else if(direction == INPUT)
    1598:	8a 81       	ldd	r24, Y+2	; 0x02
    159a:	88 23       	and	r24, r24
    159c:	c1 f4       	brne	.+48     	; 0x15ce <pinDirection+0x1e4>
			CLRBit(DDRD,(pinNo-24));
    159e:	81 e3       	ldi	r24, 0x31	; 49
    15a0:	90 e0       	ldi	r25, 0x00	; 0
    15a2:	21 e3       	ldi	r18, 0x31	; 49
    15a4:	30 e0       	ldi	r19, 0x00	; 0
    15a6:	f9 01       	movw	r30, r18
    15a8:	20 81       	ld	r18, Z
    15aa:	62 2f       	mov	r22, r18
    15ac:	29 81       	ldd	r18, Y+1	; 0x01
    15ae:	22 2f       	mov	r18, r18
    15b0:	30 e0       	ldi	r19, 0x00	; 0
    15b2:	a9 01       	movw	r20, r18
    15b4:	48 51       	subi	r20, 0x18	; 24
    15b6:	51 09       	sbc	r21, r1
    15b8:	21 e0       	ldi	r18, 0x01	; 1
    15ba:	30 e0       	ldi	r19, 0x00	; 0
    15bc:	02 c0       	rjmp	.+4      	; 0x15c2 <pinDirection+0x1d8>
    15be:	22 0f       	add	r18, r18
    15c0:	33 1f       	adc	r19, r19
    15c2:	4a 95       	dec	r20
    15c4:	e2 f7       	brpl	.-8      	; 0x15be <pinDirection+0x1d4>
    15c6:	20 95       	com	r18
    15c8:	26 23       	and	r18, r22
    15ca:	fc 01       	movw	r30, r24
    15cc:	20 83       	st	Z, r18
		else{}
	}
	else{}
}
    15ce:	0f 90       	pop	r0
    15d0:	0f 90       	pop	r0
    15d2:	df 91       	pop	r29
    15d4:	cf 91       	pop	r28
    15d6:	08 95       	ret

000015d8 <readPin>:

u8 readPin(u8 pinNo){
    15d8:	cf 93       	push	r28
    15da:	df 93       	push	r29
    15dc:	00 d0       	rcall	.+0      	; 0x15de <readPin+0x6>
    15de:	cd b7       	in	r28, 0x3d	; 61
    15e0:	de b7       	in	r29, 0x3e	; 62
    15e2:	8a 83       	std	Y+2, r24	; 0x02
	u8 result=0;
    15e4:	19 82       	std	Y+1, r1	; 0x01
	if((pinNo>=PA0)&&(pinNo<=PA7))
    15e6:	8a 81       	ldd	r24, Y+2	; 0x02
    15e8:	88 30       	cpi	r24, 0x08	; 8
    15ea:	88 f4       	brcc	.+34     	; 0x160e <readPin+0x36>
		result=GETBit(PINA,pinNo);
    15ec:	89 e3       	ldi	r24, 0x39	; 57
    15ee:	90 e0       	ldi	r25, 0x00	; 0
    15f0:	fc 01       	movw	r30, r24
    15f2:	80 81       	ld	r24, Z
    15f4:	88 2f       	mov	r24, r24
    15f6:	90 e0       	ldi	r25, 0x00	; 0
    15f8:	2a 81       	ldd	r18, Y+2	; 0x02
    15fa:	22 2f       	mov	r18, r18
    15fc:	30 e0       	ldi	r19, 0x00	; 0
    15fe:	02 c0       	rjmp	.+4      	; 0x1604 <readPin+0x2c>
    1600:	95 95       	asr	r25
    1602:	87 95       	ror	r24
    1604:	2a 95       	dec	r18
    1606:	e2 f7       	brpl	.-8      	; 0x1600 <readPin+0x28>
    1608:	81 70       	andi	r24, 0x01	; 1
    160a:	89 83       	std	Y+1, r24	; 0x01
    160c:	4a c0       	rjmp	.+148    	; 0x16a2 <readPin+0xca>
	else if((pinNo>=PB0)&&(pinNo<=PB7))
    160e:	8a 81       	ldd	r24, Y+2	; 0x02
    1610:	88 30       	cpi	r24, 0x08	; 8
    1612:	b0 f0       	brcs	.+44     	; 0x1640 <readPin+0x68>
    1614:	8a 81       	ldd	r24, Y+2	; 0x02
    1616:	80 31       	cpi	r24, 0x10	; 16
    1618:	98 f4       	brcc	.+38     	; 0x1640 <readPin+0x68>
		result=GETBit(PINB,pinNo-8);
    161a:	86 e3       	ldi	r24, 0x36	; 54
    161c:	90 e0       	ldi	r25, 0x00	; 0
    161e:	fc 01       	movw	r30, r24
    1620:	80 81       	ld	r24, Z
    1622:	88 2f       	mov	r24, r24
    1624:	90 e0       	ldi	r25, 0x00	; 0
    1626:	2a 81       	ldd	r18, Y+2	; 0x02
    1628:	22 2f       	mov	r18, r18
    162a:	30 e0       	ldi	r19, 0x00	; 0
    162c:	28 50       	subi	r18, 0x08	; 8
    162e:	31 09       	sbc	r19, r1
    1630:	02 c0       	rjmp	.+4      	; 0x1636 <readPin+0x5e>
    1632:	95 95       	asr	r25
    1634:	87 95       	ror	r24
    1636:	2a 95       	dec	r18
    1638:	e2 f7       	brpl	.-8      	; 0x1632 <readPin+0x5a>
    163a:	81 70       	andi	r24, 0x01	; 1
    163c:	89 83       	std	Y+1, r24	; 0x01
    163e:	31 c0       	rjmp	.+98     	; 0x16a2 <readPin+0xca>
	else if((pinNo>=PC0)&&(pinNo<=PC7))
    1640:	8a 81       	ldd	r24, Y+2	; 0x02
    1642:	80 31       	cpi	r24, 0x10	; 16
    1644:	b0 f0       	brcs	.+44     	; 0x1672 <readPin+0x9a>
    1646:	8a 81       	ldd	r24, Y+2	; 0x02
    1648:	88 31       	cpi	r24, 0x18	; 24
    164a:	98 f4       	brcc	.+38     	; 0x1672 <readPin+0x9a>
		result=GETBit(PINC,pinNo-16);
    164c:	83 e3       	ldi	r24, 0x33	; 51
    164e:	90 e0       	ldi	r25, 0x00	; 0
    1650:	fc 01       	movw	r30, r24
    1652:	80 81       	ld	r24, Z
    1654:	88 2f       	mov	r24, r24
    1656:	90 e0       	ldi	r25, 0x00	; 0
    1658:	2a 81       	ldd	r18, Y+2	; 0x02
    165a:	22 2f       	mov	r18, r18
    165c:	30 e0       	ldi	r19, 0x00	; 0
    165e:	20 51       	subi	r18, 0x10	; 16
    1660:	31 09       	sbc	r19, r1
    1662:	02 c0       	rjmp	.+4      	; 0x1668 <readPin+0x90>
    1664:	95 95       	asr	r25
    1666:	87 95       	ror	r24
    1668:	2a 95       	dec	r18
    166a:	e2 f7       	brpl	.-8      	; 0x1664 <readPin+0x8c>
    166c:	81 70       	andi	r24, 0x01	; 1
    166e:	89 83       	std	Y+1, r24	; 0x01
    1670:	18 c0       	rjmp	.+48     	; 0x16a2 <readPin+0xca>
	else if((pinNo>=PD0)&&(pinNo<=PD7))
    1672:	8a 81       	ldd	r24, Y+2	; 0x02
    1674:	88 31       	cpi	r24, 0x18	; 24
    1676:	a8 f0       	brcs	.+42     	; 0x16a2 <readPin+0xca>
    1678:	8a 81       	ldd	r24, Y+2	; 0x02
    167a:	80 32       	cpi	r24, 0x20	; 32
    167c:	90 f4       	brcc	.+36     	; 0x16a2 <readPin+0xca>
		result=GETBit(PIND,pinNo-24);
    167e:	80 e3       	ldi	r24, 0x30	; 48
    1680:	90 e0       	ldi	r25, 0x00	; 0
    1682:	fc 01       	movw	r30, r24
    1684:	80 81       	ld	r24, Z
    1686:	88 2f       	mov	r24, r24
    1688:	90 e0       	ldi	r25, 0x00	; 0
    168a:	2a 81       	ldd	r18, Y+2	; 0x02
    168c:	22 2f       	mov	r18, r18
    168e:	30 e0       	ldi	r19, 0x00	; 0
    1690:	28 51       	subi	r18, 0x18	; 24
    1692:	31 09       	sbc	r19, r1
    1694:	02 c0       	rjmp	.+4      	; 0x169a <readPin+0xc2>
    1696:	95 95       	asr	r25
    1698:	87 95       	ror	r24
    169a:	2a 95       	dec	r18
    169c:	e2 f7       	brpl	.-8      	; 0x1696 <readPin+0xbe>
    169e:	81 70       	andi	r24, 0x01	; 1
    16a0:	89 83       	std	Y+1, r24	; 0x01
	else{}
	return result;
    16a2:	89 81       	ldd	r24, Y+1	; 0x01
}
    16a4:	0f 90       	pop	r0
    16a6:	0f 90       	pop	r0
    16a8:	df 91       	pop	r29
    16aa:	cf 91       	pop	r28
    16ac:	08 95       	ret

000016ae <writePins>:
	
/*for custom number of bits*/
void writePins(volatile u8* port, u8 mask, u8 logic){
    16ae:	cf 93       	push	r28
    16b0:	df 93       	push	r29
    16b2:	00 d0       	rcall	.+0      	; 0x16b4 <writePins+0x6>
    16b4:	00 d0       	rcall	.+0      	; 0x16b6 <writePins+0x8>
    16b6:	cd b7       	in	r28, 0x3d	; 61
    16b8:	de b7       	in	r29, 0x3e	; 62
    16ba:	9a 83       	std	Y+2, r25	; 0x02
    16bc:	89 83       	std	Y+1, r24	; 0x01
    16be:	6b 83       	std	Y+3, r22	; 0x03
    16c0:	4c 83       	std	Y+4, r20	; 0x04
	if(logic==HIGH)
    16c2:	8c 81       	ldd	r24, Y+4	; 0x04
    16c4:	81 30       	cpi	r24, 0x01	; 1
    16c6:	61 f4       	brne	.+24     	; 0x16e0 <writePins+0x32>
		SETBits(*port,mask);
    16c8:	89 81       	ldd	r24, Y+1	; 0x01
    16ca:	9a 81       	ldd	r25, Y+2	; 0x02
    16cc:	fc 01       	movw	r30, r24
    16ce:	90 81       	ld	r25, Z
    16d0:	8b 81       	ldd	r24, Y+3	; 0x03
    16d2:	29 2f       	mov	r18, r25
    16d4:	28 2b       	or	r18, r24
    16d6:	89 81       	ldd	r24, Y+1	; 0x01
    16d8:	9a 81       	ldd	r25, Y+2	; 0x02
    16da:	fc 01       	movw	r30, r24
    16dc:	20 83       	st	Z, r18
    16de:	10 c0       	rjmp	.+32     	; 0x1700 <writePins+0x52>
	else if(logic==LOW)
    16e0:	8c 81       	ldd	r24, Y+4	; 0x04
    16e2:	88 23       	and	r24, r24
    16e4:	69 f4       	brne	.+26     	; 0x1700 <writePins+0x52>
		CLRBits(*port,mask);
    16e6:	89 81       	ldd	r24, Y+1	; 0x01
    16e8:	9a 81       	ldd	r25, Y+2	; 0x02
    16ea:	fc 01       	movw	r30, r24
    16ec:	80 81       	ld	r24, Z
    16ee:	98 2f       	mov	r25, r24
    16f0:	8b 81       	ldd	r24, Y+3	; 0x03
    16f2:	80 95       	com	r24
    16f4:	89 23       	and	r24, r25
    16f6:	28 2f       	mov	r18, r24
    16f8:	89 81       	ldd	r24, Y+1	; 0x01
    16fa:	9a 81       	ldd	r25, Y+2	; 0x02
    16fc:	fc 01       	movw	r30, r24
    16fe:	20 83       	st	Z, r18
	else{}
}
    1700:	0f 90       	pop	r0
    1702:	0f 90       	pop	r0
    1704:	0f 90       	pop	r0
    1706:	0f 90       	pop	r0
    1708:	df 91       	pop	r29
    170a:	cf 91       	pop	r28
    170c:	08 95       	ret

0000170e <pinsDirection>:
void pinsDirection(volatile u8* ddr, u8 mask, u8 direction){
    170e:	cf 93       	push	r28
    1710:	df 93       	push	r29
    1712:	00 d0       	rcall	.+0      	; 0x1714 <pinsDirection+0x6>
    1714:	00 d0       	rcall	.+0      	; 0x1716 <pinsDirection+0x8>
    1716:	cd b7       	in	r28, 0x3d	; 61
    1718:	de b7       	in	r29, 0x3e	; 62
    171a:	9a 83       	std	Y+2, r25	; 0x02
    171c:	89 83       	std	Y+1, r24	; 0x01
    171e:	6b 83       	std	Y+3, r22	; 0x03
    1720:	4c 83       	std	Y+4, r20	; 0x04
	if(direction == OUTPUT)
    1722:	8c 81       	ldd	r24, Y+4	; 0x04
    1724:	81 30       	cpi	r24, 0x01	; 1
    1726:	61 f4       	brne	.+24     	; 0x1740 <pinsDirection+0x32>
		SETBits(*ddr,mask);
    1728:	89 81       	ldd	r24, Y+1	; 0x01
    172a:	9a 81       	ldd	r25, Y+2	; 0x02
    172c:	fc 01       	movw	r30, r24
    172e:	90 81       	ld	r25, Z
    1730:	8b 81       	ldd	r24, Y+3	; 0x03
    1732:	29 2f       	mov	r18, r25
    1734:	28 2b       	or	r18, r24
    1736:	89 81       	ldd	r24, Y+1	; 0x01
    1738:	9a 81       	ldd	r25, Y+2	; 0x02
    173a:	fc 01       	movw	r30, r24
    173c:	20 83       	st	Z, r18
    173e:	10 c0       	rjmp	.+32     	; 0x1760 <pinsDirection+0x52>
	else if(direction == INPUT)
    1740:	8c 81       	ldd	r24, Y+4	; 0x04
    1742:	88 23       	and	r24, r24
    1744:	69 f4       	brne	.+26     	; 0x1760 <pinsDirection+0x52>
		CLRBits(*ddr,mask);
    1746:	89 81       	ldd	r24, Y+1	; 0x01
    1748:	9a 81       	ldd	r25, Y+2	; 0x02
    174a:	fc 01       	movw	r30, r24
    174c:	80 81       	ld	r24, Z
    174e:	98 2f       	mov	r25, r24
    1750:	8b 81       	ldd	r24, Y+3	; 0x03
    1752:	80 95       	com	r24
    1754:	89 23       	and	r24, r25
    1756:	28 2f       	mov	r18, r24
    1758:	89 81       	ldd	r24, Y+1	; 0x01
    175a:	9a 81       	ldd	r25, Y+2	; 0x02
    175c:	fc 01       	movw	r30, r24
    175e:	20 83       	st	Z, r18
	else{}
}
    1760:	0f 90       	pop	r0
    1762:	0f 90       	pop	r0
    1764:	0f 90       	pop	r0
    1766:	0f 90       	pop	r0
    1768:	df 91       	pop	r29
    176a:	cf 91       	pop	r28
    176c:	08 95       	ret

0000176e <__cmpsf2>:
    176e:	0e 94 9a 0c 	call	0x1934	; 0x1934 <__fp_cmp>
    1772:	08 f4       	brcc	.+2      	; 0x1776 <__cmpsf2+0x8>
    1774:	81 e0       	ldi	r24, 0x01	; 1
    1776:	08 95       	ret

00001778 <__divsf3>:
    1778:	0e 94 d0 0b 	call	0x17a0	; 0x17a0 <__divsf3x>
    177c:	0c 94 d5 0c 	jmp	0x19aa	; 0x19aa <__fp_round>
    1780:	0e 94 ce 0c 	call	0x199c	; 0x199c <__fp_pscB>
    1784:	58 f0       	brcs	.+22     	; 0x179c <__divsf3+0x24>
    1786:	0e 94 c7 0c 	call	0x198e	; 0x198e <__fp_pscA>
    178a:	40 f0       	brcs	.+16     	; 0x179c <__divsf3+0x24>
    178c:	29 f4       	brne	.+10     	; 0x1798 <__divsf3+0x20>
    178e:	5f 3f       	cpi	r21, 0xFF	; 255
    1790:	29 f0       	breq	.+10     	; 0x179c <__divsf3+0x24>
    1792:	0c 94 be 0c 	jmp	0x197c	; 0x197c <__fp_inf>
    1796:	51 11       	cpse	r21, r1
    1798:	0c 94 09 0d 	jmp	0x1a12	; 0x1a12 <__fp_szero>
    179c:	0c 94 c4 0c 	jmp	0x1988	; 0x1988 <__fp_nan>

000017a0 <__divsf3x>:
    17a0:	0e 94 e6 0c 	call	0x19cc	; 0x19cc <__fp_split3>
    17a4:	68 f3       	brcs	.-38     	; 0x1780 <__divsf3+0x8>

000017a6 <__divsf3_pse>:
    17a6:	99 23       	and	r25, r25
    17a8:	b1 f3       	breq	.-20     	; 0x1796 <__divsf3+0x1e>
    17aa:	55 23       	and	r21, r21
    17ac:	91 f3       	breq	.-28     	; 0x1792 <__divsf3+0x1a>
    17ae:	95 1b       	sub	r25, r21
    17b0:	55 0b       	sbc	r21, r21
    17b2:	bb 27       	eor	r27, r27
    17b4:	aa 27       	eor	r26, r26
    17b6:	62 17       	cp	r22, r18
    17b8:	73 07       	cpc	r23, r19
    17ba:	84 07       	cpc	r24, r20
    17bc:	38 f0       	brcs	.+14     	; 0x17cc <__divsf3_pse+0x26>
    17be:	9f 5f       	subi	r25, 0xFF	; 255
    17c0:	5f 4f       	sbci	r21, 0xFF	; 255
    17c2:	22 0f       	add	r18, r18
    17c4:	33 1f       	adc	r19, r19
    17c6:	44 1f       	adc	r20, r20
    17c8:	aa 1f       	adc	r26, r26
    17ca:	a9 f3       	breq	.-22     	; 0x17b6 <__divsf3_pse+0x10>
    17cc:	35 d0       	rcall	.+106    	; 0x1838 <__divsf3_pse+0x92>
    17ce:	0e 2e       	mov	r0, r30
    17d0:	3a f0       	brmi	.+14     	; 0x17e0 <__divsf3_pse+0x3a>
    17d2:	e0 e8       	ldi	r30, 0x80	; 128
    17d4:	32 d0       	rcall	.+100    	; 0x183a <__divsf3_pse+0x94>
    17d6:	91 50       	subi	r25, 0x01	; 1
    17d8:	50 40       	sbci	r21, 0x00	; 0
    17da:	e6 95       	lsr	r30
    17dc:	00 1c       	adc	r0, r0
    17de:	ca f7       	brpl	.-14     	; 0x17d2 <__divsf3_pse+0x2c>
    17e0:	2b d0       	rcall	.+86     	; 0x1838 <__divsf3_pse+0x92>
    17e2:	fe 2f       	mov	r31, r30
    17e4:	29 d0       	rcall	.+82     	; 0x1838 <__divsf3_pse+0x92>
    17e6:	66 0f       	add	r22, r22
    17e8:	77 1f       	adc	r23, r23
    17ea:	88 1f       	adc	r24, r24
    17ec:	bb 1f       	adc	r27, r27
    17ee:	26 17       	cp	r18, r22
    17f0:	37 07       	cpc	r19, r23
    17f2:	48 07       	cpc	r20, r24
    17f4:	ab 07       	cpc	r26, r27
    17f6:	b0 e8       	ldi	r27, 0x80	; 128
    17f8:	09 f0       	breq	.+2      	; 0x17fc <__divsf3_pse+0x56>
    17fa:	bb 0b       	sbc	r27, r27
    17fc:	80 2d       	mov	r24, r0
    17fe:	bf 01       	movw	r22, r30
    1800:	ff 27       	eor	r31, r31
    1802:	93 58       	subi	r25, 0x83	; 131
    1804:	5f 4f       	sbci	r21, 0xFF	; 255
    1806:	3a f0       	brmi	.+14     	; 0x1816 <__divsf3_pse+0x70>
    1808:	9e 3f       	cpi	r25, 0xFE	; 254
    180a:	51 05       	cpc	r21, r1
    180c:	78 f0       	brcs	.+30     	; 0x182c <__divsf3_pse+0x86>
    180e:	0c 94 be 0c 	jmp	0x197c	; 0x197c <__fp_inf>
    1812:	0c 94 09 0d 	jmp	0x1a12	; 0x1a12 <__fp_szero>
    1816:	5f 3f       	cpi	r21, 0xFF	; 255
    1818:	e4 f3       	brlt	.-8      	; 0x1812 <__divsf3_pse+0x6c>
    181a:	98 3e       	cpi	r25, 0xE8	; 232
    181c:	d4 f3       	brlt	.-12     	; 0x1812 <__divsf3_pse+0x6c>
    181e:	86 95       	lsr	r24
    1820:	77 95       	ror	r23
    1822:	67 95       	ror	r22
    1824:	b7 95       	ror	r27
    1826:	f7 95       	ror	r31
    1828:	9f 5f       	subi	r25, 0xFF	; 255
    182a:	c9 f7       	brne	.-14     	; 0x181e <__divsf3_pse+0x78>
    182c:	88 0f       	add	r24, r24
    182e:	91 1d       	adc	r25, r1
    1830:	96 95       	lsr	r25
    1832:	87 95       	ror	r24
    1834:	97 f9       	bld	r25, 7
    1836:	08 95       	ret
    1838:	e1 e0       	ldi	r30, 0x01	; 1
    183a:	66 0f       	add	r22, r22
    183c:	77 1f       	adc	r23, r23
    183e:	88 1f       	adc	r24, r24
    1840:	bb 1f       	adc	r27, r27
    1842:	62 17       	cp	r22, r18
    1844:	73 07       	cpc	r23, r19
    1846:	84 07       	cpc	r24, r20
    1848:	ba 07       	cpc	r27, r26
    184a:	20 f0       	brcs	.+8      	; 0x1854 <__divsf3_pse+0xae>
    184c:	62 1b       	sub	r22, r18
    184e:	73 0b       	sbc	r23, r19
    1850:	84 0b       	sbc	r24, r20
    1852:	ba 0b       	sbc	r27, r26
    1854:	ee 1f       	adc	r30, r30
    1856:	88 f7       	brcc	.-30     	; 0x183a <__divsf3_pse+0x94>
    1858:	e0 95       	com	r30
    185a:	08 95       	ret

0000185c <__fixunssfsi>:
    185c:	0e 94 ee 0c 	call	0x19dc	; 0x19dc <__fp_splitA>
    1860:	88 f0       	brcs	.+34     	; 0x1884 <__fixunssfsi+0x28>
    1862:	9f 57       	subi	r25, 0x7F	; 127
    1864:	98 f0       	brcs	.+38     	; 0x188c <__fixunssfsi+0x30>
    1866:	b9 2f       	mov	r27, r25
    1868:	99 27       	eor	r25, r25
    186a:	b7 51       	subi	r27, 0x17	; 23
    186c:	b0 f0       	brcs	.+44     	; 0x189a <__fixunssfsi+0x3e>
    186e:	e1 f0       	breq	.+56     	; 0x18a8 <__fixunssfsi+0x4c>
    1870:	66 0f       	add	r22, r22
    1872:	77 1f       	adc	r23, r23
    1874:	88 1f       	adc	r24, r24
    1876:	99 1f       	adc	r25, r25
    1878:	1a f0       	brmi	.+6      	; 0x1880 <__fixunssfsi+0x24>
    187a:	ba 95       	dec	r27
    187c:	c9 f7       	brne	.-14     	; 0x1870 <__fixunssfsi+0x14>
    187e:	14 c0       	rjmp	.+40     	; 0x18a8 <__fixunssfsi+0x4c>
    1880:	b1 30       	cpi	r27, 0x01	; 1
    1882:	91 f0       	breq	.+36     	; 0x18a8 <__fixunssfsi+0x4c>
    1884:	0e 94 08 0d 	call	0x1a10	; 0x1a10 <__fp_zero>
    1888:	b1 e0       	ldi	r27, 0x01	; 1
    188a:	08 95       	ret
    188c:	0c 94 08 0d 	jmp	0x1a10	; 0x1a10 <__fp_zero>
    1890:	67 2f       	mov	r22, r23
    1892:	78 2f       	mov	r23, r24
    1894:	88 27       	eor	r24, r24
    1896:	b8 5f       	subi	r27, 0xF8	; 248
    1898:	39 f0       	breq	.+14     	; 0x18a8 <__fixunssfsi+0x4c>
    189a:	b9 3f       	cpi	r27, 0xF9	; 249
    189c:	cc f3       	brlt	.-14     	; 0x1890 <__fixunssfsi+0x34>
    189e:	86 95       	lsr	r24
    18a0:	77 95       	ror	r23
    18a2:	67 95       	ror	r22
    18a4:	b3 95       	inc	r27
    18a6:	d9 f7       	brne	.-10     	; 0x189e <__fixunssfsi+0x42>
    18a8:	3e f4       	brtc	.+14     	; 0x18b8 <__fixunssfsi+0x5c>
    18aa:	90 95       	com	r25
    18ac:	80 95       	com	r24
    18ae:	70 95       	com	r23
    18b0:	61 95       	neg	r22
    18b2:	7f 4f       	sbci	r23, 0xFF	; 255
    18b4:	8f 4f       	sbci	r24, 0xFF	; 255
    18b6:	9f 4f       	sbci	r25, 0xFF	; 255
    18b8:	08 95       	ret

000018ba <__floatunsisf>:
    18ba:	e8 94       	clt
    18bc:	09 c0       	rjmp	.+18     	; 0x18d0 <__floatsisf+0x12>

000018be <__floatsisf>:
    18be:	97 fb       	bst	r25, 7
    18c0:	3e f4       	brtc	.+14     	; 0x18d0 <__floatsisf+0x12>
    18c2:	90 95       	com	r25
    18c4:	80 95       	com	r24
    18c6:	70 95       	com	r23
    18c8:	61 95       	neg	r22
    18ca:	7f 4f       	sbci	r23, 0xFF	; 255
    18cc:	8f 4f       	sbci	r24, 0xFF	; 255
    18ce:	9f 4f       	sbci	r25, 0xFF	; 255
    18d0:	99 23       	and	r25, r25
    18d2:	a9 f0       	breq	.+42     	; 0x18fe <__floatsisf+0x40>
    18d4:	f9 2f       	mov	r31, r25
    18d6:	96 e9       	ldi	r25, 0x96	; 150
    18d8:	bb 27       	eor	r27, r27
    18da:	93 95       	inc	r25
    18dc:	f6 95       	lsr	r31
    18de:	87 95       	ror	r24
    18e0:	77 95       	ror	r23
    18e2:	67 95       	ror	r22
    18e4:	b7 95       	ror	r27
    18e6:	f1 11       	cpse	r31, r1
    18e8:	f8 cf       	rjmp	.-16     	; 0x18da <__floatsisf+0x1c>
    18ea:	fa f4       	brpl	.+62     	; 0x192a <__floatsisf+0x6c>
    18ec:	bb 0f       	add	r27, r27
    18ee:	11 f4       	brne	.+4      	; 0x18f4 <__floatsisf+0x36>
    18f0:	60 ff       	sbrs	r22, 0
    18f2:	1b c0       	rjmp	.+54     	; 0x192a <__floatsisf+0x6c>
    18f4:	6f 5f       	subi	r22, 0xFF	; 255
    18f6:	7f 4f       	sbci	r23, 0xFF	; 255
    18f8:	8f 4f       	sbci	r24, 0xFF	; 255
    18fa:	9f 4f       	sbci	r25, 0xFF	; 255
    18fc:	16 c0       	rjmp	.+44     	; 0x192a <__floatsisf+0x6c>
    18fe:	88 23       	and	r24, r24
    1900:	11 f0       	breq	.+4      	; 0x1906 <__floatsisf+0x48>
    1902:	96 e9       	ldi	r25, 0x96	; 150
    1904:	11 c0       	rjmp	.+34     	; 0x1928 <__floatsisf+0x6a>
    1906:	77 23       	and	r23, r23
    1908:	21 f0       	breq	.+8      	; 0x1912 <__floatsisf+0x54>
    190a:	9e e8       	ldi	r25, 0x8E	; 142
    190c:	87 2f       	mov	r24, r23
    190e:	76 2f       	mov	r23, r22
    1910:	05 c0       	rjmp	.+10     	; 0x191c <__floatsisf+0x5e>
    1912:	66 23       	and	r22, r22
    1914:	71 f0       	breq	.+28     	; 0x1932 <__floatsisf+0x74>
    1916:	96 e8       	ldi	r25, 0x86	; 134
    1918:	86 2f       	mov	r24, r22
    191a:	70 e0       	ldi	r23, 0x00	; 0
    191c:	60 e0       	ldi	r22, 0x00	; 0
    191e:	2a f0       	brmi	.+10     	; 0x192a <__floatsisf+0x6c>
    1920:	9a 95       	dec	r25
    1922:	66 0f       	add	r22, r22
    1924:	77 1f       	adc	r23, r23
    1926:	88 1f       	adc	r24, r24
    1928:	da f7       	brpl	.-10     	; 0x1920 <__floatsisf+0x62>
    192a:	88 0f       	add	r24, r24
    192c:	96 95       	lsr	r25
    192e:	87 95       	ror	r24
    1930:	97 f9       	bld	r25, 7
    1932:	08 95       	ret

00001934 <__fp_cmp>:
    1934:	99 0f       	add	r25, r25
    1936:	00 08       	sbc	r0, r0
    1938:	55 0f       	add	r21, r21
    193a:	aa 0b       	sbc	r26, r26
    193c:	e0 e8       	ldi	r30, 0x80	; 128
    193e:	fe ef       	ldi	r31, 0xFE	; 254
    1940:	16 16       	cp	r1, r22
    1942:	17 06       	cpc	r1, r23
    1944:	e8 07       	cpc	r30, r24
    1946:	f9 07       	cpc	r31, r25
    1948:	c0 f0       	brcs	.+48     	; 0x197a <__fp_cmp+0x46>
    194a:	12 16       	cp	r1, r18
    194c:	13 06       	cpc	r1, r19
    194e:	e4 07       	cpc	r30, r20
    1950:	f5 07       	cpc	r31, r21
    1952:	98 f0       	brcs	.+38     	; 0x197a <__fp_cmp+0x46>
    1954:	62 1b       	sub	r22, r18
    1956:	73 0b       	sbc	r23, r19
    1958:	84 0b       	sbc	r24, r20
    195a:	95 0b       	sbc	r25, r21
    195c:	39 f4       	brne	.+14     	; 0x196c <__fp_cmp+0x38>
    195e:	0a 26       	eor	r0, r26
    1960:	61 f0       	breq	.+24     	; 0x197a <__fp_cmp+0x46>
    1962:	23 2b       	or	r18, r19
    1964:	24 2b       	or	r18, r20
    1966:	25 2b       	or	r18, r21
    1968:	21 f4       	brne	.+8      	; 0x1972 <__fp_cmp+0x3e>
    196a:	08 95       	ret
    196c:	0a 26       	eor	r0, r26
    196e:	09 f4       	brne	.+2      	; 0x1972 <__fp_cmp+0x3e>
    1970:	a1 40       	sbci	r26, 0x01	; 1
    1972:	a6 95       	lsr	r26
    1974:	8f ef       	ldi	r24, 0xFF	; 255
    1976:	81 1d       	adc	r24, r1
    1978:	81 1d       	adc	r24, r1
    197a:	08 95       	ret

0000197c <__fp_inf>:
    197c:	97 f9       	bld	r25, 7
    197e:	9f 67       	ori	r25, 0x7F	; 127
    1980:	80 e8       	ldi	r24, 0x80	; 128
    1982:	70 e0       	ldi	r23, 0x00	; 0
    1984:	60 e0       	ldi	r22, 0x00	; 0
    1986:	08 95       	ret

00001988 <__fp_nan>:
    1988:	9f ef       	ldi	r25, 0xFF	; 255
    198a:	80 ec       	ldi	r24, 0xC0	; 192
    198c:	08 95       	ret

0000198e <__fp_pscA>:
    198e:	00 24       	eor	r0, r0
    1990:	0a 94       	dec	r0
    1992:	16 16       	cp	r1, r22
    1994:	17 06       	cpc	r1, r23
    1996:	18 06       	cpc	r1, r24
    1998:	09 06       	cpc	r0, r25
    199a:	08 95       	ret

0000199c <__fp_pscB>:
    199c:	00 24       	eor	r0, r0
    199e:	0a 94       	dec	r0
    19a0:	12 16       	cp	r1, r18
    19a2:	13 06       	cpc	r1, r19
    19a4:	14 06       	cpc	r1, r20
    19a6:	05 06       	cpc	r0, r21
    19a8:	08 95       	ret

000019aa <__fp_round>:
    19aa:	09 2e       	mov	r0, r25
    19ac:	03 94       	inc	r0
    19ae:	00 0c       	add	r0, r0
    19b0:	11 f4       	brne	.+4      	; 0x19b6 <__fp_round+0xc>
    19b2:	88 23       	and	r24, r24
    19b4:	52 f0       	brmi	.+20     	; 0x19ca <__fp_round+0x20>
    19b6:	bb 0f       	add	r27, r27
    19b8:	40 f4       	brcc	.+16     	; 0x19ca <__fp_round+0x20>
    19ba:	bf 2b       	or	r27, r31
    19bc:	11 f4       	brne	.+4      	; 0x19c2 <__fp_round+0x18>
    19be:	60 ff       	sbrs	r22, 0
    19c0:	04 c0       	rjmp	.+8      	; 0x19ca <__fp_round+0x20>
    19c2:	6f 5f       	subi	r22, 0xFF	; 255
    19c4:	7f 4f       	sbci	r23, 0xFF	; 255
    19c6:	8f 4f       	sbci	r24, 0xFF	; 255
    19c8:	9f 4f       	sbci	r25, 0xFF	; 255
    19ca:	08 95       	ret

000019cc <__fp_split3>:
    19cc:	57 fd       	sbrc	r21, 7
    19ce:	90 58       	subi	r25, 0x80	; 128
    19d0:	44 0f       	add	r20, r20
    19d2:	55 1f       	adc	r21, r21
    19d4:	59 f0       	breq	.+22     	; 0x19ec <__fp_splitA+0x10>
    19d6:	5f 3f       	cpi	r21, 0xFF	; 255
    19d8:	71 f0       	breq	.+28     	; 0x19f6 <__fp_splitA+0x1a>
    19da:	47 95       	ror	r20

000019dc <__fp_splitA>:
    19dc:	88 0f       	add	r24, r24
    19de:	97 fb       	bst	r25, 7
    19e0:	99 1f       	adc	r25, r25
    19e2:	61 f0       	breq	.+24     	; 0x19fc <__fp_splitA+0x20>
    19e4:	9f 3f       	cpi	r25, 0xFF	; 255
    19e6:	79 f0       	breq	.+30     	; 0x1a06 <__fp_splitA+0x2a>
    19e8:	87 95       	ror	r24
    19ea:	08 95       	ret
    19ec:	12 16       	cp	r1, r18
    19ee:	13 06       	cpc	r1, r19
    19f0:	14 06       	cpc	r1, r20
    19f2:	55 1f       	adc	r21, r21
    19f4:	f2 cf       	rjmp	.-28     	; 0x19da <__fp_split3+0xe>
    19f6:	46 95       	lsr	r20
    19f8:	f1 df       	rcall	.-30     	; 0x19dc <__fp_splitA>
    19fa:	08 c0       	rjmp	.+16     	; 0x1a0c <__fp_splitA+0x30>
    19fc:	16 16       	cp	r1, r22
    19fe:	17 06       	cpc	r1, r23
    1a00:	18 06       	cpc	r1, r24
    1a02:	99 1f       	adc	r25, r25
    1a04:	f1 cf       	rjmp	.-30     	; 0x19e8 <__fp_splitA+0xc>
    1a06:	86 95       	lsr	r24
    1a08:	71 05       	cpc	r23, r1
    1a0a:	61 05       	cpc	r22, r1
    1a0c:	08 94       	sec
    1a0e:	08 95       	ret

00001a10 <__fp_zero>:
    1a10:	e8 94       	clt

00001a12 <__fp_szero>:
    1a12:	bb 27       	eor	r27, r27
    1a14:	66 27       	eor	r22, r22
    1a16:	77 27       	eor	r23, r23
    1a18:	cb 01       	movw	r24, r22
    1a1a:	97 f9       	bld	r25, 7
    1a1c:	08 95       	ret

00001a1e <__gesf2>:
    1a1e:	0e 94 9a 0c 	call	0x1934	; 0x1934 <__fp_cmp>
    1a22:	08 f4       	brcc	.+2      	; 0x1a26 <__gesf2+0x8>
    1a24:	8f ef       	ldi	r24, 0xFF	; 255
    1a26:	08 95       	ret

00001a28 <__mulsf3>:
    1a28:	0e 94 27 0d 	call	0x1a4e	; 0x1a4e <__mulsf3x>
    1a2c:	0c 94 d5 0c 	jmp	0x19aa	; 0x19aa <__fp_round>
    1a30:	0e 94 c7 0c 	call	0x198e	; 0x198e <__fp_pscA>
    1a34:	38 f0       	brcs	.+14     	; 0x1a44 <__mulsf3+0x1c>
    1a36:	0e 94 ce 0c 	call	0x199c	; 0x199c <__fp_pscB>
    1a3a:	20 f0       	brcs	.+8      	; 0x1a44 <__mulsf3+0x1c>
    1a3c:	95 23       	and	r25, r21
    1a3e:	11 f0       	breq	.+4      	; 0x1a44 <__mulsf3+0x1c>
    1a40:	0c 94 be 0c 	jmp	0x197c	; 0x197c <__fp_inf>
    1a44:	0c 94 c4 0c 	jmp	0x1988	; 0x1988 <__fp_nan>
    1a48:	11 24       	eor	r1, r1
    1a4a:	0c 94 09 0d 	jmp	0x1a12	; 0x1a12 <__fp_szero>

00001a4e <__mulsf3x>:
    1a4e:	0e 94 e6 0c 	call	0x19cc	; 0x19cc <__fp_split3>
    1a52:	70 f3       	brcs	.-36     	; 0x1a30 <__mulsf3+0x8>

00001a54 <__mulsf3_pse>:
    1a54:	95 9f       	mul	r25, r21
    1a56:	c1 f3       	breq	.-16     	; 0x1a48 <__mulsf3+0x20>
    1a58:	95 0f       	add	r25, r21
    1a5a:	50 e0       	ldi	r21, 0x00	; 0
    1a5c:	55 1f       	adc	r21, r21
    1a5e:	62 9f       	mul	r22, r18
    1a60:	f0 01       	movw	r30, r0
    1a62:	72 9f       	mul	r23, r18
    1a64:	bb 27       	eor	r27, r27
    1a66:	f0 0d       	add	r31, r0
    1a68:	b1 1d       	adc	r27, r1
    1a6a:	63 9f       	mul	r22, r19
    1a6c:	aa 27       	eor	r26, r26
    1a6e:	f0 0d       	add	r31, r0
    1a70:	b1 1d       	adc	r27, r1
    1a72:	aa 1f       	adc	r26, r26
    1a74:	64 9f       	mul	r22, r20
    1a76:	66 27       	eor	r22, r22
    1a78:	b0 0d       	add	r27, r0
    1a7a:	a1 1d       	adc	r26, r1
    1a7c:	66 1f       	adc	r22, r22
    1a7e:	82 9f       	mul	r24, r18
    1a80:	22 27       	eor	r18, r18
    1a82:	b0 0d       	add	r27, r0
    1a84:	a1 1d       	adc	r26, r1
    1a86:	62 1f       	adc	r22, r18
    1a88:	73 9f       	mul	r23, r19
    1a8a:	b0 0d       	add	r27, r0
    1a8c:	a1 1d       	adc	r26, r1
    1a8e:	62 1f       	adc	r22, r18
    1a90:	83 9f       	mul	r24, r19
    1a92:	a0 0d       	add	r26, r0
    1a94:	61 1d       	adc	r22, r1
    1a96:	22 1f       	adc	r18, r18
    1a98:	74 9f       	mul	r23, r20
    1a9a:	33 27       	eor	r19, r19
    1a9c:	a0 0d       	add	r26, r0
    1a9e:	61 1d       	adc	r22, r1
    1aa0:	23 1f       	adc	r18, r19
    1aa2:	84 9f       	mul	r24, r20
    1aa4:	60 0d       	add	r22, r0
    1aa6:	21 1d       	adc	r18, r1
    1aa8:	82 2f       	mov	r24, r18
    1aaa:	76 2f       	mov	r23, r22
    1aac:	6a 2f       	mov	r22, r26
    1aae:	11 24       	eor	r1, r1
    1ab0:	9f 57       	subi	r25, 0x7F	; 127
    1ab2:	50 40       	sbci	r21, 0x00	; 0
    1ab4:	9a f0       	brmi	.+38     	; 0x1adc <__mulsf3_pse+0x88>
    1ab6:	f1 f0       	breq	.+60     	; 0x1af4 <__mulsf3_pse+0xa0>
    1ab8:	88 23       	and	r24, r24
    1aba:	4a f0       	brmi	.+18     	; 0x1ace <__mulsf3_pse+0x7a>
    1abc:	ee 0f       	add	r30, r30
    1abe:	ff 1f       	adc	r31, r31
    1ac0:	bb 1f       	adc	r27, r27
    1ac2:	66 1f       	adc	r22, r22
    1ac4:	77 1f       	adc	r23, r23
    1ac6:	88 1f       	adc	r24, r24
    1ac8:	91 50       	subi	r25, 0x01	; 1
    1aca:	50 40       	sbci	r21, 0x00	; 0
    1acc:	a9 f7       	brne	.-22     	; 0x1ab8 <__mulsf3_pse+0x64>
    1ace:	9e 3f       	cpi	r25, 0xFE	; 254
    1ad0:	51 05       	cpc	r21, r1
    1ad2:	80 f0       	brcs	.+32     	; 0x1af4 <__mulsf3_pse+0xa0>
    1ad4:	0c 94 be 0c 	jmp	0x197c	; 0x197c <__fp_inf>
    1ad8:	0c 94 09 0d 	jmp	0x1a12	; 0x1a12 <__fp_szero>
    1adc:	5f 3f       	cpi	r21, 0xFF	; 255
    1ade:	e4 f3       	brlt	.-8      	; 0x1ad8 <__mulsf3_pse+0x84>
    1ae0:	98 3e       	cpi	r25, 0xE8	; 232
    1ae2:	d4 f3       	brlt	.-12     	; 0x1ad8 <__mulsf3_pse+0x84>
    1ae4:	86 95       	lsr	r24
    1ae6:	77 95       	ror	r23
    1ae8:	67 95       	ror	r22
    1aea:	b7 95       	ror	r27
    1aec:	f7 95       	ror	r31
    1aee:	e7 95       	ror	r30
    1af0:	9f 5f       	subi	r25, 0xFF	; 255
    1af2:	c1 f7       	brne	.-16     	; 0x1ae4 <__mulsf3_pse+0x90>
    1af4:	fe 2b       	or	r31, r30
    1af6:	88 0f       	add	r24, r24
    1af8:	91 1d       	adc	r25, r1
    1afa:	96 95       	lsr	r25
    1afc:	87 95       	ror	r24
    1afe:	97 f9       	bld	r25, 7
    1b00:	08 95       	ret

00001b02 <sprintf>:
    1b02:	ae e0       	ldi	r26, 0x0E	; 14
    1b04:	b0 e0       	ldi	r27, 0x00	; 0
    1b06:	e7 e8       	ldi	r30, 0x87	; 135
    1b08:	fd e0       	ldi	r31, 0x0D	; 13
    1b0a:	0c 94 30 10 	jmp	0x2060	; 0x2060 <__prologue_saves__+0x1c>
    1b0e:	0d 89       	ldd	r16, Y+21	; 0x15
    1b10:	1e 89       	ldd	r17, Y+22	; 0x16
    1b12:	86 e0       	ldi	r24, 0x06	; 6
    1b14:	8c 83       	std	Y+4, r24	; 0x04
    1b16:	1a 83       	std	Y+2, r17	; 0x02
    1b18:	09 83       	std	Y+1, r16	; 0x01
    1b1a:	8f ef       	ldi	r24, 0xFF	; 255
    1b1c:	9f e7       	ldi	r25, 0x7F	; 127
    1b1e:	9e 83       	std	Y+6, r25	; 0x06
    1b20:	8d 83       	std	Y+5, r24	; 0x05
    1b22:	ae 01       	movw	r20, r28
    1b24:	47 5e       	subi	r20, 0xE7	; 231
    1b26:	5f 4f       	sbci	r21, 0xFF	; 255
    1b28:	6f 89       	ldd	r22, Y+23	; 0x17
    1b2a:	78 8d       	ldd	r23, Y+24	; 0x18
    1b2c:	ce 01       	movw	r24, r28
    1b2e:	01 96       	adiw	r24, 0x01	; 1
    1b30:	0e 94 a4 0d 	call	0x1b48	; 0x1b48 <vfprintf>
    1b34:	2f 81       	ldd	r18, Y+7	; 0x07
    1b36:	38 85       	ldd	r19, Y+8	; 0x08
    1b38:	f8 01       	movw	r30, r16
    1b3a:	e2 0f       	add	r30, r18
    1b3c:	f3 1f       	adc	r31, r19
    1b3e:	10 82       	st	Z, r1
    1b40:	2e 96       	adiw	r28, 0x0e	; 14
    1b42:	e4 e0       	ldi	r30, 0x04	; 4
    1b44:	0c 94 4c 10 	jmp	0x2098	; 0x2098 <__epilogue_restores__+0x1c>

00001b48 <vfprintf>:
    1b48:	ac e0       	ldi	r26, 0x0C	; 12
    1b4a:	b0 e0       	ldi	r27, 0x00	; 0
    1b4c:	ea ea       	ldi	r30, 0xAA	; 170
    1b4e:	fd e0       	ldi	r31, 0x0D	; 13
    1b50:	0c 94 22 10 	jmp	0x2044	; 0x2044 <__prologue_saves__>
    1b54:	7c 01       	movw	r14, r24
    1b56:	6b 01       	movw	r12, r22
    1b58:	8a 01       	movw	r16, r20
    1b5a:	fc 01       	movw	r30, r24
    1b5c:	17 82       	std	Z+7, r1	; 0x07
    1b5e:	16 82       	std	Z+6, r1	; 0x06
    1b60:	83 81       	ldd	r24, Z+3	; 0x03
    1b62:	81 ff       	sbrs	r24, 1
    1b64:	bd c1       	rjmp	.+890    	; 0x1ee0 <vfprintf+0x398>
    1b66:	ce 01       	movw	r24, r28
    1b68:	01 96       	adiw	r24, 0x01	; 1
    1b6a:	4c 01       	movw	r8, r24
    1b6c:	f7 01       	movw	r30, r14
    1b6e:	93 81       	ldd	r25, Z+3	; 0x03
    1b70:	f6 01       	movw	r30, r12
    1b72:	93 fd       	sbrc	r25, 3
    1b74:	85 91       	lpm	r24, Z+
    1b76:	93 ff       	sbrs	r25, 3
    1b78:	81 91       	ld	r24, Z+
    1b7a:	6f 01       	movw	r12, r30
    1b7c:	88 23       	and	r24, r24
    1b7e:	09 f4       	brne	.+2      	; 0x1b82 <vfprintf+0x3a>
    1b80:	ab c1       	rjmp	.+854    	; 0x1ed8 <vfprintf+0x390>
    1b82:	85 32       	cpi	r24, 0x25	; 37
    1b84:	39 f4       	brne	.+14     	; 0x1b94 <vfprintf+0x4c>
    1b86:	93 fd       	sbrc	r25, 3
    1b88:	85 91       	lpm	r24, Z+
    1b8a:	93 ff       	sbrs	r25, 3
    1b8c:	81 91       	ld	r24, Z+
    1b8e:	6f 01       	movw	r12, r30
    1b90:	85 32       	cpi	r24, 0x25	; 37
    1b92:	29 f4       	brne	.+10     	; 0x1b9e <vfprintf+0x56>
    1b94:	b7 01       	movw	r22, r14
    1b96:	90 e0       	ldi	r25, 0x00	; 0
    1b98:	0e 94 8c 0f 	call	0x1f18	; 0x1f18 <fputc>
    1b9c:	e7 cf       	rjmp	.-50     	; 0x1b6c <vfprintf+0x24>
    1b9e:	51 2c       	mov	r5, r1
    1ba0:	31 2c       	mov	r3, r1
    1ba2:	20 e0       	ldi	r18, 0x00	; 0
    1ba4:	20 32       	cpi	r18, 0x20	; 32
    1ba6:	a0 f4       	brcc	.+40     	; 0x1bd0 <vfprintf+0x88>
    1ba8:	8b 32       	cpi	r24, 0x2B	; 43
    1baa:	69 f0       	breq	.+26     	; 0x1bc6 <vfprintf+0x7e>
    1bac:	30 f4       	brcc	.+12     	; 0x1bba <vfprintf+0x72>
    1bae:	80 32       	cpi	r24, 0x20	; 32
    1bb0:	59 f0       	breq	.+22     	; 0x1bc8 <vfprintf+0x80>
    1bb2:	83 32       	cpi	r24, 0x23	; 35
    1bb4:	69 f4       	brne	.+26     	; 0x1bd0 <vfprintf+0x88>
    1bb6:	20 61       	ori	r18, 0x10	; 16
    1bb8:	2c c0       	rjmp	.+88     	; 0x1c12 <vfprintf+0xca>
    1bba:	8d 32       	cpi	r24, 0x2D	; 45
    1bbc:	39 f0       	breq	.+14     	; 0x1bcc <vfprintf+0x84>
    1bbe:	80 33       	cpi	r24, 0x30	; 48
    1bc0:	39 f4       	brne	.+14     	; 0x1bd0 <vfprintf+0x88>
    1bc2:	21 60       	ori	r18, 0x01	; 1
    1bc4:	26 c0       	rjmp	.+76     	; 0x1c12 <vfprintf+0xca>
    1bc6:	22 60       	ori	r18, 0x02	; 2
    1bc8:	24 60       	ori	r18, 0x04	; 4
    1bca:	23 c0       	rjmp	.+70     	; 0x1c12 <vfprintf+0xca>
    1bcc:	28 60       	ori	r18, 0x08	; 8
    1bce:	21 c0       	rjmp	.+66     	; 0x1c12 <vfprintf+0xca>
    1bd0:	27 fd       	sbrc	r18, 7
    1bd2:	27 c0       	rjmp	.+78     	; 0x1c22 <vfprintf+0xda>
    1bd4:	30 ed       	ldi	r19, 0xD0	; 208
    1bd6:	38 0f       	add	r19, r24
    1bd8:	3a 30       	cpi	r19, 0x0A	; 10
    1bda:	78 f4       	brcc	.+30     	; 0x1bfa <vfprintf+0xb2>
    1bdc:	26 ff       	sbrs	r18, 6
    1bde:	06 c0       	rjmp	.+12     	; 0x1bec <vfprintf+0xa4>
    1be0:	fa e0       	ldi	r31, 0x0A	; 10
    1be2:	5f 9e       	mul	r5, r31
    1be4:	30 0d       	add	r19, r0
    1be6:	11 24       	eor	r1, r1
    1be8:	53 2e       	mov	r5, r19
    1bea:	13 c0       	rjmp	.+38     	; 0x1c12 <vfprintf+0xca>
    1bec:	8a e0       	ldi	r24, 0x0A	; 10
    1bee:	38 9e       	mul	r3, r24
    1bf0:	30 0d       	add	r19, r0
    1bf2:	11 24       	eor	r1, r1
    1bf4:	33 2e       	mov	r3, r19
    1bf6:	20 62       	ori	r18, 0x20	; 32
    1bf8:	0c c0       	rjmp	.+24     	; 0x1c12 <vfprintf+0xca>
    1bfa:	8e 32       	cpi	r24, 0x2E	; 46
    1bfc:	21 f4       	brne	.+8      	; 0x1c06 <vfprintf+0xbe>
    1bfe:	26 fd       	sbrc	r18, 6
    1c00:	6b c1       	rjmp	.+726    	; 0x1ed8 <vfprintf+0x390>
    1c02:	20 64       	ori	r18, 0x40	; 64
    1c04:	06 c0       	rjmp	.+12     	; 0x1c12 <vfprintf+0xca>
    1c06:	8c 36       	cpi	r24, 0x6C	; 108
    1c08:	11 f4       	brne	.+4      	; 0x1c0e <vfprintf+0xc6>
    1c0a:	20 68       	ori	r18, 0x80	; 128
    1c0c:	02 c0       	rjmp	.+4      	; 0x1c12 <vfprintf+0xca>
    1c0e:	88 36       	cpi	r24, 0x68	; 104
    1c10:	41 f4       	brne	.+16     	; 0x1c22 <vfprintf+0xda>
    1c12:	f6 01       	movw	r30, r12
    1c14:	93 fd       	sbrc	r25, 3
    1c16:	85 91       	lpm	r24, Z+
    1c18:	93 ff       	sbrs	r25, 3
    1c1a:	81 91       	ld	r24, Z+
    1c1c:	6f 01       	movw	r12, r30
    1c1e:	81 11       	cpse	r24, r1
    1c20:	c1 cf       	rjmp	.-126    	; 0x1ba4 <vfprintf+0x5c>
    1c22:	98 2f       	mov	r25, r24
    1c24:	9f 7d       	andi	r25, 0xDF	; 223
    1c26:	95 54       	subi	r25, 0x45	; 69
    1c28:	93 30       	cpi	r25, 0x03	; 3
    1c2a:	28 f4       	brcc	.+10     	; 0x1c36 <vfprintf+0xee>
    1c2c:	0c 5f       	subi	r16, 0xFC	; 252
    1c2e:	1f 4f       	sbci	r17, 0xFF	; 255
    1c30:	ff e3       	ldi	r31, 0x3F	; 63
    1c32:	f9 83       	std	Y+1, r31	; 0x01
    1c34:	0d c0       	rjmp	.+26     	; 0x1c50 <vfprintf+0x108>
    1c36:	83 36       	cpi	r24, 0x63	; 99
    1c38:	31 f0       	breq	.+12     	; 0x1c46 <vfprintf+0xfe>
    1c3a:	83 37       	cpi	r24, 0x73	; 115
    1c3c:	71 f0       	breq	.+28     	; 0x1c5a <vfprintf+0x112>
    1c3e:	83 35       	cpi	r24, 0x53	; 83
    1c40:	09 f0       	breq	.+2      	; 0x1c44 <vfprintf+0xfc>
    1c42:	5b c0       	rjmp	.+182    	; 0x1cfa <vfprintf+0x1b2>
    1c44:	22 c0       	rjmp	.+68     	; 0x1c8a <vfprintf+0x142>
    1c46:	f8 01       	movw	r30, r16
    1c48:	80 81       	ld	r24, Z
    1c4a:	89 83       	std	Y+1, r24	; 0x01
    1c4c:	0e 5f       	subi	r16, 0xFE	; 254
    1c4e:	1f 4f       	sbci	r17, 0xFF	; 255
    1c50:	44 24       	eor	r4, r4
    1c52:	43 94       	inc	r4
    1c54:	51 2c       	mov	r5, r1
    1c56:	54 01       	movw	r10, r8
    1c58:	15 c0       	rjmp	.+42     	; 0x1c84 <vfprintf+0x13c>
    1c5a:	38 01       	movw	r6, r16
    1c5c:	f2 e0       	ldi	r31, 0x02	; 2
    1c5e:	6f 0e       	add	r6, r31
    1c60:	71 1c       	adc	r7, r1
    1c62:	f8 01       	movw	r30, r16
    1c64:	a0 80       	ld	r10, Z
    1c66:	b1 80       	ldd	r11, Z+1	; 0x01
    1c68:	26 ff       	sbrs	r18, 6
    1c6a:	03 c0       	rjmp	.+6      	; 0x1c72 <vfprintf+0x12a>
    1c6c:	65 2d       	mov	r22, r5
    1c6e:	70 e0       	ldi	r23, 0x00	; 0
    1c70:	02 c0       	rjmp	.+4      	; 0x1c76 <vfprintf+0x12e>
    1c72:	6f ef       	ldi	r22, 0xFF	; 255
    1c74:	7f ef       	ldi	r23, 0xFF	; 255
    1c76:	c5 01       	movw	r24, r10
    1c78:	2c 87       	std	Y+12, r18	; 0x0c
    1c7a:	0e 94 81 0f 	call	0x1f02	; 0x1f02 <strnlen>
    1c7e:	2c 01       	movw	r4, r24
    1c80:	83 01       	movw	r16, r6
    1c82:	2c 85       	ldd	r18, Y+12	; 0x0c
    1c84:	2f 77       	andi	r18, 0x7F	; 127
    1c86:	22 2e       	mov	r2, r18
    1c88:	17 c0       	rjmp	.+46     	; 0x1cb8 <vfprintf+0x170>
    1c8a:	38 01       	movw	r6, r16
    1c8c:	f2 e0       	ldi	r31, 0x02	; 2
    1c8e:	6f 0e       	add	r6, r31
    1c90:	71 1c       	adc	r7, r1
    1c92:	f8 01       	movw	r30, r16
    1c94:	a0 80       	ld	r10, Z
    1c96:	b1 80       	ldd	r11, Z+1	; 0x01
    1c98:	26 ff       	sbrs	r18, 6
    1c9a:	03 c0       	rjmp	.+6      	; 0x1ca2 <vfprintf+0x15a>
    1c9c:	65 2d       	mov	r22, r5
    1c9e:	70 e0       	ldi	r23, 0x00	; 0
    1ca0:	02 c0       	rjmp	.+4      	; 0x1ca6 <vfprintf+0x15e>
    1ca2:	6f ef       	ldi	r22, 0xFF	; 255
    1ca4:	7f ef       	ldi	r23, 0xFF	; 255
    1ca6:	c5 01       	movw	r24, r10
    1ca8:	2c 87       	std	Y+12, r18	; 0x0c
    1caa:	0e 94 76 0f 	call	0x1eec	; 0x1eec <strnlen_P>
    1cae:	2c 01       	movw	r4, r24
    1cb0:	2c 85       	ldd	r18, Y+12	; 0x0c
    1cb2:	20 68       	ori	r18, 0x80	; 128
    1cb4:	22 2e       	mov	r2, r18
    1cb6:	83 01       	movw	r16, r6
    1cb8:	23 fc       	sbrc	r2, 3
    1cba:	1b c0       	rjmp	.+54     	; 0x1cf2 <vfprintf+0x1aa>
    1cbc:	83 2d       	mov	r24, r3
    1cbe:	90 e0       	ldi	r25, 0x00	; 0
    1cc0:	48 16       	cp	r4, r24
    1cc2:	59 06       	cpc	r5, r25
    1cc4:	b0 f4       	brcc	.+44     	; 0x1cf2 <vfprintf+0x1aa>
    1cc6:	b7 01       	movw	r22, r14
    1cc8:	80 e2       	ldi	r24, 0x20	; 32
    1cca:	90 e0       	ldi	r25, 0x00	; 0
    1ccc:	0e 94 8c 0f 	call	0x1f18	; 0x1f18 <fputc>
    1cd0:	3a 94       	dec	r3
    1cd2:	f4 cf       	rjmp	.-24     	; 0x1cbc <vfprintf+0x174>
    1cd4:	f5 01       	movw	r30, r10
    1cd6:	27 fc       	sbrc	r2, 7
    1cd8:	85 91       	lpm	r24, Z+
    1cda:	27 fe       	sbrs	r2, 7
    1cdc:	81 91       	ld	r24, Z+
    1cde:	5f 01       	movw	r10, r30
    1ce0:	b7 01       	movw	r22, r14
    1ce2:	90 e0       	ldi	r25, 0x00	; 0
    1ce4:	0e 94 8c 0f 	call	0x1f18	; 0x1f18 <fputc>
    1ce8:	31 10       	cpse	r3, r1
    1cea:	3a 94       	dec	r3
    1cec:	f1 e0       	ldi	r31, 0x01	; 1
    1cee:	4f 1a       	sub	r4, r31
    1cf0:	51 08       	sbc	r5, r1
    1cf2:	41 14       	cp	r4, r1
    1cf4:	51 04       	cpc	r5, r1
    1cf6:	71 f7       	brne	.-36     	; 0x1cd4 <vfprintf+0x18c>
    1cf8:	e5 c0       	rjmp	.+458    	; 0x1ec4 <vfprintf+0x37c>
    1cfa:	84 36       	cpi	r24, 0x64	; 100
    1cfc:	11 f0       	breq	.+4      	; 0x1d02 <vfprintf+0x1ba>
    1cfe:	89 36       	cpi	r24, 0x69	; 105
    1d00:	39 f5       	brne	.+78     	; 0x1d50 <vfprintf+0x208>
    1d02:	f8 01       	movw	r30, r16
    1d04:	27 ff       	sbrs	r18, 7
    1d06:	07 c0       	rjmp	.+14     	; 0x1d16 <vfprintf+0x1ce>
    1d08:	60 81       	ld	r22, Z
    1d0a:	71 81       	ldd	r23, Z+1	; 0x01
    1d0c:	82 81       	ldd	r24, Z+2	; 0x02
    1d0e:	93 81       	ldd	r25, Z+3	; 0x03
    1d10:	0c 5f       	subi	r16, 0xFC	; 252
    1d12:	1f 4f       	sbci	r17, 0xFF	; 255
    1d14:	08 c0       	rjmp	.+16     	; 0x1d26 <vfprintf+0x1de>
    1d16:	60 81       	ld	r22, Z
    1d18:	71 81       	ldd	r23, Z+1	; 0x01
    1d1a:	07 2e       	mov	r0, r23
    1d1c:	00 0c       	add	r0, r0
    1d1e:	88 0b       	sbc	r24, r24
    1d20:	99 0b       	sbc	r25, r25
    1d22:	0e 5f       	subi	r16, 0xFE	; 254
    1d24:	1f 4f       	sbci	r17, 0xFF	; 255
    1d26:	2f 76       	andi	r18, 0x6F	; 111
    1d28:	72 2e       	mov	r7, r18
    1d2a:	97 ff       	sbrs	r25, 7
    1d2c:	09 c0       	rjmp	.+18     	; 0x1d40 <vfprintf+0x1f8>
    1d2e:	90 95       	com	r25
    1d30:	80 95       	com	r24
    1d32:	70 95       	com	r23
    1d34:	61 95       	neg	r22
    1d36:	7f 4f       	sbci	r23, 0xFF	; 255
    1d38:	8f 4f       	sbci	r24, 0xFF	; 255
    1d3a:	9f 4f       	sbci	r25, 0xFF	; 255
    1d3c:	20 68       	ori	r18, 0x80	; 128
    1d3e:	72 2e       	mov	r7, r18
    1d40:	2a e0       	ldi	r18, 0x0A	; 10
    1d42:	30 e0       	ldi	r19, 0x00	; 0
    1d44:	a4 01       	movw	r20, r8
    1d46:	0e 94 c4 0f 	call	0x1f88	; 0x1f88 <__ultoa_invert>
    1d4a:	a8 2e       	mov	r10, r24
    1d4c:	a8 18       	sub	r10, r8
    1d4e:	44 c0       	rjmp	.+136    	; 0x1dd8 <vfprintf+0x290>
    1d50:	85 37       	cpi	r24, 0x75	; 117
    1d52:	29 f4       	brne	.+10     	; 0x1d5e <vfprintf+0x216>
    1d54:	2f 7e       	andi	r18, 0xEF	; 239
    1d56:	b2 2e       	mov	r11, r18
    1d58:	2a e0       	ldi	r18, 0x0A	; 10
    1d5a:	30 e0       	ldi	r19, 0x00	; 0
    1d5c:	25 c0       	rjmp	.+74     	; 0x1da8 <vfprintf+0x260>
    1d5e:	f2 2f       	mov	r31, r18
    1d60:	f9 7f       	andi	r31, 0xF9	; 249
    1d62:	bf 2e       	mov	r11, r31
    1d64:	8f 36       	cpi	r24, 0x6F	; 111
    1d66:	c1 f0       	breq	.+48     	; 0x1d98 <vfprintf+0x250>
    1d68:	18 f4       	brcc	.+6      	; 0x1d70 <vfprintf+0x228>
    1d6a:	88 35       	cpi	r24, 0x58	; 88
    1d6c:	79 f0       	breq	.+30     	; 0x1d8c <vfprintf+0x244>
    1d6e:	b4 c0       	rjmp	.+360    	; 0x1ed8 <vfprintf+0x390>
    1d70:	80 37       	cpi	r24, 0x70	; 112
    1d72:	19 f0       	breq	.+6      	; 0x1d7a <vfprintf+0x232>
    1d74:	88 37       	cpi	r24, 0x78	; 120
    1d76:	21 f0       	breq	.+8      	; 0x1d80 <vfprintf+0x238>
    1d78:	af c0       	rjmp	.+350    	; 0x1ed8 <vfprintf+0x390>
    1d7a:	2f 2f       	mov	r18, r31
    1d7c:	20 61       	ori	r18, 0x10	; 16
    1d7e:	b2 2e       	mov	r11, r18
    1d80:	b4 fe       	sbrs	r11, 4
    1d82:	0d c0       	rjmp	.+26     	; 0x1d9e <vfprintf+0x256>
    1d84:	8b 2d       	mov	r24, r11
    1d86:	84 60       	ori	r24, 0x04	; 4
    1d88:	b8 2e       	mov	r11, r24
    1d8a:	09 c0       	rjmp	.+18     	; 0x1d9e <vfprintf+0x256>
    1d8c:	24 ff       	sbrs	r18, 4
    1d8e:	0a c0       	rjmp	.+20     	; 0x1da4 <vfprintf+0x25c>
    1d90:	9f 2f       	mov	r25, r31
    1d92:	96 60       	ori	r25, 0x06	; 6
    1d94:	b9 2e       	mov	r11, r25
    1d96:	06 c0       	rjmp	.+12     	; 0x1da4 <vfprintf+0x25c>
    1d98:	28 e0       	ldi	r18, 0x08	; 8
    1d9a:	30 e0       	ldi	r19, 0x00	; 0
    1d9c:	05 c0       	rjmp	.+10     	; 0x1da8 <vfprintf+0x260>
    1d9e:	20 e1       	ldi	r18, 0x10	; 16
    1da0:	30 e0       	ldi	r19, 0x00	; 0
    1da2:	02 c0       	rjmp	.+4      	; 0x1da8 <vfprintf+0x260>
    1da4:	20 e1       	ldi	r18, 0x10	; 16
    1da6:	32 e0       	ldi	r19, 0x02	; 2
    1da8:	f8 01       	movw	r30, r16
    1daa:	b7 fe       	sbrs	r11, 7
    1dac:	07 c0       	rjmp	.+14     	; 0x1dbc <vfprintf+0x274>
    1dae:	60 81       	ld	r22, Z
    1db0:	71 81       	ldd	r23, Z+1	; 0x01
    1db2:	82 81       	ldd	r24, Z+2	; 0x02
    1db4:	93 81       	ldd	r25, Z+3	; 0x03
    1db6:	0c 5f       	subi	r16, 0xFC	; 252
    1db8:	1f 4f       	sbci	r17, 0xFF	; 255
    1dba:	06 c0       	rjmp	.+12     	; 0x1dc8 <vfprintf+0x280>
    1dbc:	60 81       	ld	r22, Z
    1dbe:	71 81       	ldd	r23, Z+1	; 0x01
    1dc0:	80 e0       	ldi	r24, 0x00	; 0
    1dc2:	90 e0       	ldi	r25, 0x00	; 0
    1dc4:	0e 5f       	subi	r16, 0xFE	; 254
    1dc6:	1f 4f       	sbci	r17, 0xFF	; 255
    1dc8:	a4 01       	movw	r20, r8
    1dca:	0e 94 c4 0f 	call	0x1f88	; 0x1f88 <__ultoa_invert>
    1dce:	a8 2e       	mov	r10, r24
    1dd0:	a8 18       	sub	r10, r8
    1dd2:	fb 2d       	mov	r31, r11
    1dd4:	ff 77       	andi	r31, 0x7F	; 127
    1dd6:	7f 2e       	mov	r7, r31
    1dd8:	76 fe       	sbrs	r7, 6
    1dda:	0b c0       	rjmp	.+22     	; 0x1df2 <vfprintf+0x2aa>
    1ddc:	37 2d       	mov	r19, r7
    1dde:	3e 7f       	andi	r19, 0xFE	; 254
    1de0:	a5 14       	cp	r10, r5
    1de2:	50 f4       	brcc	.+20     	; 0x1df8 <vfprintf+0x2b0>
    1de4:	74 fe       	sbrs	r7, 4
    1de6:	0a c0       	rjmp	.+20     	; 0x1dfc <vfprintf+0x2b4>
    1de8:	72 fc       	sbrc	r7, 2
    1dea:	08 c0       	rjmp	.+16     	; 0x1dfc <vfprintf+0x2b4>
    1dec:	37 2d       	mov	r19, r7
    1dee:	3e 7e       	andi	r19, 0xEE	; 238
    1df0:	05 c0       	rjmp	.+10     	; 0x1dfc <vfprintf+0x2b4>
    1df2:	ba 2c       	mov	r11, r10
    1df4:	37 2d       	mov	r19, r7
    1df6:	03 c0       	rjmp	.+6      	; 0x1dfe <vfprintf+0x2b6>
    1df8:	ba 2c       	mov	r11, r10
    1dfa:	01 c0       	rjmp	.+2      	; 0x1dfe <vfprintf+0x2b6>
    1dfc:	b5 2c       	mov	r11, r5
    1dfe:	34 ff       	sbrs	r19, 4
    1e00:	0d c0       	rjmp	.+26     	; 0x1e1c <vfprintf+0x2d4>
    1e02:	fe 01       	movw	r30, r28
    1e04:	ea 0d       	add	r30, r10
    1e06:	f1 1d       	adc	r31, r1
    1e08:	80 81       	ld	r24, Z
    1e0a:	80 33       	cpi	r24, 0x30	; 48
    1e0c:	11 f4       	brne	.+4      	; 0x1e12 <vfprintf+0x2ca>
    1e0e:	39 7e       	andi	r19, 0xE9	; 233
    1e10:	09 c0       	rjmp	.+18     	; 0x1e24 <vfprintf+0x2dc>
    1e12:	32 ff       	sbrs	r19, 2
    1e14:	06 c0       	rjmp	.+12     	; 0x1e22 <vfprintf+0x2da>
    1e16:	b3 94       	inc	r11
    1e18:	b3 94       	inc	r11
    1e1a:	04 c0       	rjmp	.+8      	; 0x1e24 <vfprintf+0x2dc>
    1e1c:	83 2f       	mov	r24, r19
    1e1e:	86 78       	andi	r24, 0x86	; 134
    1e20:	09 f0       	breq	.+2      	; 0x1e24 <vfprintf+0x2dc>
    1e22:	b3 94       	inc	r11
    1e24:	33 fd       	sbrc	r19, 3
    1e26:	13 c0       	rjmp	.+38     	; 0x1e4e <vfprintf+0x306>
    1e28:	30 ff       	sbrs	r19, 0
    1e2a:	06 c0       	rjmp	.+12     	; 0x1e38 <vfprintf+0x2f0>
    1e2c:	5a 2c       	mov	r5, r10
    1e2e:	b3 14       	cp	r11, r3
    1e30:	18 f4       	brcc	.+6      	; 0x1e38 <vfprintf+0x2f0>
    1e32:	53 0c       	add	r5, r3
    1e34:	5b 18       	sub	r5, r11
    1e36:	b3 2c       	mov	r11, r3
    1e38:	b3 14       	cp	r11, r3
    1e3a:	68 f4       	brcc	.+26     	; 0x1e56 <vfprintf+0x30e>
    1e3c:	b7 01       	movw	r22, r14
    1e3e:	80 e2       	ldi	r24, 0x20	; 32
    1e40:	90 e0       	ldi	r25, 0x00	; 0
    1e42:	3c 87       	std	Y+12, r19	; 0x0c
    1e44:	0e 94 8c 0f 	call	0x1f18	; 0x1f18 <fputc>
    1e48:	b3 94       	inc	r11
    1e4a:	3c 85       	ldd	r19, Y+12	; 0x0c
    1e4c:	f5 cf       	rjmp	.-22     	; 0x1e38 <vfprintf+0x2f0>
    1e4e:	b3 14       	cp	r11, r3
    1e50:	10 f4       	brcc	.+4      	; 0x1e56 <vfprintf+0x30e>
    1e52:	3b 18       	sub	r3, r11
    1e54:	01 c0       	rjmp	.+2      	; 0x1e58 <vfprintf+0x310>
    1e56:	31 2c       	mov	r3, r1
    1e58:	34 ff       	sbrs	r19, 4
    1e5a:	12 c0       	rjmp	.+36     	; 0x1e80 <vfprintf+0x338>
    1e5c:	b7 01       	movw	r22, r14
    1e5e:	80 e3       	ldi	r24, 0x30	; 48
    1e60:	90 e0       	ldi	r25, 0x00	; 0
    1e62:	3c 87       	std	Y+12, r19	; 0x0c
    1e64:	0e 94 8c 0f 	call	0x1f18	; 0x1f18 <fputc>
    1e68:	3c 85       	ldd	r19, Y+12	; 0x0c
    1e6a:	32 ff       	sbrs	r19, 2
    1e6c:	17 c0       	rjmp	.+46     	; 0x1e9c <vfprintf+0x354>
    1e6e:	31 fd       	sbrc	r19, 1
    1e70:	03 c0       	rjmp	.+6      	; 0x1e78 <vfprintf+0x330>
    1e72:	88 e7       	ldi	r24, 0x78	; 120
    1e74:	90 e0       	ldi	r25, 0x00	; 0
    1e76:	02 c0       	rjmp	.+4      	; 0x1e7c <vfprintf+0x334>
    1e78:	88 e5       	ldi	r24, 0x58	; 88
    1e7a:	90 e0       	ldi	r25, 0x00	; 0
    1e7c:	b7 01       	movw	r22, r14
    1e7e:	0c c0       	rjmp	.+24     	; 0x1e98 <vfprintf+0x350>
    1e80:	83 2f       	mov	r24, r19
    1e82:	86 78       	andi	r24, 0x86	; 134
    1e84:	59 f0       	breq	.+22     	; 0x1e9c <vfprintf+0x354>
    1e86:	31 ff       	sbrs	r19, 1
    1e88:	02 c0       	rjmp	.+4      	; 0x1e8e <vfprintf+0x346>
    1e8a:	8b e2       	ldi	r24, 0x2B	; 43
    1e8c:	01 c0       	rjmp	.+2      	; 0x1e90 <vfprintf+0x348>
    1e8e:	80 e2       	ldi	r24, 0x20	; 32
    1e90:	37 fd       	sbrc	r19, 7
    1e92:	8d e2       	ldi	r24, 0x2D	; 45
    1e94:	b7 01       	movw	r22, r14
    1e96:	90 e0       	ldi	r25, 0x00	; 0
    1e98:	0e 94 8c 0f 	call	0x1f18	; 0x1f18 <fputc>
    1e9c:	a5 14       	cp	r10, r5
    1e9e:	38 f4       	brcc	.+14     	; 0x1eae <vfprintf+0x366>
    1ea0:	b7 01       	movw	r22, r14
    1ea2:	80 e3       	ldi	r24, 0x30	; 48
    1ea4:	90 e0       	ldi	r25, 0x00	; 0
    1ea6:	0e 94 8c 0f 	call	0x1f18	; 0x1f18 <fputc>
    1eaa:	5a 94       	dec	r5
    1eac:	f7 cf       	rjmp	.-18     	; 0x1e9c <vfprintf+0x354>
    1eae:	aa 94       	dec	r10
    1eb0:	f4 01       	movw	r30, r8
    1eb2:	ea 0d       	add	r30, r10
    1eb4:	f1 1d       	adc	r31, r1
    1eb6:	80 81       	ld	r24, Z
    1eb8:	b7 01       	movw	r22, r14
    1eba:	90 e0       	ldi	r25, 0x00	; 0
    1ebc:	0e 94 8c 0f 	call	0x1f18	; 0x1f18 <fputc>
    1ec0:	a1 10       	cpse	r10, r1
    1ec2:	f5 cf       	rjmp	.-22     	; 0x1eae <vfprintf+0x366>
    1ec4:	33 20       	and	r3, r3
    1ec6:	09 f4       	brne	.+2      	; 0x1eca <vfprintf+0x382>
    1ec8:	51 ce       	rjmp	.-862    	; 0x1b6c <vfprintf+0x24>
    1eca:	b7 01       	movw	r22, r14
    1ecc:	80 e2       	ldi	r24, 0x20	; 32
    1ece:	90 e0       	ldi	r25, 0x00	; 0
    1ed0:	0e 94 8c 0f 	call	0x1f18	; 0x1f18 <fputc>
    1ed4:	3a 94       	dec	r3
    1ed6:	f6 cf       	rjmp	.-20     	; 0x1ec4 <vfprintf+0x37c>
    1ed8:	f7 01       	movw	r30, r14
    1eda:	86 81       	ldd	r24, Z+6	; 0x06
    1edc:	97 81       	ldd	r25, Z+7	; 0x07
    1ede:	02 c0       	rjmp	.+4      	; 0x1ee4 <vfprintf+0x39c>
    1ee0:	8f ef       	ldi	r24, 0xFF	; 255
    1ee2:	9f ef       	ldi	r25, 0xFF	; 255
    1ee4:	2c 96       	adiw	r28, 0x0c	; 12
    1ee6:	e2 e1       	ldi	r30, 0x12	; 18
    1ee8:	0c 94 3e 10 	jmp	0x207c	; 0x207c <__epilogue_restores__>

00001eec <strnlen_P>:
    1eec:	fc 01       	movw	r30, r24
    1eee:	05 90       	lpm	r0, Z+
    1ef0:	61 50       	subi	r22, 0x01	; 1
    1ef2:	70 40       	sbci	r23, 0x00	; 0
    1ef4:	01 10       	cpse	r0, r1
    1ef6:	d8 f7       	brcc	.-10     	; 0x1eee <strnlen_P+0x2>
    1ef8:	80 95       	com	r24
    1efa:	90 95       	com	r25
    1efc:	8e 0f       	add	r24, r30
    1efe:	9f 1f       	adc	r25, r31
    1f00:	08 95       	ret

00001f02 <strnlen>:
    1f02:	fc 01       	movw	r30, r24
    1f04:	61 50       	subi	r22, 0x01	; 1
    1f06:	70 40       	sbci	r23, 0x00	; 0
    1f08:	01 90       	ld	r0, Z+
    1f0a:	01 10       	cpse	r0, r1
    1f0c:	d8 f7       	brcc	.-10     	; 0x1f04 <strnlen+0x2>
    1f0e:	80 95       	com	r24
    1f10:	90 95       	com	r25
    1f12:	8e 0f       	add	r24, r30
    1f14:	9f 1f       	adc	r25, r31
    1f16:	08 95       	ret

00001f18 <fputc>:
    1f18:	0f 93       	push	r16
    1f1a:	1f 93       	push	r17
    1f1c:	cf 93       	push	r28
    1f1e:	df 93       	push	r29
    1f20:	fb 01       	movw	r30, r22
    1f22:	23 81       	ldd	r18, Z+3	; 0x03
    1f24:	21 fd       	sbrc	r18, 1
    1f26:	03 c0       	rjmp	.+6      	; 0x1f2e <fputc+0x16>
    1f28:	8f ef       	ldi	r24, 0xFF	; 255
    1f2a:	9f ef       	ldi	r25, 0xFF	; 255
    1f2c:	28 c0       	rjmp	.+80     	; 0x1f7e <fputc+0x66>
    1f2e:	22 ff       	sbrs	r18, 2
    1f30:	16 c0       	rjmp	.+44     	; 0x1f5e <fputc+0x46>
    1f32:	46 81       	ldd	r20, Z+6	; 0x06
    1f34:	57 81       	ldd	r21, Z+7	; 0x07
    1f36:	24 81       	ldd	r18, Z+4	; 0x04
    1f38:	35 81       	ldd	r19, Z+5	; 0x05
    1f3a:	42 17       	cp	r20, r18
    1f3c:	53 07       	cpc	r21, r19
    1f3e:	44 f4       	brge	.+16     	; 0x1f50 <fputc+0x38>
    1f40:	a0 81       	ld	r26, Z
    1f42:	b1 81       	ldd	r27, Z+1	; 0x01
    1f44:	9d 01       	movw	r18, r26
    1f46:	2f 5f       	subi	r18, 0xFF	; 255
    1f48:	3f 4f       	sbci	r19, 0xFF	; 255
    1f4a:	31 83       	std	Z+1, r19	; 0x01
    1f4c:	20 83       	st	Z, r18
    1f4e:	8c 93       	st	X, r24
    1f50:	26 81       	ldd	r18, Z+6	; 0x06
    1f52:	37 81       	ldd	r19, Z+7	; 0x07
    1f54:	2f 5f       	subi	r18, 0xFF	; 255
    1f56:	3f 4f       	sbci	r19, 0xFF	; 255
    1f58:	37 83       	std	Z+7, r19	; 0x07
    1f5a:	26 83       	std	Z+6, r18	; 0x06
    1f5c:	10 c0       	rjmp	.+32     	; 0x1f7e <fputc+0x66>
    1f5e:	eb 01       	movw	r28, r22
    1f60:	09 2f       	mov	r16, r25
    1f62:	18 2f       	mov	r17, r24
    1f64:	00 84       	ldd	r0, Z+8	; 0x08
    1f66:	f1 85       	ldd	r31, Z+9	; 0x09
    1f68:	e0 2d       	mov	r30, r0
    1f6a:	09 95       	icall
    1f6c:	89 2b       	or	r24, r25
    1f6e:	e1 f6       	brne	.-72     	; 0x1f28 <fputc+0x10>
    1f70:	8e 81       	ldd	r24, Y+6	; 0x06
    1f72:	9f 81       	ldd	r25, Y+7	; 0x07
    1f74:	01 96       	adiw	r24, 0x01	; 1
    1f76:	9f 83       	std	Y+7, r25	; 0x07
    1f78:	8e 83       	std	Y+6, r24	; 0x06
    1f7a:	81 2f       	mov	r24, r17
    1f7c:	90 2f       	mov	r25, r16
    1f7e:	df 91       	pop	r29
    1f80:	cf 91       	pop	r28
    1f82:	1f 91       	pop	r17
    1f84:	0f 91       	pop	r16
    1f86:	08 95       	ret

00001f88 <__ultoa_invert>:
    1f88:	fa 01       	movw	r30, r20
    1f8a:	aa 27       	eor	r26, r26
    1f8c:	28 30       	cpi	r18, 0x08	; 8
    1f8e:	51 f1       	breq	.+84     	; 0x1fe4 <__ultoa_invert+0x5c>
    1f90:	20 31       	cpi	r18, 0x10	; 16
    1f92:	81 f1       	breq	.+96     	; 0x1ff4 <__ultoa_invert+0x6c>
    1f94:	e8 94       	clt
    1f96:	6f 93       	push	r22
    1f98:	6e 7f       	andi	r22, 0xFE	; 254
    1f9a:	6e 5f       	subi	r22, 0xFE	; 254
    1f9c:	7f 4f       	sbci	r23, 0xFF	; 255
    1f9e:	8f 4f       	sbci	r24, 0xFF	; 255
    1fa0:	9f 4f       	sbci	r25, 0xFF	; 255
    1fa2:	af 4f       	sbci	r26, 0xFF	; 255
    1fa4:	b1 e0       	ldi	r27, 0x01	; 1
    1fa6:	3e d0       	rcall	.+124    	; 0x2024 <__ultoa_invert+0x9c>
    1fa8:	b4 e0       	ldi	r27, 0x04	; 4
    1faa:	3c d0       	rcall	.+120    	; 0x2024 <__ultoa_invert+0x9c>
    1fac:	67 0f       	add	r22, r23
    1fae:	78 1f       	adc	r23, r24
    1fb0:	89 1f       	adc	r24, r25
    1fb2:	9a 1f       	adc	r25, r26
    1fb4:	a1 1d       	adc	r26, r1
    1fb6:	68 0f       	add	r22, r24
    1fb8:	79 1f       	adc	r23, r25
    1fba:	8a 1f       	adc	r24, r26
    1fbc:	91 1d       	adc	r25, r1
    1fbe:	a1 1d       	adc	r26, r1
    1fc0:	6a 0f       	add	r22, r26
    1fc2:	71 1d       	adc	r23, r1
    1fc4:	81 1d       	adc	r24, r1
    1fc6:	91 1d       	adc	r25, r1
    1fc8:	a1 1d       	adc	r26, r1
    1fca:	20 d0       	rcall	.+64     	; 0x200c <__ultoa_invert+0x84>
    1fcc:	09 f4       	brne	.+2      	; 0x1fd0 <__ultoa_invert+0x48>
    1fce:	68 94       	set
    1fd0:	3f 91       	pop	r19
    1fd2:	2a e0       	ldi	r18, 0x0A	; 10
    1fd4:	26 9f       	mul	r18, r22
    1fd6:	11 24       	eor	r1, r1
    1fd8:	30 19       	sub	r19, r0
    1fda:	30 5d       	subi	r19, 0xD0	; 208
    1fdc:	31 93       	st	Z+, r19
    1fde:	de f6       	brtc	.-74     	; 0x1f96 <__ultoa_invert+0xe>
    1fe0:	cf 01       	movw	r24, r30
    1fe2:	08 95       	ret
    1fe4:	46 2f       	mov	r20, r22
    1fe6:	47 70       	andi	r20, 0x07	; 7
    1fe8:	40 5d       	subi	r20, 0xD0	; 208
    1fea:	41 93       	st	Z+, r20
    1fec:	b3 e0       	ldi	r27, 0x03	; 3
    1fee:	0f d0       	rcall	.+30     	; 0x200e <__ultoa_invert+0x86>
    1ff0:	c9 f7       	brne	.-14     	; 0x1fe4 <__ultoa_invert+0x5c>
    1ff2:	f6 cf       	rjmp	.-20     	; 0x1fe0 <__ultoa_invert+0x58>
    1ff4:	46 2f       	mov	r20, r22
    1ff6:	4f 70       	andi	r20, 0x0F	; 15
    1ff8:	40 5d       	subi	r20, 0xD0	; 208
    1ffa:	4a 33       	cpi	r20, 0x3A	; 58
    1ffc:	18 f0       	brcs	.+6      	; 0x2004 <__ultoa_invert+0x7c>
    1ffe:	49 5d       	subi	r20, 0xD9	; 217
    2000:	31 fd       	sbrc	r19, 1
    2002:	40 52       	subi	r20, 0x20	; 32
    2004:	41 93       	st	Z+, r20
    2006:	02 d0       	rcall	.+4      	; 0x200c <__ultoa_invert+0x84>
    2008:	a9 f7       	brne	.-22     	; 0x1ff4 <__ultoa_invert+0x6c>
    200a:	ea cf       	rjmp	.-44     	; 0x1fe0 <__ultoa_invert+0x58>
    200c:	b4 e0       	ldi	r27, 0x04	; 4
    200e:	a6 95       	lsr	r26
    2010:	97 95       	ror	r25
    2012:	87 95       	ror	r24
    2014:	77 95       	ror	r23
    2016:	67 95       	ror	r22
    2018:	ba 95       	dec	r27
    201a:	c9 f7       	brne	.-14     	; 0x200e <__ultoa_invert+0x86>
    201c:	00 97       	sbiw	r24, 0x00	; 0
    201e:	61 05       	cpc	r22, r1
    2020:	71 05       	cpc	r23, r1
    2022:	08 95       	ret
    2024:	9b 01       	movw	r18, r22
    2026:	ac 01       	movw	r20, r24
    2028:	0a 2e       	mov	r0, r26
    202a:	06 94       	lsr	r0
    202c:	57 95       	ror	r21
    202e:	47 95       	ror	r20
    2030:	37 95       	ror	r19
    2032:	27 95       	ror	r18
    2034:	ba 95       	dec	r27
    2036:	c9 f7       	brne	.-14     	; 0x202a <__ultoa_invert+0xa2>
    2038:	62 0f       	add	r22, r18
    203a:	73 1f       	adc	r23, r19
    203c:	84 1f       	adc	r24, r20
    203e:	95 1f       	adc	r25, r21
    2040:	a0 1d       	adc	r26, r0
    2042:	08 95       	ret

00002044 <__prologue_saves__>:
    2044:	2f 92       	push	r2
    2046:	3f 92       	push	r3
    2048:	4f 92       	push	r4
    204a:	5f 92       	push	r5
    204c:	6f 92       	push	r6
    204e:	7f 92       	push	r7
    2050:	8f 92       	push	r8
    2052:	9f 92       	push	r9
    2054:	af 92       	push	r10
    2056:	bf 92       	push	r11
    2058:	cf 92       	push	r12
    205a:	df 92       	push	r13
    205c:	ef 92       	push	r14
    205e:	ff 92       	push	r15
    2060:	0f 93       	push	r16
    2062:	1f 93       	push	r17
    2064:	cf 93       	push	r28
    2066:	df 93       	push	r29
    2068:	cd b7       	in	r28, 0x3d	; 61
    206a:	de b7       	in	r29, 0x3e	; 62
    206c:	ca 1b       	sub	r28, r26
    206e:	db 0b       	sbc	r29, r27
    2070:	0f b6       	in	r0, 0x3f	; 63
    2072:	f8 94       	cli
    2074:	de bf       	out	0x3e, r29	; 62
    2076:	0f be       	out	0x3f, r0	; 63
    2078:	cd bf       	out	0x3d, r28	; 61
    207a:	09 94       	ijmp

0000207c <__epilogue_restores__>:
    207c:	2a 88       	ldd	r2, Y+18	; 0x12
    207e:	39 88       	ldd	r3, Y+17	; 0x11
    2080:	48 88       	ldd	r4, Y+16	; 0x10
    2082:	5f 84       	ldd	r5, Y+15	; 0x0f
    2084:	6e 84       	ldd	r6, Y+14	; 0x0e
    2086:	7d 84       	ldd	r7, Y+13	; 0x0d
    2088:	8c 84       	ldd	r8, Y+12	; 0x0c
    208a:	9b 84       	ldd	r9, Y+11	; 0x0b
    208c:	aa 84       	ldd	r10, Y+10	; 0x0a
    208e:	b9 84       	ldd	r11, Y+9	; 0x09
    2090:	c8 84       	ldd	r12, Y+8	; 0x08
    2092:	df 80       	ldd	r13, Y+7	; 0x07
    2094:	ee 80       	ldd	r14, Y+6	; 0x06
    2096:	fd 80       	ldd	r15, Y+5	; 0x05
    2098:	0c 81       	ldd	r16, Y+4	; 0x04
    209a:	1b 81       	ldd	r17, Y+3	; 0x03
    209c:	aa 81       	ldd	r26, Y+2	; 0x02
    209e:	b9 81       	ldd	r27, Y+1	; 0x01
    20a0:	ce 0f       	add	r28, r30
    20a2:	d1 1d       	adc	r29, r1
    20a4:	0f b6       	in	r0, 0x3f	; 63
    20a6:	f8 94       	cli
    20a8:	de bf       	out	0x3e, r29	; 62
    20aa:	0f be       	out	0x3f, r0	; 63
    20ac:	cd bf       	out	0x3d, r28	; 61
    20ae:	ed 01       	movw	r28, r26
    20b0:	08 95       	ret

000020b2 <_exit>:
    20b2:	f8 94       	cli

000020b4 <__stop_program>:
    20b4:	ff cf       	rjmp	.-2      	; 0x20b4 <__stop_program>
