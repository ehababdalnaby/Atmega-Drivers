
Atmega32 drivers.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a60  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00000a60  00000ad4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      0000005c  00000000  00000000  00000adc  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000b38  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000120  00000000  00000000  00000b74  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001734  00000000  00000000  00000c94  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000978  00000000  00000000  000023c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000955  00000000  00000000  00002d40  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000023c  00000000  00000000  00003698  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000058a  00000000  00000000  000038d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000b8d  00000000  00000000  00003e5e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000e0  00000000  00000000  000049eb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 e6       	ldi	r30, 0x60	; 96
  68:	fa e0       	ldi	r31, 0x0A	; 10
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a8 36       	cpi	r26, 0x68	; 104
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a8 e6       	ldi	r26, 0x68	; 104
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a8 36       	cpi	r26, 0x68	; 104
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 2e 05 	jmp	0xa5c	; 0xa5c <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:

int main(void)
{
	 //CLockAPP();
	//KeyPadAPP();
	ADC_init();
  92:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <ADC_init>
	LCD_init();
  96:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <LCD_init>
	while(1)
	{
		u16 aDCvalue=read_analog(ADC0);
  9a:	80 e0       	ldi	r24, 0x00	; 0
  9c:	90 e0       	ldi	r25, 0x00	; 0
  9e:	0e 94 82 01 	call	0x304	; 0x304 <read_analog>
  a2:	ec 01       	movw	r28, r24
		disp_strXY(1,1,(u8 *)"    ");
  a4:	40 e6       	ldi	r20, 0x60	; 96
  a6:	50 e0       	ldi	r21, 0x00	; 0
  a8:	61 e0       	ldi	r22, 0x01	; 1
  aa:	81 e0       	ldi	r24, 0x01	; 1
  ac:	0e 94 2c 01 	call	0x258	; 0x258 <disp_strXY>
		disp_intXY(1,1,aDCvalue);
  b0:	9e 01       	movw	r18, r28
  b2:	40 e0       	ldi	r20, 0x00	; 0
  b4:	50 e0       	ldi	r21, 0x00	; 0
  b6:	61 e0       	ldi	r22, 0x01	; 1
  b8:	81 e0       	ldi	r24, 0x01	; 1
  ba:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <disp_intXY>
		u16 aDCvalue1=read_analog(ADC1);
  be:	81 e0       	ldi	r24, 0x01	; 1
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	0e 94 82 01 	call	0x304	; 0x304 <read_analog>
  c6:	ec 01       	movw	r28, r24
		disp_strXY(2,1,(u8 *)"    ");
  c8:	40 e6       	ldi	r20, 0x60	; 96
  ca:	50 e0       	ldi	r21, 0x00	; 0
  cc:	61 e0       	ldi	r22, 0x01	; 1
  ce:	82 e0       	ldi	r24, 0x02	; 2
  d0:	0e 94 2c 01 	call	0x258	; 0x258 <disp_strXY>
		disp_intXY(2,1,aDCvalue1);
  d4:	9e 01       	movw	r18, r28
  d6:	40 e0       	ldi	r20, 0x00	; 0
  d8:	50 e0       	ldi	r21, 0x00	; 0
  da:	61 e0       	ldi	r22, 0x01	; 1
  dc:	82 e0       	ldi	r24, 0x02	; 2
  de:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <disp_intXY>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  e2:	2f ef       	ldi	r18, 0xFF	; 255
  e4:	83 ed       	ldi	r24, 0xD3	; 211
  e6:	90 e3       	ldi	r25, 0x30	; 48
  e8:	21 50       	subi	r18, 0x01	; 1
  ea:	80 40       	sbci	r24, 0x00	; 0
  ec:	90 40       	sbci	r25, 0x00	; 0
  ee:	e1 f7       	brne	.-8      	; 0xe8 <main+0x56>
  f0:	00 c0       	rjmp	.+0      	; 0xf2 <main+0x60>
  f2:	00 00       	nop
  f4:	d2 cf       	rjmp	.-92     	; 0x9a <main+0x8>

000000f6 <LCD_latch>:

void disp_charXY(u8 row,u8 col,u8 letter)
{
	LCD_GOTXY(row,col);
	disp_char(letter);	
}
  f6:	61 e0       	ldi	r22, 0x01	; 1
  f8:	8b e0       	ldi	r24, 0x0B	; 11
  fa:	0e 94 90 01 	call	0x320	; 0x320 <writePin>
  fe:	85 ed       	ldi	r24, 0xD5	; 213
 100:	8a 95       	dec	r24
 102:	f1 f7       	brne	.-4      	; 0x100 <LCD_latch+0xa>
 104:	00 00       	nop
 106:	60 e0       	ldi	r22, 0x00	; 0
 108:	8b e0       	ldi	r24, 0x0B	; 11
 10a:	0e 94 90 01 	call	0x320	; 0x320 <writePin>
 10e:	85 ed       	ldi	r24, 0xD5	; 213
 110:	8a 95       	dec	r24
 112:	f1 f7       	brne	.-4      	; 0x110 <LCD_latch+0x1a>
 114:	00 00       	nop
 116:	08 95       	ret

00000118 <SendToLCD>:
 118:	cf 93       	push	r28
 11a:	c8 2f       	mov	r28, r24
 11c:	40 e0       	ldi	r20, 0x00	; 0
 11e:	60 ef       	ldi	r22, 0xF0	; 240
 120:	8b e3       	ldi	r24, 0x3B	; 59
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	0e 94 26 02 	call	0x44c	; 0x44c <writePins>
 128:	6c 2f       	mov	r22, r28
 12a:	60 7f       	andi	r22, 0xF0	; 240
 12c:	41 e0       	ldi	r20, 0x01	; 1
 12e:	8b e3       	ldi	r24, 0x3B	; 59
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	0e 94 26 02 	call	0x44c	; 0x44c <writePins>
 136:	0e 94 7b 00 	call	0xf6	; 0xf6 <LCD_latch>
 13a:	40 e0       	ldi	r20, 0x00	; 0
 13c:	60 ef       	ldi	r22, 0xF0	; 240
 13e:	8b e3       	ldi	r24, 0x3B	; 59
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	0e 94 26 02 	call	0x44c	; 0x44c <writePins>
 146:	80 e1       	ldi	r24, 0x10	; 16
 148:	c8 9f       	mul	r28, r24
 14a:	b0 01       	movw	r22, r0
 14c:	11 24       	eor	r1, r1
 14e:	41 e0       	ldi	r20, 0x01	; 1
 150:	8b e3       	ldi	r24, 0x3B	; 59
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	0e 94 26 02 	call	0x44c	; 0x44c <writePins>
 158:	0e 94 7b 00 	call	0xf6	; 0xf6 <LCD_latch>
 15c:	85 ed       	ldi	r24, 0xD5	; 213
 15e:	8a 95       	dec	r24
 160:	f1 f7       	brne	.-4      	; 0x15e <SendToLCD+0x46>
 162:	00 00       	nop
 164:	cf 91       	pop	r28
 166:	08 95       	ret

00000168 <LCD_send_cmd>:
 168:	cf 93       	push	r28
 16a:	c8 2f       	mov	r28, r24
 16c:	60 e0       	ldi	r22, 0x00	; 0
 16e:	89 e0       	ldi	r24, 0x09	; 9
 170:	0e 94 90 01 	call	0x320	; 0x320 <writePin>
 174:	8c 2f       	mov	r24, r28
 176:	0e 94 8c 00 	call	0x118	; 0x118 <SendToLCD>
 17a:	cf 91       	pop	r28
 17c:	08 95       	ret

0000017e <LCD_CLEAR>:
 17e:	81 e0       	ldi	r24, 0x01	; 1
 180:	0e 94 b4 00 	call	0x168	; 0x168 <LCD_send_cmd>
 184:	8f e3       	ldi	r24, 0x3F	; 63
 186:	9f e1       	ldi	r25, 0x1F	; 31
 188:	01 97       	sbiw	r24, 0x01	; 1
 18a:	f1 f7       	brne	.-4      	; 0x188 <LCD_CLEAR+0xa>
 18c:	00 c0       	rjmp	.+0      	; 0x18e <LCD_CLEAR+0x10>
 18e:	00 00       	nop
 190:	08 95       	ret

00000192 <LCD_ret_Home>:
 192:	82 e0       	ldi	r24, 0x02	; 2
 194:	0e 94 b4 00 	call	0x168	; 0x168 <LCD_send_cmd>
 198:	8f e3       	ldi	r24, 0x3F	; 63
 19a:	9f e1       	ldi	r25, 0x1F	; 31
 19c:	01 97       	sbiw	r24, 0x01	; 1
 19e:	f1 f7       	brne	.-4      	; 0x19c <LCD_ret_Home+0xa>
 1a0:	00 c0       	rjmp	.+0      	; 0x1a2 <LCD_ret_Home+0x10>
 1a2:	00 00       	nop
 1a4:	08 95       	ret

000001a6 <LCD_init>:
 1a6:	41 e0       	ldi	r20, 0x01	; 1
 1a8:	60 ef       	ldi	r22, 0xF0	; 240
 1aa:	8a e3       	ldi	r24, 0x3A	; 58
 1ac:	90 e0       	ldi	r25, 0x00	; 0
 1ae:	0e 94 35 02 	call	0x46a	; 0x46a <pinsDirection>
 1b2:	41 e0       	ldi	r20, 0x01	; 1
 1b4:	6e e0       	ldi	r22, 0x0E	; 14
 1b6:	87 e3       	ldi	r24, 0x37	; 55
 1b8:	90 e0       	ldi	r25, 0x00	; 0
 1ba:	0e 94 35 02 	call	0x46a	; 0x46a <pinsDirection>
 1be:	60 e0       	ldi	r22, 0x00	; 0
 1c0:	8a e0       	ldi	r24, 0x0A	; 10
 1c2:	0e 94 90 01 	call	0x320	; 0x320 <writePin>
 1c6:	2f ef       	ldi	r18, 0xFF	; 255
 1c8:	83 ef       	ldi	r24, 0xF3	; 243
 1ca:	91 e0       	ldi	r25, 0x01	; 1
 1cc:	21 50       	subi	r18, 0x01	; 1
 1ce:	80 40       	sbci	r24, 0x00	; 0
 1d0:	90 40       	sbci	r25, 0x00	; 0
 1d2:	e1 f7       	brne	.-8      	; 0x1cc <LCD_init+0x26>
 1d4:	00 c0       	rjmp	.+0      	; 0x1d6 <LCD_init+0x30>
 1d6:	00 00       	nop
 1d8:	0e 94 c9 00 	call	0x192	; 0x192 <LCD_ret_Home>
 1dc:	86 e0       	ldi	r24, 0x06	; 6
 1de:	0e 94 b4 00 	call	0x168	; 0x168 <LCD_send_cmd>
 1e2:	8f e0       	ldi	r24, 0x0F	; 15
 1e4:	0e 94 b4 00 	call	0x168	; 0x168 <LCD_send_cmd>
 1e8:	80 e1       	ldi	r24, 0x10	; 16
 1ea:	0e 94 b4 00 	call	0x168	; 0x168 <LCD_send_cmd>
 1ee:	88 e2       	ldi	r24, 0x28	; 40
 1f0:	0e 94 b4 00 	call	0x168	; 0x168 <LCD_send_cmd>
 1f4:	0e 94 bf 00 	call	0x17e	; 0x17e <LCD_CLEAR>
 1f8:	08 95       	ret

000001fa <LCD_send_data>:
 1fa:	cf 93       	push	r28
 1fc:	c8 2f       	mov	r28, r24
 1fe:	61 e0       	ldi	r22, 0x01	; 1
 200:	89 e0       	ldi	r24, 0x09	; 9
 202:	0e 94 90 01 	call	0x320	; 0x320 <writePin>
 206:	8c 2f       	mov	r24, r28
 208:	0e 94 8c 00 	call	0x118	; 0x118 <SendToLCD>
 20c:	cf 91       	pop	r28
 20e:	08 95       	ret

00000210 <disp_char>:
 210:	0e 94 fd 00 	call	0x1fa	; 0x1fa <LCD_send_data>
 214:	08 95       	ret

00000216 <disp_str>:
 216:	0f 93       	push	r16
 218:	1f 93       	push	r17
 21a:	cf 93       	push	r28
 21c:	8c 01       	movw	r16, r24
 21e:	c0 e0       	ldi	r28, 0x00	; 0
 220:	03 c0       	rjmp	.+6      	; 0x228 <disp_str+0x12>
 222:	0e 94 08 01 	call	0x210	; 0x210 <disp_char>
 226:	cf 5f       	subi	r28, 0xFF	; 255
 228:	f8 01       	movw	r30, r16
 22a:	ec 0f       	add	r30, r28
 22c:	f1 1d       	adc	r31, r1
 22e:	80 81       	ld	r24, Z
 230:	81 11       	cpse	r24, r1
 232:	f7 cf       	rjmp	.-18     	; 0x222 <disp_str+0xc>
 234:	cf 91       	pop	r28
 236:	1f 91       	pop	r17
 238:	0f 91       	pop	r16
 23a:	08 95       	ret

0000023c <LCD_GOTXY>:
 23c:	81 30       	cpi	r24, 0x01	; 1
 23e:	29 f4       	brne	.+10     	; 0x24a <LCD_GOTXY+0xe>
 240:	8f e7       	ldi	r24, 0x7F	; 127
 242:	86 0f       	add	r24, r22
 244:	0e 94 b4 00 	call	0x168	; 0x168 <LCD_send_cmd>
 248:	08 95       	ret
 24a:	82 30       	cpi	r24, 0x02	; 2
 24c:	21 f4       	brne	.+8      	; 0x256 <LCD_GOTXY+0x1a>
 24e:	8f eb       	ldi	r24, 0xBF	; 191
 250:	86 0f       	add	r24, r22
 252:	0e 94 b4 00 	call	0x168	; 0x168 <LCD_send_cmd>
 256:	08 95       	ret

00000258 <disp_strXY>:
	else{}
	
}

void disp_strXY(u8 row,u8 col,u8* str)
{
 258:	cf 93       	push	r28
 25a:	df 93       	push	r29
 25c:	ea 01       	movw	r28, r20
	LCD_GOTXY(row,col);
 25e:	0e 94 1e 01 	call	0x23c	; 0x23c <LCD_GOTXY>
	disp_str(str);
 262:	ce 01       	movw	r24, r28
 264:	0e 94 0b 01 	call	0x216	; 0x216 <disp_str>
}
 268:	df 91       	pop	r29
 26a:	cf 91       	pop	r28
 26c:	08 95       	ret

0000026e <disp_int>:


void disp_int(u32 intvalue)
{
 26e:	0f 93       	push	r16
 270:	1f 93       	push	r17
 272:	cf 93       	push	r28
 274:	df 93       	push	r29
 276:	cd b7       	in	r28, 0x3d	; 61
 278:	de b7       	in	r29, 0x3e	; 62
 27a:	2b 97       	sbiw	r28, 0x0b	; 11
 27c:	0f b6       	in	r0, 0x3f	; 63
 27e:	f8 94       	cli
 280:	de bf       	out	0x3e, r29	; 62
 282:	0f be       	out	0x3f, r0	; 63
 284:	cd bf       	out	0x3d, r28	; 61
	u8 string[11]={0};
 286:	8e 01       	movw	r16, r28
 288:	0f 5f       	subi	r16, 0xFF	; 255
 28a:	1f 4f       	sbci	r17, 0xFF	; 255
 28c:	2b e0       	ldi	r18, 0x0B	; 11
 28e:	f8 01       	movw	r30, r16
 290:	11 92       	st	Z+, r1
 292:	2a 95       	dec	r18
 294:	e9 f7       	brne	.-6      	; 0x290 <disp_int+0x22>
		sprintf(string,"%u",intvalue);
 296:	9f 93       	push	r25
 298:	8f 93       	push	r24
 29a:	7f 93       	push	r23
 29c:	6f 93       	push	r22
 29e:	85 e6       	ldi	r24, 0x65	; 101
 2a0:	90 e0       	ldi	r25, 0x00	; 0
 2a2:	9f 93       	push	r25
 2a4:	8f 93       	push	r24
 2a6:	1f 93       	push	r17
 2a8:	0f 93       	push	r16
 2aa:	0e 94 44 02 	call	0x488	; 0x488 <sprintf>
		disp_str(string);
 2ae:	c8 01       	movw	r24, r16
 2b0:	0e 94 0b 01 	call	0x216	; 0x216 <disp_str>
}
 2b4:	0f b6       	in	r0, 0x3f	; 63
 2b6:	f8 94       	cli
 2b8:	de bf       	out	0x3e, r29	; 62
 2ba:	0f be       	out	0x3f, r0	; 63
 2bc:	cd bf       	out	0x3d, r28	; 61
 2be:	2b 96       	adiw	r28, 0x0b	; 11
 2c0:	0f b6       	in	r0, 0x3f	; 63
 2c2:	f8 94       	cli
 2c4:	de bf       	out	0x3e, r29	; 62
 2c6:	0f be       	out	0x3f, r0	; 63
 2c8:	cd bf       	out	0x3d, r28	; 61
 2ca:	df 91       	pop	r29
 2cc:	cf 91       	pop	r28
 2ce:	1f 91       	pop	r17
 2d0:	0f 91       	pop	r16
 2d2:	08 95       	ret

000002d4 <disp_intXY>:
void disp_intXY(u8 row,u8 col,u32 intvalue)
{
 2d4:	cf 92       	push	r12
 2d6:	df 92       	push	r13
 2d8:	ef 92       	push	r14
 2da:	ff 92       	push	r15
 2dc:	69 01       	movw	r12, r18
 2de:	7a 01       	movw	r14, r20
	LCD_GOTXY(row,col);
 2e0:	0e 94 1e 01 	call	0x23c	; 0x23c <LCD_GOTXY>
	disp_int(intvalue);
 2e4:	c7 01       	movw	r24, r14
 2e6:	b6 01       	movw	r22, r12
 2e8:	0e 94 37 01 	call	0x26e	; 0x26e <disp_int>
}
 2ec:	ff 90       	pop	r15
 2ee:	ef 90       	pop	r14
 2f0:	df 90       	pop	r13
 2f2:	cf 90       	pop	r12
 2f4:	08 95       	ret

000002f6 <ADC_init>:



void ADC_init(void)
{
	ADMUX|=(AVCC<<6)|(ADLAR<<5);	
 2f6:	87 b1       	in	r24, 0x07	; 7
 2f8:	80 64       	ori	r24, 0x40	; 64
 2fa:	87 b9       	out	0x07, r24	; 7
	ADCSRA|=(SELEPRESC)|(ADATE<<5)|(ADIE<<3)|(ADEN<<7);
 2fc:	86 b1       	in	r24, 0x06	; 6
 2fe:	87 68       	ori	r24, 0x87	; 135
 300:	86 b9       	out	0x06, r24	; 6
 302:	08 95       	ret

00000304 <read_analog>:
}
u16 read_analog(u16 ADC_NUM)
{ 
	ADMUX&=~(0x1F);
 304:	97 b1       	in	r25, 0x07	; 7
 306:	90 7e       	andi	r25, 0xE0	; 224
 308:	97 b9       	out	0x07, r25	; 7
	ADMUX|=(ADC_NUM);
 30a:	97 b1       	in	r25, 0x07	; 7
 30c:	89 2b       	or	r24, r25
 30e:	87 b9       	out	0x07, r24	; 7
	ADCSRA|=(1<<6);	//start conversion
 310:	86 b1       	in	r24, 0x06	; 6
 312:	80 64       	ori	r24, 0x40	; 64
 314:	86 b9       	out	0x06, r24	; 6
	while((ADCSRA>>6)&0x01); //wait until conversion complete
 316:	36 99       	sbic	0x06, 6	; 6
 318:	fe cf       	rjmp	.-4      	; 0x316 <read_analog+0x12>
	return ADC;		
 31a:	84 b1       	in	r24, 0x04	; 4
 31c:	95 b1       	in	r25, 0x05	; 5
}
 31e:	08 95       	ret

00000320 <writePin>:
		result=GETBit(PINC,(pinNo-PORTC_OFFSET));
	else if((pinNo>=PD0)&&(pinNo<=PD7))
		result=GETBit(PIND,(pinNo-PORTD_OFFSET));
	else{}
	return result;
}
 320:	88 30       	cpi	r24, 0x08	; 8
 322:	f8 f4       	brcc	.+62     	; 0x362 <writePin+0x42>
 324:	61 30       	cpi	r22, 0x01	; 1
 326:	69 f4       	brne	.+26     	; 0x342 <writePin+0x22>
 328:	4b b3       	in	r20, 0x1b	; 27
 32a:	21 e0       	ldi	r18, 0x01	; 1
 32c:	30 e0       	ldi	r19, 0x00	; 0
 32e:	b9 01       	movw	r22, r18
 330:	02 c0       	rjmp	.+4      	; 0x336 <writePin+0x16>
 332:	66 0f       	add	r22, r22
 334:	77 1f       	adc	r23, r23
 336:	8a 95       	dec	r24
 338:	e2 f7       	brpl	.-8      	; 0x332 <writePin+0x12>
 33a:	cb 01       	movw	r24, r22
 33c:	84 2b       	or	r24, r20
 33e:	8b bb       	out	0x1b, r24	; 27
 340:	08 95       	ret
 342:	61 11       	cpse	r22, r1
 344:	82 c0       	rjmp	.+260    	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 346:	4b b3       	in	r20, 0x1b	; 27
 348:	21 e0       	ldi	r18, 0x01	; 1
 34a:	30 e0       	ldi	r19, 0x00	; 0
 34c:	b9 01       	movw	r22, r18
 34e:	02 c0       	rjmp	.+4      	; 0x354 <writePin+0x34>
 350:	66 0f       	add	r22, r22
 352:	77 1f       	adc	r23, r23
 354:	8a 95       	dec	r24
 356:	e2 f7       	brpl	.-8      	; 0x350 <writePin+0x30>
 358:	cb 01       	movw	r24, r22
 35a:	80 95       	com	r24
 35c:	84 23       	and	r24, r20
 35e:	8b bb       	out	0x1b, r24	; 27
 360:	08 95       	ret
 362:	98 ef       	ldi	r25, 0xF8	; 248
 364:	98 0f       	add	r25, r24
 366:	98 30       	cpi	r25, 0x08	; 8
 368:	18 f5       	brcc	.+70     	; 0x3b0 <writePin+0x90>
 36a:	61 30       	cpi	r22, 0x01	; 1
 36c:	79 f4       	brne	.+30     	; 0x38c <writePin+0x6c>
 36e:	48 b3       	in	r20, 0x18	; 24
 370:	90 e0       	ldi	r25, 0x00	; 0
 372:	08 97       	sbiw	r24, 0x08	; 8
 374:	21 e0       	ldi	r18, 0x01	; 1
 376:	30 e0       	ldi	r19, 0x00	; 0
 378:	b9 01       	movw	r22, r18
 37a:	02 c0       	rjmp	.+4      	; 0x380 <writePin+0x60>
 37c:	66 0f       	add	r22, r22
 37e:	77 1f       	adc	r23, r23
 380:	8a 95       	dec	r24
 382:	e2 f7       	brpl	.-8      	; 0x37c <writePin+0x5c>
 384:	cb 01       	movw	r24, r22
 386:	84 2b       	or	r24, r20
 388:	88 bb       	out	0x18, r24	; 24
 38a:	08 95       	ret
 38c:	61 11       	cpse	r22, r1
 38e:	5d c0       	rjmp	.+186    	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 390:	48 b3       	in	r20, 0x18	; 24
 392:	90 e0       	ldi	r25, 0x00	; 0
 394:	08 97       	sbiw	r24, 0x08	; 8
 396:	21 e0       	ldi	r18, 0x01	; 1
 398:	30 e0       	ldi	r19, 0x00	; 0
 39a:	b9 01       	movw	r22, r18
 39c:	02 c0       	rjmp	.+4      	; 0x3a2 <writePin+0x82>
 39e:	66 0f       	add	r22, r22
 3a0:	77 1f       	adc	r23, r23
 3a2:	8a 95       	dec	r24
 3a4:	e2 f7       	brpl	.-8      	; 0x39e <writePin+0x7e>
 3a6:	cb 01       	movw	r24, r22
 3a8:	80 95       	com	r24
 3aa:	84 23       	and	r24, r20
 3ac:	88 bb       	out	0x18, r24	; 24
 3ae:	08 95       	ret
 3b0:	90 ef       	ldi	r25, 0xF0	; 240
 3b2:	98 0f       	add	r25, r24
 3b4:	98 30       	cpi	r25, 0x08	; 8
 3b6:	18 f5       	brcc	.+70     	; 0x3fe <writePin+0xde>
 3b8:	61 30       	cpi	r22, 0x01	; 1
 3ba:	79 f4       	brne	.+30     	; 0x3da <writePin+0xba>
 3bc:	45 b3       	in	r20, 0x15	; 21
 3be:	90 e0       	ldi	r25, 0x00	; 0
 3c0:	40 97       	sbiw	r24, 0x10	; 16
 3c2:	21 e0       	ldi	r18, 0x01	; 1
 3c4:	30 e0       	ldi	r19, 0x00	; 0
 3c6:	b9 01       	movw	r22, r18
 3c8:	02 c0       	rjmp	.+4      	; 0x3ce <writePin+0xae>
 3ca:	66 0f       	add	r22, r22
 3cc:	77 1f       	adc	r23, r23
 3ce:	8a 95       	dec	r24
 3d0:	e2 f7       	brpl	.-8      	; 0x3ca <writePin+0xaa>
 3d2:	cb 01       	movw	r24, r22
 3d4:	84 2b       	or	r24, r20
 3d6:	85 bb       	out	0x15, r24	; 21
 3d8:	08 95       	ret
 3da:	61 11       	cpse	r22, r1
 3dc:	36 c0       	rjmp	.+108    	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 3de:	45 b3       	in	r20, 0x15	; 21
 3e0:	90 e0       	ldi	r25, 0x00	; 0
 3e2:	40 97       	sbiw	r24, 0x10	; 16
 3e4:	21 e0       	ldi	r18, 0x01	; 1
 3e6:	30 e0       	ldi	r19, 0x00	; 0
 3e8:	b9 01       	movw	r22, r18
 3ea:	02 c0       	rjmp	.+4      	; 0x3f0 <writePin+0xd0>
 3ec:	66 0f       	add	r22, r22
 3ee:	77 1f       	adc	r23, r23
 3f0:	8a 95       	dec	r24
 3f2:	e2 f7       	brpl	.-8      	; 0x3ec <writePin+0xcc>
 3f4:	cb 01       	movw	r24, r22
 3f6:	80 95       	com	r24
 3f8:	84 23       	and	r24, r20
 3fa:	85 bb       	out	0x15, r24	; 21
 3fc:	08 95       	ret
 3fe:	98 ee       	ldi	r25, 0xE8	; 232
 400:	98 0f       	add	r25, r24
 402:	98 30       	cpi	r25, 0x08	; 8
 404:	10 f5       	brcc	.+68     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 406:	61 30       	cpi	r22, 0x01	; 1
 408:	79 f4       	brne	.+30     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 40a:	42 b3       	in	r20, 0x12	; 18
 40c:	90 e0       	ldi	r25, 0x00	; 0
 40e:	48 97       	sbiw	r24, 0x18	; 24
 410:	21 e0       	ldi	r18, 0x01	; 1
 412:	30 e0       	ldi	r19, 0x00	; 0
 414:	b9 01       	movw	r22, r18
 416:	02 c0       	rjmp	.+4      	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 418:	66 0f       	add	r22, r22
 41a:	77 1f       	adc	r23, r23
 41c:	8a 95       	dec	r24
 41e:	e2 f7       	brpl	.-8      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 420:	cb 01       	movw	r24, r22
 422:	84 2b       	or	r24, r20
 424:	82 bb       	out	0x12, r24	; 18
 426:	08 95       	ret
 428:	61 11       	cpse	r22, r1
 42a:	0f c0       	rjmp	.+30     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 42c:	42 b3       	in	r20, 0x12	; 18
 42e:	90 e0       	ldi	r25, 0x00	; 0
 430:	48 97       	sbiw	r24, 0x18	; 24
 432:	21 e0       	ldi	r18, 0x01	; 1
 434:	30 e0       	ldi	r19, 0x00	; 0
 436:	b9 01       	movw	r22, r18
 438:	02 c0       	rjmp	.+4      	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 43a:	66 0f       	add	r22, r22
 43c:	77 1f       	adc	r23, r23
 43e:	8a 95       	dec	r24
 440:	e2 f7       	brpl	.-8      	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 442:	cb 01       	movw	r24, r22
 444:	80 95       	com	r24
 446:	84 23       	and	r24, r20
 448:	82 bb       	out	0x12, r24	; 18
 44a:	08 95       	ret

0000044c <writePins>:
	
/*for custom number of bits*/
void writePins(volatile u8* port, u8 mask, u8 logic){
	if(logic==HIGH)
 44c:	41 30       	cpi	r20, 0x01	; 1
 44e:	29 f4       	brne	.+10     	; 0x45a <writePins+0xe>
		SETBits(*port,mask);
 450:	fc 01       	movw	r30, r24
 452:	20 81       	ld	r18, Z
 454:	62 2b       	or	r22, r18
 456:	60 83       	st	Z, r22
 458:	08 95       	ret
	else if(logic==LOW)
 45a:	41 11       	cpse	r20, r1
 45c:	05 c0       	rjmp	.+10     	; 0x468 <writePins+0x1c>
		CLRBits(*port,mask);
 45e:	fc 01       	movw	r30, r24
 460:	20 81       	ld	r18, Z
 462:	60 95       	com	r22
 464:	62 23       	and	r22, r18
 466:	60 83       	st	Z, r22
 468:	08 95       	ret

0000046a <pinsDirection>:
	else{}
}
void pinsDirection(volatile u8* ddr, u8 mask, u8 direction){
	if(direction == OUTPUT)
 46a:	41 30       	cpi	r20, 0x01	; 1
 46c:	29 f4       	brne	.+10     	; 0x478 <pinsDirection+0xe>
		SETBits(*ddr,mask);
 46e:	fc 01       	movw	r30, r24
 470:	20 81       	ld	r18, Z
 472:	62 2b       	or	r22, r18
 474:	60 83       	st	Z, r22
 476:	08 95       	ret
	else if(direction == INPUT)
 478:	41 11       	cpse	r20, r1
 47a:	05 c0       	rjmp	.+10     	; 0x486 <pinsDirection+0x1c>
		CLRBits(*ddr,mask);
 47c:	fc 01       	movw	r30, r24
 47e:	20 81       	ld	r18, Z
 480:	60 95       	com	r22
 482:	62 23       	and	r22, r18
 484:	60 83       	st	Z, r22
 486:	08 95       	ret

00000488 <sprintf>:
 488:	ae e0       	ldi	r26, 0x0E	; 14
 48a:	b0 e0       	ldi	r27, 0x00	; 0
 48c:	ea e4       	ldi	r30, 0x4A	; 74
 48e:	f2 e0       	ldi	r31, 0x02	; 2
 490:	0c 94 05 05 	jmp	0xa0a	; 0xa0a <__prologue_saves__+0x1c>
 494:	0d 89       	ldd	r16, Y+21	; 0x15
 496:	1e 89       	ldd	r17, Y+22	; 0x16
 498:	86 e0       	ldi	r24, 0x06	; 6
 49a:	8c 83       	std	Y+4, r24	; 0x04
 49c:	1a 83       	std	Y+2, r17	; 0x02
 49e:	09 83       	std	Y+1, r16	; 0x01
 4a0:	8f ef       	ldi	r24, 0xFF	; 255
 4a2:	9f e7       	ldi	r25, 0x7F	; 127
 4a4:	9e 83       	std	Y+6, r25	; 0x06
 4a6:	8d 83       	std	Y+5, r24	; 0x05
 4a8:	ae 01       	movw	r20, r28
 4aa:	47 5e       	subi	r20, 0xE7	; 231
 4ac:	5f 4f       	sbci	r21, 0xFF	; 255
 4ae:	6f 89       	ldd	r22, Y+23	; 0x17
 4b0:	78 8d       	ldd	r23, Y+24	; 0x18
 4b2:	ce 01       	movw	r24, r28
 4b4:	01 96       	adiw	r24, 0x01	; 1
 4b6:	0e 94 66 02 	call	0x4cc	; 0x4cc <vfprintf>
 4ba:	ef 81       	ldd	r30, Y+7	; 0x07
 4bc:	f8 85       	ldd	r31, Y+8	; 0x08
 4be:	e0 0f       	add	r30, r16
 4c0:	f1 1f       	adc	r31, r17
 4c2:	10 82       	st	Z, r1
 4c4:	2e 96       	adiw	r28, 0x0e	; 14
 4c6:	e4 e0       	ldi	r30, 0x04	; 4
 4c8:	0c 94 21 05 	jmp	0xa42	; 0xa42 <__epilogue_restores__+0x1c>

000004cc <vfprintf>:
 4cc:	ab e0       	ldi	r26, 0x0B	; 11
 4ce:	b0 e0       	ldi	r27, 0x00	; 0
 4d0:	ec e6       	ldi	r30, 0x6C	; 108
 4d2:	f2 e0       	ldi	r31, 0x02	; 2
 4d4:	0c 94 f7 04 	jmp	0x9ee	; 0x9ee <__prologue_saves__>
 4d8:	6c 01       	movw	r12, r24
 4da:	7b 01       	movw	r14, r22
 4dc:	8a 01       	movw	r16, r20
 4de:	fc 01       	movw	r30, r24
 4e0:	17 82       	std	Z+7, r1	; 0x07
 4e2:	16 82       	std	Z+6, r1	; 0x06
 4e4:	83 81       	ldd	r24, Z+3	; 0x03
 4e6:	81 ff       	sbrs	r24, 1
 4e8:	cc c1       	rjmp	.+920    	; 0x882 <__stack+0x23>
 4ea:	ce 01       	movw	r24, r28
 4ec:	01 96       	adiw	r24, 0x01	; 1
 4ee:	3c 01       	movw	r6, r24
 4f0:	f6 01       	movw	r30, r12
 4f2:	93 81       	ldd	r25, Z+3	; 0x03
 4f4:	f7 01       	movw	r30, r14
 4f6:	93 fd       	sbrc	r25, 3
 4f8:	85 91       	lpm	r24, Z+
 4fa:	93 ff       	sbrs	r25, 3
 4fc:	81 91       	ld	r24, Z+
 4fe:	7f 01       	movw	r14, r30
 500:	88 23       	and	r24, r24
 502:	09 f4       	brne	.+2      	; 0x506 <vfprintf+0x3a>
 504:	ba c1       	rjmp	.+884    	; 0x87a <__stack+0x1b>
 506:	85 32       	cpi	r24, 0x25	; 37
 508:	39 f4       	brne	.+14     	; 0x518 <vfprintf+0x4c>
 50a:	93 fd       	sbrc	r25, 3
 50c:	85 91       	lpm	r24, Z+
 50e:	93 ff       	sbrs	r25, 3
 510:	81 91       	ld	r24, Z+
 512:	7f 01       	movw	r14, r30
 514:	85 32       	cpi	r24, 0x25	; 37
 516:	29 f4       	brne	.+10     	; 0x522 <vfprintf+0x56>
 518:	b6 01       	movw	r22, r12
 51a:	90 e0       	ldi	r25, 0x00	; 0
 51c:	0e 94 5d 04 	call	0x8ba	; 0x8ba <fputc>
 520:	e7 cf       	rjmp	.-50     	; 0x4f0 <vfprintf+0x24>
 522:	91 2c       	mov	r9, r1
 524:	21 2c       	mov	r2, r1
 526:	31 2c       	mov	r3, r1
 528:	ff e1       	ldi	r31, 0x1F	; 31
 52a:	f3 15       	cp	r31, r3
 52c:	d8 f0       	brcs	.+54     	; 0x564 <vfprintf+0x98>
 52e:	8b 32       	cpi	r24, 0x2B	; 43
 530:	79 f0       	breq	.+30     	; 0x550 <vfprintf+0x84>
 532:	38 f4       	brcc	.+14     	; 0x542 <vfprintf+0x76>
 534:	80 32       	cpi	r24, 0x20	; 32
 536:	79 f0       	breq	.+30     	; 0x556 <vfprintf+0x8a>
 538:	83 32       	cpi	r24, 0x23	; 35
 53a:	a1 f4       	brne	.+40     	; 0x564 <vfprintf+0x98>
 53c:	23 2d       	mov	r18, r3
 53e:	20 61       	ori	r18, 0x10	; 16
 540:	1d c0       	rjmp	.+58     	; 0x57c <vfprintf+0xb0>
 542:	8d 32       	cpi	r24, 0x2D	; 45
 544:	61 f0       	breq	.+24     	; 0x55e <vfprintf+0x92>
 546:	80 33       	cpi	r24, 0x30	; 48
 548:	69 f4       	brne	.+26     	; 0x564 <vfprintf+0x98>
 54a:	23 2d       	mov	r18, r3
 54c:	21 60       	ori	r18, 0x01	; 1
 54e:	16 c0       	rjmp	.+44     	; 0x57c <vfprintf+0xb0>
 550:	83 2d       	mov	r24, r3
 552:	82 60       	ori	r24, 0x02	; 2
 554:	38 2e       	mov	r3, r24
 556:	e3 2d       	mov	r30, r3
 558:	e4 60       	ori	r30, 0x04	; 4
 55a:	3e 2e       	mov	r3, r30
 55c:	2a c0       	rjmp	.+84     	; 0x5b2 <vfprintf+0xe6>
 55e:	f3 2d       	mov	r31, r3
 560:	f8 60       	ori	r31, 0x08	; 8
 562:	1d c0       	rjmp	.+58     	; 0x59e <vfprintf+0xd2>
 564:	37 fc       	sbrc	r3, 7
 566:	2d c0       	rjmp	.+90     	; 0x5c2 <vfprintf+0xf6>
 568:	20 ed       	ldi	r18, 0xD0	; 208
 56a:	28 0f       	add	r18, r24
 56c:	2a 30       	cpi	r18, 0x0A	; 10
 56e:	40 f0       	brcs	.+16     	; 0x580 <vfprintf+0xb4>
 570:	8e 32       	cpi	r24, 0x2E	; 46
 572:	b9 f4       	brne	.+46     	; 0x5a2 <vfprintf+0xd6>
 574:	36 fc       	sbrc	r3, 6
 576:	81 c1       	rjmp	.+770    	; 0x87a <__stack+0x1b>
 578:	23 2d       	mov	r18, r3
 57a:	20 64       	ori	r18, 0x40	; 64
 57c:	32 2e       	mov	r3, r18
 57e:	19 c0       	rjmp	.+50     	; 0x5b2 <vfprintf+0xe6>
 580:	36 fe       	sbrs	r3, 6
 582:	06 c0       	rjmp	.+12     	; 0x590 <vfprintf+0xc4>
 584:	8a e0       	ldi	r24, 0x0A	; 10
 586:	98 9e       	mul	r9, r24
 588:	20 0d       	add	r18, r0
 58a:	11 24       	eor	r1, r1
 58c:	92 2e       	mov	r9, r18
 58e:	11 c0       	rjmp	.+34     	; 0x5b2 <vfprintf+0xe6>
 590:	ea e0       	ldi	r30, 0x0A	; 10
 592:	2e 9e       	mul	r2, r30
 594:	20 0d       	add	r18, r0
 596:	11 24       	eor	r1, r1
 598:	22 2e       	mov	r2, r18
 59a:	f3 2d       	mov	r31, r3
 59c:	f0 62       	ori	r31, 0x20	; 32
 59e:	3f 2e       	mov	r3, r31
 5a0:	08 c0       	rjmp	.+16     	; 0x5b2 <vfprintf+0xe6>
 5a2:	8c 36       	cpi	r24, 0x6C	; 108
 5a4:	21 f4       	brne	.+8      	; 0x5ae <vfprintf+0xe2>
 5a6:	83 2d       	mov	r24, r3
 5a8:	80 68       	ori	r24, 0x80	; 128
 5aa:	38 2e       	mov	r3, r24
 5ac:	02 c0       	rjmp	.+4      	; 0x5b2 <vfprintf+0xe6>
 5ae:	88 36       	cpi	r24, 0x68	; 104
 5b0:	41 f4       	brne	.+16     	; 0x5c2 <vfprintf+0xf6>
 5b2:	f7 01       	movw	r30, r14
 5b4:	93 fd       	sbrc	r25, 3
 5b6:	85 91       	lpm	r24, Z+
 5b8:	93 ff       	sbrs	r25, 3
 5ba:	81 91       	ld	r24, Z+
 5bc:	7f 01       	movw	r14, r30
 5be:	81 11       	cpse	r24, r1
 5c0:	b3 cf       	rjmp	.-154    	; 0x528 <vfprintf+0x5c>
 5c2:	98 2f       	mov	r25, r24
 5c4:	9f 7d       	andi	r25, 0xDF	; 223
 5c6:	95 54       	subi	r25, 0x45	; 69
 5c8:	93 30       	cpi	r25, 0x03	; 3
 5ca:	28 f4       	brcc	.+10     	; 0x5d6 <vfprintf+0x10a>
 5cc:	0c 5f       	subi	r16, 0xFC	; 252
 5ce:	1f 4f       	sbci	r17, 0xFF	; 255
 5d0:	9f e3       	ldi	r25, 0x3F	; 63
 5d2:	99 83       	std	Y+1, r25	; 0x01
 5d4:	0d c0       	rjmp	.+26     	; 0x5f0 <vfprintf+0x124>
 5d6:	83 36       	cpi	r24, 0x63	; 99
 5d8:	31 f0       	breq	.+12     	; 0x5e6 <vfprintf+0x11a>
 5da:	83 37       	cpi	r24, 0x73	; 115
 5dc:	71 f0       	breq	.+28     	; 0x5fa <vfprintf+0x12e>
 5de:	83 35       	cpi	r24, 0x53	; 83
 5e0:	09 f0       	breq	.+2      	; 0x5e4 <vfprintf+0x118>
 5e2:	59 c0       	rjmp	.+178    	; 0x696 <vfprintf+0x1ca>
 5e4:	21 c0       	rjmp	.+66     	; 0x628 <vfprintf+0x15c>
 5e6:	f8 01       	movw	r30, r16
 5e8:	80 81       	ld	r24, Z
 5ea:	89 83       	std	Y+1, r24	; 0x01
 5ec:	0e 5f       	subi	r16, 0xFE	; 254
 5ee:	1f 4f       	sbci	r17, 0xFF	; 255
 5f0:	88 24       	eor	r8, r8
 5f2:	83 94       	inc	r8
 5f4:	91 2c       	mov	r9, r1
 5f6:	53 01       	movw	r10, r6
 5f8:	13 c0       	rjmp	.+38     	; 0x620 <vfprintf+0x154>
 5fa:	28 01       	movw	r4, r16
 5fc:	f2 e0       	ldi	r31, 0x02	; 2
 5fe:	4f 0e       	add	r4, r31
 600:	51 1c       	adc	r5, r1
 602:	f8 01       	movw	r30, r16
 604:	a0 80       	ld	r10, Z
 606:	b1 80       	ldd	r11, Z+1	; 0x01
 608:	36 fe       	sbrs	r3, 6
 60a:	03 c0       	rjmp	.+6      	; 0x612 <vfprintf+0x146>
 60c:	69 2d       	mov	r22, r9
 60e:	70 e0       	ldi	r23, 0x00	; 0
 610:	02 c0       	rjmp	.+4      	; 0x616 <vfprintf+0x14a>
 612:	6f ef       	ldi	r22, 0xFF	; 255
 614:	7f ef       	ldi	r23, 0xFF	; 255
 616:	c5 01       	movw	r24, r10
 618:	0e 94 52 04 	call	0x8a4	; 0x8a4 <strnlen>
 61c:	4c 01       	movw	r8, r24
 61e:	82 01       	movw	r16, r4
 620:	f3 2d       	mov	r31, r3
 622:	ff 77       	andi	r31, 0x7F	; 127
 624:	3f 2e       	mov	r3, r31
 626:	16 c0       	rjmp	.+44     	; 0x654 <vfprintf+0x188>
 628:	28 01       	movw	r4, r16
 62a:	22 e0       	ldi	r18, 0x02	; 2
 62c:	42 0e       	add	r4, r18
 62e:	51 1c       	adc	r5, r1
 630:	f8 01       	movw	r30, r16
 632:	a0 80       	ld	r10, Z
 634:	b1 80       	ldd	r11, Z+1	; 0x01
 636:	36 fe       	sbrs	r3, 6
 638:	03 c0       	rjmp	.+6      	; 0x640 <vfprintf+0x174>
 63a:	69 2d       	mov	r22, r9
 63c:	70 e0       	ldi	r23, 0x00	; 0
 63e:	02 c0       	rjmp	.+4      	; 0x644 <vfprintf+0x178>
 640:	6f ef       	ldi	r22, 0xFF	; 255
 642:	7f ef       	ldi	r23, 0xFF	; 255
 644:	c5 01       	movw	r24, r10
 646:	0e 94 47 04 	call	0x88e	; 0x88e <strnlen_P>
 64a:	4c 01       	movw	r8, r24
 64c:	f3 2d       	mov	r31, r3
 64e:	f0 68       	ori	r31, 0x80	; 128
 650:	3f 2e       	mov	r3, r31
 652:	82 01       	movw	r16, r4
 654:	33 fc       	sbrc	r3, 3
 656:	1b c0       	rjmp	.+54     	; 0x68e <vfprintf+0x1c2>
 658:	82 2d       	mov	r24, r2
 65a:	90 e0       	ldi	r25, 0x00	; 0
 65c:	88 16       	cp	r8, r24
 65e:	99 06       	cpc	r9, r25
 660:	b0 f4       	brcc	.+44     	; 0x68e <vfprintf+0x1c2>
 662:	b6 01       	movw	r22, r12
 664:	80 e2       	ldi	r24, 0x20	; 32
 666:	90 e0       	ldi	r25, 0x00	; 0
 668:	0e 94 5d 04 	call	0x8ba	; 0x8ba <fputc>
 66c:	2a 94       	dec	r2
 66e:	f4 cf       	rjmp	.-24     	; 0x658 <vfprintf+0x18c>
 670:	f5 01       	movw	r30, r10
 672:	37 fc       	sbrc	r3, 7
 674:	85 91       	lpm	r24, Z+
 676:	37 fe       	sbrs	r3, 7
 678:	81 91       	ld	r24, Z+
 67a:	5f 01       	movw	r10, r30
 67c:	b6 01       	movw	r22, r12
 67e:	90 e0       	ldi	r25, 0x00	; 0
 680:	0e 94 5d 04 	call	0x8ba	; 0x8ba <fputc>
 684:	21 10       	cpse	r2, r1
 686:	2a 94       	dec	r2
 688:	21 e0       	ldi	r18, 0x01	; 1
 68a:	82 1a       	sub	r8, r18
 68c:	91 08       	sbc	r9, r1
 68e:	81 14       	cp	r8, r1
 690:	91 04       	cpc	r9, r1
 692:	71 f7       	brne	.-36     	; 0x670 <vfprintf+0x1a4>
 694:	e8 c0       	rjmp	.+464    	; 0x866 <__stack+0x7>
 696:	84 36       	cpi	r24, 0x64	; 100
 698:	11 f0       	breq	.+4      	; 0x69e <vfprintf+0x1d2>
 69a:	89 36       	cpi	r24, 0x69	; 105
 69c:	41 f5       	brne	.+80     	; 0x6ee <vfprintf+0x222>
 69e:	f8 01       	movw	r30, r16
 6a0:	37 fe       	sbrs	r3, 7
 6a2:	07 c0       	rjmp	.+14     	; 0x6b2 <vfprintf+0x1e6>
 6a4:	60 81       	ld	r22, Z
 6a6:	71 81       	ldd	r23, Z+1	; 0x01
 6a8:	82 81       	ldd	r24, Z+2	; 0x02
 6aa:	93 81       	ldd	r25, Z+3	; 0x03
 6ac:	0c 5f       	subi	r16, 0xFC	; 252
 6ae:	1f 4f       	sbci	r17, 0xFF	; 255
 6b0:	08 c0       	rjmp	.+16     	; 0x6c2 <vfprintf+0x1f6>
 6b2:	60 81       	ld	r22, Z
 6b4:	71 81       	ldd	r23, Z+1	; 0x01
 6b6:	07 2e       	mov	r0, r23
 6b8:	00 0c       	add	r0, r0
 6ba:	88 0b       	sbc	r24, r24
 6bc:	99 0b       	sbc	r25, r25
 6be:	0e 5f       	subi	r16, 0xFE	; 254
 6c0:	1f 4f       	sbci	r17, 0xFF	; 255
 6c2:	f3 2d       	mov	r31, r3
 6c4:	ff 76       	andi	r31, 0x6F	; 111
 6c6:	3f 2e       	mov	r3, r31
 6c8:	97 ff       	sbrs	r25, 7
 6ca:	09 c0       	rjmp	.+18     	; 0x6de <vfprintf+0x212>
 6cc:	90 95       	com	r25
 6ce:	80 95       	com	r24
 6d0:	70 95       	com	r23
 6d2:	61 95       	neg	r22
 6d4:	7f 4f       	sbci	r23, 0xFF	; 255
 6d6:	8f 4f       	sbci	r24, 0xFF	; 255
 6d8:	9f 4f       	sbci	r25, 0xFF	; 255
 6da:	f0 68       	ori	r31, 0x80	; 128
 6dc:	3f 2e       	mov	r3, r31
 6de:	2a e0       	ldi	r18, 0x0A	; 10
 6e0:	30 e0       	ldi	r19, 0x00	; 0
 6e2:	a3 01       	movw	r20, r6
 6e4:	0e 94 99 04 	call	0x932	; 0x932 <__ultoa_invert>
 6e8:	88 2e       	mov	r8, r24
 6ea:	86 18       	sub	r8, r6
 6ec:	45 c0       	rjmp	.+138    	; 0x778 <vfprintf+0x2ac>
 6ee:	85 37       	cpi	r24, 0x75	; 117
 6f0:	31 f4       	brne	.+12     	; 0x6fe <vfprintf+0x232>
 6f2:	23 2d       	mov	r18, r3
 6f4:	2f 7e       	andi	r18, 0xEF	; 239
 6f6:	b2 2e       	mov	r11, r18
 6f8:	2a e0       	ldi	r18, 0x0A	; 10
 6fa:	30 e0       	ldi	r19, 0x00	; 0
 6fc:	25 c0       	rjmp	.+74     	; 0x748 <vfprintf+0x27c>
 6fe:	93 2d       	mov	r25, r3
 700:	99 7f       	andi	r25, 0xF9	; 249
 702:	b9 2e       	mov	r11, r25
 704:	8f 36       	cpi	r24, 0x6F	; 111
 706:	c1 f0       	breq	.+48     	; 0x738 <vfprintf+0x26c>
 708:	18 f4       	brcc	.+6      	; 0x710 <vfprintf+0x244>
 70a:	88 35       	cpi	r24, 0x58	; 88
 70c:	79 f0       	breq	.+30     	; 0x72c <vfprintf+0x260>
 70e:	b5 c0       	rjmp	.+362    	; 0x87a <__stack+0x1b>
 710:	80 37       	cpi	r24, 0x70	; 112
 712:	19 f0       	breq	.+6      	; 0x71a <vfprintf+0x24e>
 714:	88 37       	cpi	r24, 0x78	; 120
 716:	21 f0       	breq	.+8      	; 0x720 <vfprintf+0x254>
 718:	b0 c0       	rjmp	.+352    	; 0x87a <__stack+0x1b>
 71a:	e9 2f       	mov	r30, r25
 71c:	e0 61       	ori	r30, 0x10	; 16
 71e:	be 2e       	mov	r11, r30
 720:	b4 fe       	sbrs	r11, 4
 722:	0d c0       	rjmp	.+26     	; 0x73e <vfprintf+0x272>
 724:	fb 2d       	mov	r31, r11
 726:	f4 60       	ori	r31, 0x04	; 4
 728:	bf 2e       	mov	r11, r31
 72a:	09 c0       	rjmp	.+18     	; 0x73e <vfprintf+0x272>
 72c:	34 fe       	sbrs	r3, 4
 72e:	0a c0       	rjmp	.+20     	; 0x744 <vfprintf+0x278>
 730:	29 2f       	mov	r18, r25
 732:	26 60       	ori	r18, 0x06	; 6
 734:	b2 2e       	mov	r11, r18
 736:	06 c0       	rjmp	.+12     	; 0x744 <vfprintf+0x278>
 738:	28 e0       	ldi	r18, 0x08	; 8
 73a:	30 e0       	ldi	r19, 0x00	; 0
 73c:	05 c0       	rjmp	.+10     	; 0x748 <vfprintf+0x27c>
 73e:	20 e1       	ldi	r18, 0x10	; 16
 740:	30 e0       	ldi	r19, 0x00	; 0
 742:	02 c0       	rjmp	.+4      	; 0x748 <vfprintf+0x27c>
 744:	20 e1       	ldi	r18, 0x10	; 16
 746:	32 e0       	ldi	r19, 0x02	; 2
 748:	f8 01       	movw	r30, r16
 74a:	b7 fe       	sbrs	r11, 7
 74c:	07 c0       	rjmp	.+14     	; 0x75c <vfprintf+0x290>
 74e:	60 81       	ld	r22, Z
 750:	71 81       	ldd	r23, Z+1	; 0x01
 752:	82 81       	ldd	r24, Z+2	; 0x02
 754:	93 81       	ldd	r25, Z+3	; 0x03
 756:	0c 5f       	subi	r16, 0xFC	; 252
 758:	1f 4f       	sbci	r17, 0xFF	; 255
 75a:	06 c0       	rjmp	.+12     	; 0x768 <vfprintf+0x29c>
 75c:	60 81       	ld	r22, Z
 75e:	71 81       	ldd	r23, Z+1	; 0x01
 760:	80 e0       	ldi	r24, 0x00	; 0
 762:	90 e0       	ldi	r25, 0x00	; 0
 764:	0e 5f       	subi	r16, 0xFE	; 254
 766:	1f 4f       	sbci	r17, 0xFF	; 255
 768:	a3 01       	movw	r20, r6
 76a:	0e 94 99 04 	call	0x932	; 0x932 <__ultoa_invert>
 76e:	88 2e       	mov	r8, r24
 770:	86 18       	sub	r8, r6
 772:	fb 2d       	mov	r31, r11
 774:	ff 77       	andi	r31, 0x7F	; 127
 776:	3f 2e       	mov	r3, r31
 778:	36 fe       	sbrs	r3, 6
 77a:	0d c0       	rjmp	.+26     	; 0x796 <vfprintf+0x2ca>
 77c:	23 2d       	mov	r18, r3
 77e:	2e 7f       	andi	r18, 0xFE	; 254
 780:	a2 2e       	mov	r10, r18
 782:	89 14       	cp	r8, r9
 784:	58 f4       	brcc	.+22     	; 0x79c <vfprintf+0x2d0>
 786:	34 fe       	sbrs	r3, 4
 788:	0b c0       	rjmp	.+22     	; 0x7a0 <vfprintf+0x2d4>
 78a:	32 fc       	sbrc	r3, 2
 78c:	09 c0       	rjmp	.+18     	; 0x7a0 <vfprintf+0x2d4>
 78e:	83 2d       	mov	r24, r3
 790:	8e 7e       	andi	r24, 0xEE	; 238
 792:	a8 2e       	mov	r10, r24
 794:	05 c0       	rjmp	.+10     	; 0x7a0 <vfprintf+0x2d4>
 796:	b8 2c       	mov	r11, r8
 798:	a3 2c       	mov	r10, r3
 79a:	03 c0       	rjmp	.+6      	; 0x7a2 <vfprintf+0x2d6>
 79c:	b8 2c       	mov	r11, r8
 79e:	01 c0       	rjmp	.+2      	; 0x7a2 <vfprintf+0x2d6>
 7a0:	b9 2c       	mov	r11, r9
 7a2:	a4 fe       	sbrs	r10, 4
 7a4:	0f c0       	rjmp	.+30     	; 0x7c4 <vfprintf+0x2f8>
 7a6:	fe 01       	movw	r30, r28
 7a8:	e8 0d       	add	r30, r8
 7aa:	f1 1d       	adc	r31, r1
 7ac:	80 81       	ld	r24, Z
 7ae:	80 33       	cpi	r24, 0x30	; 48
 7b0:	21 f4       	brne	.+8      	; 0x7ba <vfprintf+0x2ee>
 7b2:	9a 2d       	mov	r25, r10
 7b4:	99 7e       	andi	r25, 0xE9	; 233
 7b6:	a9 2e       	mov	r10, r25
 7b8:	09 c0       	rjmp	.+18     	; 0x7cc <vfprintf+0x300>
 7ba:	a2 fe       	sbrs	r10, 2
 7bc:	06 c0       	rjmp	.+12     	; 0x7ca <vfprintf+0x2fe>
 7be:	b3 94       	inc	r11
 7c0:	b3 94       	inc	r11
 7c2:	04 c0       	rjmp	.+8      	; 0x7cc <vfprintf+0x300>
 7c4:	8a 2d       	mov	r24, r10
 7c6:	86 78       	andi	r24, 0x86	; 134
 7c8:	09 f0       	breq	.+2      	; 0x7cc <vfprintf+0x300>
 7ca:	b3 94       	inc	r11
 7cc:	a3 fc       	sbrc	r10, 3
 7ce:	11 c0       	rjmp	.+34     	; 0x7f2 <vfprintf+0x326>
 7d0:	a0 fe       	sbrs	r10, 0
 7d2:	06 c0       	rjmp	.+12     	; 0x7e0 <vfprintf+0x314>
 7d4:	b2 14       	cp	r11, r2
 7d6:	88 f4       	brcc	.+34     	; 0x7fa <vfprintf+0x32e>
 7d8:	28 0c       	add	r2, r8
 7da:	92 2c       	mov	r9, r2
 7dc:	9b 18       	sub	r9, r11
 7de:	0e c0       	rjmp	.+28     	; 0x7fc <vfprintf+0x330>
 7e0:	b2 14       	cp	r11, r2
 7e2:	60 f4       	brcc	.+24     	; 0x7fc <vfprintf+0x330>
 7e4:	b6 01       	movw	r22, r12
 7e6:	80 e2       	ldi	r24, 0x20	; 32
 7e8:	90 e0       	ldi	r25, 0x00	; 0
 7ea:	0e 94 5d 04 	call	0x8ba	; 0x8ba <fputc>
 7ee:	b3 94       	inc	r11
 7f0:	f7 cf       	rjmp	.-18     	; 0x7e0 <vfprintf+0x314>
 7f2:	b2 14       	cp	r11, r2
 7f4:	18 f4       	brcc	.+6      	; 0x7fc <vfprintf+0x330>
 7f6:	2b 18       	sub	r2, r11
 7f8:	02 c0       	rjmp	.+4      	; 0x7fe <vfprintf+0x332>
 7fa:	98 2c       	mov	r9, r8
 7fc:	21 2c       	mov	r2, r1
 7fe:	a4 fe       	sbrs	r10, 4
 800:	10 c0       	rjmp	.+32     	; 0x822 <vfprintf+0x356>
 802:	b6 01       	movw	r22, r12
 804:	80 e3       	ldi	r24, 0x30	; 48
 806:	90 e0       	ldi	r25, 0x00	; 0
 808:	0e 94 5d 04 	call	0x8ba	; 0x8ba <fputc>
 80c:	a2 fe       	sbrs	r10, 2
 80e:	17 c0       	rjmp	.+46     	; 0x83e <vfprintf+0x372>
 810:	a1 fc       	sbrc	r10, 1
 812:	03 c0       	rjmp	.+6      	; 0x81a <vfprintf+0x34e>
 814:	88 e7       	ldi	r24, 0x78	; 120
 816:	90 e0       	ldi	r25, 0x00	; 0
 818:	02 c0       	rjmp	.+4      	; 0x81e <vfprintf+0x352>
 81a:	88 e5       	ldi	r24, 0x58	; 88
 81c:	90 e0       	ldi	r25, 0x00	; 0
 81e:	b6 01       	movw	r22, r12
 820:	0c c0       	rjmp	.+24     	; 0x83a <vfprintf+0x36e>
 822:	8a 2d       	mov	r24, r10
 824:	86 78       	andi	r24, 0x86	; 134
 826:	59 f0       	breq	.+22     	; 0x83e <vfprintf+0x372>
 828:	a1 fe       	sbrs	r10, 1
 82a:	02 c0       	rjmp	.+4      	; 0x830 <vfprintf+0x364>
 82c:	8b e2       	ldi	r24, 0x2B	; 43
 82e:	01 c0       	rjmp	.+2      	; 0x832 <vfprintf+0x366>
 830:	80 e2       	ldi	r24, 0x20	; 32
 832:	a7 fc       	sbrc	r10, 7
 834:	8d e2       	ldi	r24, 0x2D	; 45
 836:	b6 01       	movw	r22, r12
 838:	90 e0       	ldi	r25, 0x00	; 0
 83a:	0e 94 5d 04 	call	0x8ba	; 0x8ba <fputc>
 83e:	89 14       	cp	r8, r9
 840:	38 f4       	brcc	.+14     	; 0x850 <vfprintf+0x384>
 842:	b6 01       	movw	r22, r12
 844:	80 e3       	ldi	r24, 0x30	; 48
 846:	90 e0       	ldi	r25, 0x00	; 0
 848:	0e 94 5d 04 	call	0x8ba	; 0x8ba <fputc>
 84c:	9a 94       	dec	r9
 84e:	f7 cf       	rjmp	.-18     	; 0x83e <vfprintf+0x372>
 850:	8a 94       	dec	r8
 852:	f3 01       	movw	r30, r6
 854:	e8 0d       	add	r30, r8
 856:	f1 1d       	adc	r31, r1
 858:	80 81       	ld	r24, Z
 85a:	b6 01       	movw	r22, r12
 85c:	90 e0       	ldi	r25, 0x00	; 0
 85e:	0e 94 5d 04 	call	0x8ba	; 0x8ba <fputc>
 862:	81 10       	cpse	r8, r1
 864:	f5 cf       	rjmp	.-22     	; 0x850 <vfprintf+0x384>
 866:	22 20       	and	r2, r2
 868:	09 f4       	brne	.+2      	; 0x86c <__stack+0xd>
 86a:	42 ce       	rjmp	.-892    	; 0x4f0 <vfprintf+0x24>
 86c:	b6 01       	movw	r22, r12
 86e:	80 e2       	ldi	r24, 0x20	; 32
 870:	90 e0       	ldi	r25, 0x00	; 0
 872:	0e 94 5d 04 	call	0x8ba	; 0x8ba <fputc>
 876:	2a 94       	dec	r2
 878:	f6 cf       	rjmp	.-20     	; 0x866 <__stack+0x7>
 87a:	f6 01       	movw	r30, r12
 87c:	86 81       	ldd	r24, Z+6	; 0x06
 87e:	97 81       	ldd	r25, Z+7	; 0x07
 880:	02 c0       	rjmp	.+4      	; 0x886 <__stack+0x27>
 882:	8f ef       	ldi	r24, 0xFF	; 255
 884:	9f ef       	ldi	r25, 0xFF	; 255
 886:	2b 96       	adiw	r28, 0x0b	; 11
 888:	e2 e1       	ldi	r30, 0x12	; 18
 88a:	0c 94 13 05 	jmp	0xa26	; 0xa26 <__epilogue_restores__>

0000088e <strnlen_P>:
 88e:	fc 01       	movw	r30, r24
 890:	05 90       	lpm	r0, Z+
 892:	61 50       	subi	r22, 0x01	; 1
 894:	70 40       	sbci	r23, 0x00	; 0
 896:	01 10       	cpse	r0, r1
 898:	d8 f7       	brcc	.-10     	; 0x890 <strnlen_P+0x2>
 89a:	80 95       	com	r24
 89c:	90 95       	com	r25
 89e:	8e 0f       	add	r24, r30
 8a0:	9f 1f       	adc	r25, r31
 8a2:	08 95       	ret

000008a4 <strnlen>:
 8a4:	fc 01       	movw	r30, r24
 8a6:	61 50       	subi	r22, 0x01	; 1
 8a8:	70 40       	sbci	r23, 0x00	; 0
 8aa:	01 90       	ld	r0, Z+
 8ac:	01 10       	cpse	r0, r1
 8ae:	d8 f7       	brcc	.-10     	; 0x8a6 <strnlen+0x2>
 8b0:	80 95       	com	r24
 8b2:	90 95       	com	r25
 8b4:	8e 0f       	add	r24, r30
 8b6:	9f 1f       	adc	r25, r31
 8b8:	08 95       	ret

000008ba <fputc>:
 8ba:	0f 93       	push	r16
 8bc:	1f 93       	push	r17
 8be:	cf 93       	push	r28
 8c0:	df 93       	push	r29
 8c2:	fb 01       	movw	r30, r22
 8c4:	23 81       	ldd	r18, Z+3	; 0x03
 8c6:	21 fd       	sbrc	r18, 1
 8c8:	03 c0       	rjmp	.+6      	; 0x8d0 <fputc+0x16>
 8ca:	8f ef       	ldi	r24, 0xFF	; 255
 8cc:	9f ef       	ldi	r25, 0xFF	; 255
 8ce:	2c c0       	rjmp	.+88     	; 0x928 <fputc+0x6e>
 8d0:	22 ff       	sbrs	r18, 2
 8d2:	16 c0       	rjmp	.+44     	; 0x900 <fputc+0x46>
 8d4:	46 81       	ldd	r20, Z+6	; 0x06
 8d6:	57 81       	ldd	r21, Z+7	; 0x07
 8d8:	24 81       	ldd	r18, Z+4	; 0x04
 8da:	35 81       	ldd	r19, Z+5	; 0x05
 8dc:	42 17       	cp	r20, r18
 8de:	53 07       	cpc	r21, r19
 8e0:	44 f4       	brge	.+16     	; 0x8f2 <fputc+0x38>
 8e2:	a0 81       	ld	r26, Z
 8e4:	b1 81       	ldd	r27, Z+1	; 0x01
 8e6:	9d 01       	movw	r18, r26
 8e8:	2f 5f       	subi	r18, 0xFF	; 255
 8ea:	3f 4f       	sbci	r19, 0xFF	; 255
 8ec:	31 83       	std	Z+1, r19	; 0x01
 8ee:	20 83       	st	Z, r18
 8f0:	8c 93       	st	X, r24
 8f2:	26 81       	ldd	r18, Z+6	; 0x06
 8f4:	37 81       	ldd	r19, Z+7	; 0x07
 8f6:	2f 5f       	subi	r18, 0xFF	; 255
 8f8:	3f 4f       	sbci	r19, 0xFF	; 255
 8fa:	37 83       	std	Z+7, r19	; 0x07
 8fc:	26 83       	std	Z+6, r18	; 0x06
 8fe:	14 c0       	rjmp	.+40     	; 0x928 <fputc+0x6e>
 900:	8b 01       	movw	r16, r22
 902:	ec 01       	movw	r28, r24
 904:	fb 01       	movw	r30, r22
 906:	00 84       	ldd	r0, Z+8	; 0x08
 908:	f1 85       	ldd	r31, Z+9	; 0x09
 90a:	e0 2d       	mov	r30, r0
 90c:	09 95       	icall
 90e:	89 2b       	or	r24, r25
 910:	e1 f6       	brne	.-72     	; 0x8ca <fputc+0x10>
 912:	d8 01       	movw	r26, r16
 914:	16 96       	adiw	r26, 0x06	; 6
 916:	8d 91       	ld	r24, X+
 918:	9c 91       	ld	r25, X
 91a:	17 97       	sbiw	r26, 0x07	; 7
 91c:	01 96       	adiw	r24, 0x01	; 1
 91e:	17 96       	adiw	r26, 0x07	; 7
 920:	9c 93       	st	X, r25
 922:	8e 93       	st	-X, r24
 924:	16 97       	sbiw	r26, 0x06	; 6
 926:	ce 01       	movw	r24, r28
 928:	df 91       	pop	r29
 92a:	cf 91       	pop	r28
 92c:	1f 91       	pop	r17
 92e:	0f 91       	pop	r16
 930:	08 95       	ret

00000932 <__ultoa_invert>:
 932:	fa 01       	movw	r30, r20
 934:	aa 27       	eor	r26, r26
 936:	28 30       	cpi	r18, 0x08	; 8
 938:	51 f1       	breq	.+84     	; 0x98e <__ultoa_invert+0x5c>
 93a:	20 31       	cpi	r18, 0x10	; 16
 93c:	81 f1       	breq	.+96     	; 0x99e <__ultoa_invert+0x6c>
 93e:	e8 94       	clt
 940:	6f 93       	push	r22
 942:	6e 7f       	andi	r22, 0xFE	; 254
 944:	6e 5f       	subi	r22, 0xFE	; 254
 946:	7f 4f       	sbci	r23, 0xFF	; 255
 948:	8f 4f       	sbci	r24, 0xFF	; 255
 94a:	9f 4f       	sbci	r25, 0xFF	; 255
 94c:	af 4f       	sbci	r26, 0xFF	; 255
 94e:	b1 e0       	ldi	r27, 0x01	; 1
 950:	3e d0       	rcall	.+124    	; 0x9ce <__ultoa_invert+0x9c>
 952:	b4 e0       	ldi	r27, 0x04	; 4
 954:	3c d0       	rcall	.+120    	; 0x9ce <__ultoa_invert+0x9c>
 956:	67 0f       	add	r22, r23
 958:	78 1f       	adc	r23, r24
 95a:	89 1f       	adc	r24, r25
 95c:	9a 1f       	adc	r25, r26
 95e:	a1 1d       	adc	r26, r1
 960:	68 0f       	add	r22, r24
 962:	79 1f       	adc	r23, r25
 964:	8a 1f       	adc	r24, r26
 966:	91 1d       	adc	r25, r1
 968:	a1 1d       	adc	r26, r1
 96a:	6a 0f       	add	r22, r26
 96c:	71 1d       	adc	r23, r1
 96e:	81 1d       	adc	r24, r1
 970:	91 1d       	adc	r25, r1
 972:	a1 1d       	adc	r26, r1
 974:	20 d0       	rcall	.+64     	; 0x9b6 <__ultoa_invert+0x84>
 976:	09 f4       	brne	.+2      	; 0x97a <__ultoa_invert+0x48>
 978:	68 94       	set
 97a:	3f 91       	pop	r19
 97c:	2a e0       	ldi	r18, 0x0A	; 10
 97e:	26 9f       	mul	r18, r22
 980:	11 24       	eor	r1, r1
 982:	30 19       	sub	r19, r0
 984:	30 5d       	subi	r19, 0xD0	; 208
 986:	31 93       	st	Z+, r19
 988:	de f6       	brtc	.-74     	; 0x940 <__ultoa_invert+0xe>
 98a:	cf 01       	movw	r24, r30
 98c:	08 95       	ret
 98e:	46 2f       	mov	r20, r22
 990:	47 70       	andi	r20, 0x07	; 7
 992:	40 5d       	subi	r20, 0xD0	; 208
 994:	41 93       	st	Z+, r20
 996:	b3 e0       	ldi	r27, 0x03	; 3
 998:	0f d0       	rcall	.+30     	; 0x9b8 <__ultoa_invert+0x86>
 99a:	c9 f7       	brne	.-14     	; 0x98e <__ultoa_invert+0x5c>
 99c:	f6 cf       	rjmp	.-20     	; 0x98a <__ultoa_invert+0x58>
 99e:	46 2f       	mov	r20, r22
 9a0:	4f 70       	andi	r20, 0x0F	; 15
 9a2:	40 5d       	subi	r20, 0xD0	; 208
 9a4:	4a 33       	cpi	r20, 0x3A	; 58
 9a6:	18 f0       	brcs	.+6      	; 0x9ae <__ultoa_invert+0x7c>
 9a8:	49 5d       	subi	r20, 0xD9	; 217
 9aa:	31 fd       	sbrc	r19, 1
 9ac:	40 52       	subi	r20, 0x20	; 32
 9ae:	41 93       	st	Z+, r20
 9b0:	02 d0       	rcall	.+4      	; 0x9b6 <__ultoa_invert+0x84>
 9b2:	a9 f7       	brne	.-22     	; 0x99e <__ultoa_invert+0x6c>
 9b4:	ea cf       	rjmp	.-44     	; 0x98a <__ultoa_invert+0x58>
 9b6:	b4 e0       	ldi	r27, 0x04	; 4
 9b8:	a6 95       	lsr	r26
 9ba:	97 95       	ror	r25
 9bc:	87 95       	ror	r24
 9be:	77 95       	ror	r23
 9c0:	67 95       	ror	r22
 9c2:	ba 95       	dec	r27
 9c4:	c9 f7       	brne	.-14     	; 0x9b8 <__ultoa_invert+0x86>
 9c6:	00 97       	sbiw	r24, 0x00	; 0
 9c8:	61 05       	cpc	r22, r1
 9ca:	71 05       	cpc	r23, r1
 9cc:	08 95       	ret
 9ce:	9b 01       	movw	r18, r22
 9d0:	ac 01       	movw	r20, r24
 9d2:	0a 2e       	mov	r0, r26
 9d4:	06 94       	lsr	r0
 9d6:	57 95       	ror	r21
 9d8:	47 95       	ror	r20
 9da:	37 95       	ror	r19
 9dc:	27 95       	ror	r18
 9de:	ba 95       	dec	r27
 9e0:	c9 f7       	brne	.-14     	; 0x9d4 <__ultoa_invert+0xa2>
 9e2:	62 0f       	add	r22, r18
 9e4:	73 1f       	adc	r23, r19
 9e6:	84 1f       	adc	r24, r20
 9e8:	95 1f       	adc	r25, r21
 9ea:	a0 1d       	adc	r26, r0
 9ec:	08 95       	ret

000009ee <__prologue_saves__>:
 9ee:	2f 92       	push	r2
 9f0:	3f 92       	push	r3
 9f2:	4f 92       	push	r4
 9f4:	5f 92       	push	r5
 9f6:	6f 92       	push	r6
 9f8:	7f 92       	push	r7
 9fa:	8f 92       	push	r8
 9fc:	9f 92       	push	r9
 9fe:	af 92       	push	r10
 a00:	bf 92       	push	r11
 a02:	cf 92       	push	r12
 a04:	df 92       	push	r13
 a06:	ef 92       	push	r14
 a08:	ff 92       	push	r15
 a0a:	0f 93       	push	r16
 a0c:	1f 93       	push	r17
 a0e:	cf 93       	push	r28
 a10:	df 93       	push	r29
 a12:	cd b7       	in	r28, 0x3d	; 61
 a14:	de b7       	in	r29, 0x3e	; 62
 a16:	ca 1b       	sub	r28, r26
 a18:	db 0b       	sbc	r29, r27
 a1a:	0f b6       	in	r0, 0x3f	; 63
 a1c:	f8 94       	cli
 a1e:	de bf       	out	0x3e, r29	; 62
 a20:	0f be       	out	0x3f, r0	; 63
 a22:	cd bf       	out	0x3d, r28	; 61
 a24:	09 94       	ijmp

00000a26 <__epilogue_restores__>:
 a26:	2a 88       	ldd	r2, Y+18	; 0x12
 a28:	39 88       	ldd	r3, Y+17	; 0x11
 a2a:	48 88       	ldd	r4, Y+16	; 0x10
 a2c:	5f 84       	ldd	r5, Y+15	; 0x0f
 a2e:	6e 84       	ldd	r6, Y+14	; 0x0e
 a30:	7d 84       	ldd	r7, Y+13	; 0x0d
 a32:	8c 84       	ldd	r8, Y+12	; 0x0c
 a34:	9b 84       	ldd	r9, Y+11	; 0x0b
 a36:	aa 84       	ldd	r10, Y+10	; 0x0a
 a38:	b9 84       	ldd	r11, Y+9	; 0x09
 a3a:	c8 84       	ldd	r12, Y+8	; 0x08
 a3c:	df 80       	ldd	r13, Y+7	; 0x07
 a3e:	ee 80       	ldd	r14, Y+6	; 0x06
 a40:	fd 80       	ldd	r15, Y+5	; 0x05
 a42:	0c 81       	ldd	r16, Y+4	; 0x04
 a44:	1b 81       	ldd	r17, Y+3	; 0x03
 a46:	aa 81       	ldd	r26, Y+2	; 0x02
 a48:	b9 81       	ldd	r27, Y+1	; 0x01
 a4a:	ce 0f       	add	r28, r30
 a4c:	d1 1d       	adc	r29, r1
 a4e:	0f b6       	in	r0, 0x3f	; 63
 a50:	f8 94       	cli
 a52:	de bf       	out	0x3e, r29	; 62
 a54:	0f be       	out	0x3f, r0	; 63
 a56:	cd bf       	out	0x3d, r28	; 61
 a58:	ed 01       	movw	r28, r26
 a5a:	08 95       	ret

00000a5c <_exit>:
 a5c:	f8 94       	cli

00000a5e <__stop_program>:
 a5e:	ff cf       	rjmp	.-2      	; 0xa5e <__stop_program>
