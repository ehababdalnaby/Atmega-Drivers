
Atmega32 drivers.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000010e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000182  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000065  00800060  00800060  00000182  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000182  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000001b4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  000001f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e94  00000000  00000000  00000278  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000742  00000000  00000000  0000110c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000404  00000000  00000000  0000184e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000dc  00000000  00000000  00001c54  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000052b  00000000  00000000  00001d30  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000ce  00000000  00000000  0000225b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  00002329  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__vector_13>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee e0       	ldi	r30, 0x0E	; 14
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a5 3c       	cpi	r26, 0xC5	; 197
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 85 00 	jmp	0x10a	; 0x10a <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
#error define includes.h file
#endif

int main(void)
{
	Timer0_Init(FPWM);
  92:	83 e0       	ldi	r24, 0x03	; 3
  94:	0e 94 4d 00 	call	0x9a	; 0x9a <Timer0_Init>
  98:	ff cf       	rjmp	.-2      	; 0x98 <main+0x6>

0000009a <Timer0_Init>:
void Timer0_Init(timer_modes Tmode)
{
// 	switch(Tmode)
// 	{
// 		case FPWM:
		SETBit(TCCR0,WGM01);
  9a:	83 b7       	in	r24, 0x33	; 51
  9c:	88 60       	ori	r24, 0x08	; 8
  9e:	83 bf       	out	0x33, r24	; 51
		SETBit(TCCR0,WGM00);
  a0:	83 b7       	in	r24, 0x33	; 51
  a2:	80 64       	ori	r24, 0x40	; 64
  a4:	83 bf       	out	0x33, r24	; 51
		
		SETBit(TCCR0,COM01);
  a6:	83 b7       	in	r24, 0x33	; 51
  a8:	80 62       	ori	r24, 0x20	; 32
  aa:	83 bf       	out	0x33, r24	; 51
		CLRBit(TCCR0,COM00);
  ac:	83 b7       	in	r24, 0x33	; 51
  ae:	8f 7e       	andi	r24, 0xEF	; 239
  b0:	83 bf       	out	0x33, r24	; 51
		
		
		CLRBit(TCCR0,CS00);
  b2:	83 b7       	in	r24, 0x33	; 51
  b4:	8e 7f       	andi	r24, 0xFE	; 254
  b6:	83 bf       	out	0x33, r24	; 51
		SETBit(TCCR0,CS01);
  b8:	83 b7       	in	r24, 0x33	; 51
  ba:	82 60       	ori	r24, 0x02	; 2
  bc:	83 bf       	out	0x33, r24	; 51
		SETBit(TCCR0,CS02);
  be:	83 b7       	in	r24, 0x33	; 51
  c0:	84 60       	ori	r24, 0x04	; 4
  c2:	83 bf       	out	0x33, r24	; 51
  c4:	08 95       	ret

000000c6 <__vector_13>:

u8 gps[100];
u8 i=0;
u8 CHECK[]="$GPGGA";
ISR(USART_RXC_vect)
{
  c6:	1f 92       	push	r1
  c8:	0f 92       	push	r0
  ca:	0f b6       	in	r0, 0x3f	; 63
  cc:	0f 92       	push	r0
  ce:	11 24       	eor	r1, r1
  d0:	8f 93       	push	r24
  d2:	9f 93       	push	r25
  d4:	ef 93       	push	r30
  d6:	ff 93       	push	r31
	gps[i]=UDR;
  d8:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  dc:	e8 2f       	mov	r30, r24
  de:	f0 e0       	ldi	r31, 0x00	; 0
  e0:	9c b1       	in	r25, 0x0c	; 12
  e2:	ef 59       	subi	r30, 0x9F	; 159
  e4:	ff 4f       	sbci	r31, 0xFF	; 255
  e6:	90 83       	st	Z, r25
	i++;
  e8:	8f 5f       	subi	r24, 0xFF	; 255
  ea:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
	if (i==5)
  ee:	85 30       	cpi	r24, 0x05	; 5
  f0:	19 f4       	brne	.+6      	; 0xf8 <__vector_13+0x32>
	{
		gps[6]='\0';
  f2:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <gps+0x6>
		cli();
  f6:	f8 94       	cli
	}
}
  f8:	ff 91       	pop	r31
  fa:	ef 91       	pop	r30
  fc:	9f 91       	pop	r25
  fe:	8f 91       	pop	r24
 100:	0f 90       	pop	r0
 102:	0f be       	out	0x3f, r0	; 63
 104:	0f 90       	pop	r0
 106:	1f 90       	pop	r1
 108:	18 95       	reti

0000010a <_exit>:
 10a:	f8 94       	cli

0000010c <__stop_program>:
 10c:	ff cf       	rjmp	.-2      	; 0x10c <__stop_program>
